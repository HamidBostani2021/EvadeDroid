class com.seattleclouds.modules.l.i extends android.os.AsyncTask
{
    final com.seattleclouds.modules.l.c a;

    private void <init>(com.seattleclouds.modules.l.c)
    {
        com.seattleclouds.modules.l.i $r0;
        com.seattleclouds.modules.l.c $r1;

        $r0 := @this: com.seattleclouds.modules.l.i;

        $r1 := @parameter0: com.seattleclouds.modules.l.c;

        $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a> = $r1;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    void <init>(com.seattleclouds.modules.l.c, com.seattleclouds.modules.l.d)
    {
        com.seattleclouds.modules.l.i $r0;
        com.seattleclouds.modules.l.c $r1;
        com.seattleclouds.modules.l.d $r2;

        $r0 := @this: com.seattleclouds.modules.l.i;

        $r1 := @parameter0: com.seattleclouds.modules.l.c;

        $r2 := @parameter1: com.seattleclouds.modules.l.d;

        specialinvoke $r0.<com.seattleclouds.modules.l.i: void <init>(com.seattleclouds.modules.l.c)>($r1);

        return;
    }

    protected transient java.lang.Integer a(java.util.HashMap[])
    {
        com.seattleclouds.modules.l.i $r0;
        java.util.HashMap[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.HashMap $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.Map$Entry $r8;
        org.json.JSONObject $r9;
        java.lang.Integer $r10;
        java.lang.Throwable $r11;
        org.json.JSONException $r12;

        $r0 := @this: com.seattleclouds.modules.l.i;

        $r1 := @parameter0: java.util.HashMap[];

        $r2 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r3 = <com.seattleclouds.App: java.lang.String q>;

     label03:
        $r3 = staticinvoke <com.seattleclouds.api.b: java.lang.String b(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

     label04:
        $r3 = <com.seattleclouds.App: java.lang.String q>;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loginregisterpostuserdata.ashx?publisherid=");

     label06:
        $r3 = <com.seattleclouds.App: java.lang.String v>;

     label07:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&username=");

     label08:
        $r3 = <com.seattleclouds.App: java.lang.String w>;

     label09:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&appid=");

     label10:
        $r3 = <com.seattleclouds.App: java.lang.String x>;

     label11:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&action=loginuser");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r4 = $r1[0];

     label13:
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label15:
        if $z0 == 0 goto label24;

     label16:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label17:
        $r8 = (java.util.Map$Entry) $r7;

        $r2 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

     label19:
        $r3 = (java.lang.String) $r7;

     label20:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

     label21:
        $r3 = (java.lang.String) $r7;

     label22:
        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        goto label14;

     label24:
        $r9 = new org.json.JSONObject;

     label25:
        $r3 = staticinvoke <com.seattleclouds.util.a: java.lang.String b(java.lang.String)>($r3);

        specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("status");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("OK");

     label26:
        if $z0 == 0 goto label29;

     label27:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label28:
        return $r10;

     label29:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("INVALID_PASSWORD");

     label30:
        if $z0 == 0 goto label33;

     label31:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

     label32:
        return $r10;

     label33:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PENDING_APPROVAL");

     label34:
        if $z0 == 0 goto label37;

     label35:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label36:
        return $r10;

     label37:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("USER_NOT_FOUND");

     label38:
        if $z0 == 0 goto label41;

     label39:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

     label40:
        return $r10;

     label41:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

     label42:
        return $r10;

     label43:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LoginLoginFragment", "Network error : ", $r11);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        return $r10;

     label44:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LoginLoginFragment", "Internal server error occurred : ", $r12);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        return $r10;

        catch java.io.IOException from label01 to label02 with label43;
        catch java.io.IOException from label03 to label04 with label43;
        catch java.io.IOException from label05 to label06 with label43;
        catch java.io.IOException from label07 to label08 with label43;
        catch java.io.IOException from label09 to label10 with label43;
        catch java.io.IOException from label11 to label12 with label43;
        catch java.io.IOException from label13 to label14 with label43;
        catch java.io.IOException from label14 to label15 with label43;
        catch java.io.IOException from label16 to label17 with label43;
        catch java.io.IOException from label18 to label19 with label43;
        catch java.io.IOException from label20 to label21 with label43;
        catch java.io.IOException from label22 to label23 with label43;
        catch java.io.IOException from label25 to label26 with label43;
        catch java.io.IOException from label27 to label28 with label43;
        catch java.io.IOException from label29 to label30 with label43;
        catch java.io.IOException from label31 to label32 with label43;
        catch java.io.IOException from label33 to label34 with label43;
        catch java.io.IOException from label35 to label36 with label43;
        catch java.io.IOException from label37 to label38 with label43;
        catch java.io.IOException from label39 to label40 with label43;
        catch java.io.IOException from label41 to label42 with label43;
        catch org.json.JSONException from label01 to label02 with label44;
        catch org.json.JSONException from label03 to label04 with label44;
        catch org.json.JSONException from label05 to label06 with label44;
        catch org.json.JSONException from label07 to label08 with label44;
        catch org.json.JSONException from label09 to label10 with label44;
        catch org.json.JSONException from label11 to label12 with label44;
        catch org.json.JSONException from label13 to label14 with label44;
        catch org.json.JSONException from label14 to label15 with label44;
        catch org.json.JSONException from label16 to label17 with label44;
        catch org.json.JSONException from label18 to label19 with label44;
        catch org.json.JSONException from label20 to label21 with label44;
        catch org.json.JSONException from label22 to label23 with label44;
        catch org.json.JSONException from label25 to label26 with label44;
        catch org.json.JSONException from label27 to label28 with label44;
        catch org.json.JSONException from label29 to label30 with label44;
        catch org.json.JSONException from label31 to label32 with label44;
        catch org.json.JSONException from label33 to label34 with label44;
        catch org.json.JSONException from label35 to label36 with label44;
        catch org.json.JSONException from label37 to label38 with label44;
        catch org.json.JSONException from label39 to label40 with label44;
        catch org.json.JSONException from label41 to label42 with label44;
    }

    protected void a(java.lang.Integer)
    {
        com.seattleclouds.modules.l.i $r0;
        java.lang.Integer $r1;
        boolean $z0;
        java.lang.String $r2;
        int $i0;
        com.seattleclouds.modules.l.c $r3;
        android.support.v4.app.ac $r4;
        android.widget.Toast $r5;
        com.seattleclouds.modules.l.g $r6;

        $r0 := @this: com.seattleclouds.modules.l.i;

        $r1 := @parameter0: java.lang.Integer;

        $z0 = 1;

        $r2 = "";

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label2;

        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $i0 = <com.seattleclouds.l: int login_register_login_successfully_logged_in>;

        $r2 = virtualinvoke $r3.<com.seattleclouds.modules.l.c: java.lang.String a_(int)>($i0);

     label1:
        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $r4 = virtualinvoke $r3.<com.seattleclouds.modules.l.c: android.support.v4.app.ac n()>();

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r4, $r2, 0);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        if $z0 == 0 goto label7;

        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $r6 = staticinvoke <com.seattleclouds.modules.l.c: com.seattleclouds.modules.l.g c(com.seattleclouds.modules.l.c)>($r3);

        interfaceinvoke $r6.<com.seattleclouds.modules.l.g: void ac()>();

        return;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 1 goto label3;

        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $i0 = <com.seattleclouds.l: int login_register_login_request_pending_approval>;

        $r2 = virtualinvoke $r3.<com.seattleclouds.modules.l.c: java.lang.String a_(int)>($i0);

        $z0 = 0;

        goto label1;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 2 goto label4;

        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $i0 = <com.seattleclouds.l: int login_register_login_invalid_email_or_password>;

        $r2 = virtualinvoke $r3.<com.seattleclouds.modules.l.c: java.lang.String a_(int)>($i0);

        $z0 = 0;

        goto label1;

     label4:
        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 3 goto label5;

        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $i0 = <com.seattleclouds.l: int login_register_login_user_doesnt_exist>;

        $r2 = virtualinvoke $r3.<com.seattleclouds.modules.l.c: java.lang.String a_(int)>($i0);

        $z0 = 0;

        goto label1;

     label5:
        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 4 goto label6;

        $r3 = $r0.<com.seattleclouds.modules.l.i: com.seattleclouds.modules.l.c a>;

        $i0 = <com.seattleclouds.l: int login_register_error_try_again>;

        $r2 = virtualinvoke $r3.<com.seattleclouds.modules.l.c: java.lang.String a_(int)>($i0);

        $z0 = 0;

        goto label1;

     label6:
        $z0 = 0;

        goto label1;

     label7:
        return;
    }

    protected java.lang.Object doInBackground(java.lang.Object[])
    {
        com.seattleclouds.modules.l.i $r0;
        java.lang.Integer $r1;
        java.lang.Object[] $r2;
        java.util.HashMap[] $r3;

        $r0 := @this: com.seattleclouds.modules.l.i;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.util.HashMap[]) $r2;

        $r1 = virtualinvoke $r0.<com.seattleclouds.modules.l.i: java.lang.Integer a(java.util.HashMap[])>($r3);

        return $r1;
    }

    protected void onPostExecute(java.lang.Object)
    {
        com.seattleclouds.modules.l.i $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        $r0 := @this: com.seattleclouds.modules.l.i;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) $r1;

        virtualinvoke $r0.<com.seattleclouds.modules.l.i: void a(java.lang.Integer)>($r2);

        return;
    }
}
