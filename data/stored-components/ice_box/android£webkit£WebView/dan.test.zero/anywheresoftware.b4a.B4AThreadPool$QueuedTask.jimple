class anywheresoftware.b4a.B4AThreadPool$QueuedTask extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.Object container;
    final java.lang.Runnable task;
    final int taskId;
    final anywheresoftware.b4a.B4AThreadPool this$0;

    public void <init>(anywheresoftware.b4a.B4AThreadPool, java.lang.Runnable, java.lang.Object, int)
    {
        anywheresoftware.b4a.B4AThreadPool$QueuedTask $r0;
        anywheresoftware.b4a.B4AThreadPool $r1;
        java.lang.Runnable $r2;
        java.lang.Object $r3;
        int $i0;

        $r0 := @this: anywheresoftware.b4a.B4AThreadPool$QueuedTask;

        $r1 := @parameter0: anywheresoftware.b4a.B4AThreadPool;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 := @parameter2: java.lang.Object;

        $i0 := @parameter3: int;

        $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: anywheresoftware.b4a.B4AThreadPool this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: java.lang.Runnable task> = $r2;

        $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: java.lang.Object container> = $r3;

        $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: int taskId> = $i0;

        return;
    }

    public void run()
    {
        anywheresoftware.b4a.B4AThreadPool$QueuedTask $r0;
        int $i0, $i1;
        anywheresoftware.b4a.B4AThreadPool $r1;
        java.util.concurrent.ThreadPoolExecutor $r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;
        java.lang.Object $r5;

        $r0 := @this: anywheresoftware.b4a.B4AThreadPool$QueuedTask;

        $r1 = $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: anywheresoftware.b4a.B4AThreadPool this$0>;

        $r2 = staticinvoke <anywheresoftware.b4a.B4AThreadPool: java.util.concurrent.ThreadPoolExecutor access$0(anywheresoftware.b4a.B4AThreadPool)>($r1);

        $i0 = virtualinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()>();

        $r1 = $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: anywheresoftware.b4a.B4AThreadPool this$0>;

        $r2 = staticinvoke <anywheresoftware.b4a.B4AThreadPool: java.util.concurrent.ThreadPoolExecutor access$0(anywheresoftware.b4a.B4AThreadPool)>($r1);

        $i1 = virtualinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()>();

        $i1 = $i1 + -5;

        if $i0 <= $i1 goto label1;

        $r3 = <anywheresoftware.b4a.BA: android.os.Handler handler>;

        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r0, 50L);

        return;

     label1:
        $r1 = $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: anywheresoftware.b4a.B4AThreadPool this$0>;

        $r4 = $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: java.lang.Runnable task>;

        $r5 = $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: java.lang.Object container>;

        $i0 = $r0.<anywheresoftware.b4a.B4AThreadPool$QueuedTask: int taskId>;

        staticinvoke <anywheresoftware.b4a.B4AThreadPool: void access$1(anywheresoftware.b4a.B4AThreadPool,java.lang.Runnable,java.lang.Object,int)>($r1, $r4, $r5, $i0);

        return;
    }
}
