public class com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout extends android.widget.LinearLayout
{
    private com.seattleclouds.widget.s a;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.content.Context $r1;
        android.app.Activity $r2;
        android.graphics.Rect $r3;
        android.view.Window $r4;
        android.view.View $r5;
        android.view.WindowManager $r6;
        android.view.Display $r7;
        com.seattleclouds.widget.s $r8;

        $r0 := @this: com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke $r0.<com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        return;

     label1:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $r1 = virtualinvoke $r0.<com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout: android.content.Context getContext()>();

        $r2 = (android.app.Activity) $r1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r4 = virtualinvoke $r2.<android.app.Activity: android.view.Window getWindow()>();

        $r5 = virtualinvoke $r4.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke $r5.<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>($r3);

        $i3 = $r3.<android.graphics.Rect: int top>;

        $r6 = virtualinvoke $r2.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r7 = interfaceinvoke $r6.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i4 = virtualinvoke $r7.<android.view.Display: int getHeight()>();

        $i3 = $i4 - $i3;

        $i2 = $i3 - $i2;

        $r8 = $r0.<com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout: com.seattleclouds.widget.s a>;

        if $r8 == null goto label3;

        $r8 = $r0.<com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout: com.seattleclouds.widget.s a>;

        $i4 = $i4 / 3;

        if $i2 <= $i4 goto label4;

        $z0 = 1;

     label2:
        interfaceinvoke $r8.<com.seattleclouds.widget.s: void a(boolean)>($z0);

     label3:
        specialinvoke $r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        return;

     label4:
        $z0 = 0;

        goto label2;
    }

    public void setSoftKeyboardVisibilityListener(com.seattleclouds.widget.s)
    {
        com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout $r0;
        com.seattleclouds.widget.s $r1;

        $r0 := @this: com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout;

        $r1 := @parameter0: com.seattleclouds.widget.s;

        $r0.<com.seattleclouds.widget.SoftKeyboardDetectingLinearLayout: com.seattleclouds.widget.s a> = $r1;

        return;
    }
}
