public abstract class com.seattleclouds.modules.nativetetris.a extends java.lang.Object implements java.lang.Cloneable
{
    protected android.graphics.Point a;
    protected android.graphics.Point[] b;
    protected com.seattleclouds.modules.nativetetris.BlockObject$BlockState c;
    protected java.lang.String d;

    public void <init>()
    {
        com.seattleclouds.modules.nativetetris.a $r0;
        android.graphics.Point $r1;
        android.graphics.Point[] $r2;
        com.seattleclouds.modules.nativetetris.BlockObject$BlockState $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Point;

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>(4, 0);

        $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a> = $r1;

        $r2 = newarray (android.graphics.Point)[4];

        $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b> = $r2;

        $r3 = <com.seattleclouds.modules.nativetetris.BlockObject$BlockState: com.seattleclouds.modules.nativetetris.BlockObject$BlockState STATE_0>;

        $r0.<com.seattleclouds.modules.nativetetris.a: com.seattleclouds.modules.nativetetris.BlockObject$BlockState c> = $r3;

        $r0.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "green";

        return;
    }

    android.graphics.Point a()
    {
        com.seattleclouds.modules.nativetetris.a $r0;
        android.graphics.Point r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.a;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        return r1;
    }

    void a(int, int)
    {
        com.seattleclouds.modules.nativetetris.a $r0;
        int $i0, $i1;
        android.graphics.Point $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $r1.<android.graphics.Point: int x> = $i0;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $r1.<android.graphics.Point: int y> = $i1;

        return;
    }

    void a(android.graphics.Canvas, android.graphics.drawable.Drawable, int, int)
    {
        com.seattleclouds.modules.nativetetris.a $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Point $r3;
        android.graphics.Point[] $r4;

        $r0 := @this: com.seattleclouds.modules.nativetetris.a;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[0];

        $i3 = $r3.<android.graphics.Point: int x>;

        $i2 = $i2 + $i3;

        $i2 = $i2 * $i0;

        $i2 = $i2 + $i1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i3 = $r3.<android.graphics.Point: int y>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[0];

        $i4 = $r3.<android.graphics.Point: int y>;

        $i3 = $i3 + $i4;

        $i3 = $i3 * $i0;

        $i4 = $i2 + $i0;

        $i5 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i3, $i4, $i5);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[1];

        $i3 = $r3.<android.graphics.Point: int x>;

        $i2 = $i2 + $i3;

        $i2 = $i2 * $i0;

        $i2 = $i2 + $i1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i3 = $r3.<android.graphics.Point: int y>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[1];

        $i4 = $r3.<android.graphics.Point: int y>;

        $i3 = $i3 + $i4;

        $i3 = $i3 * $i0;

        $i4 = $i2 + $i0;

        $i5 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i3, $i4, $i5);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[2];

        $i3 = $r3.<android.graphics.Point: int x>;

        $i2 = $i2 + $i3;

        $i2 = $i2 * $i0;

        $i2 = $i2 + $i1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i3 = $r3.<android.graphics.Point: int y>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[2];

        $i4 = $r3.<android.graphics.Point: int y>;

        $i3 = $i3 + $i4;

        $i3 = $i3 * $i0;

        $i4 = $i2 + $i0;

        $i5 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i3, $i4, $i5);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[3];

        $i3 = $r3.<android.graphics.Point: int x>;

        $i2 = $i2 + $i3;

        $i2 = $i2 * $i0;

        $i1 = $i2 + $i1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[3];

        $i3 = $r3.<android.graphics.Point: int y>;

        $i2 = $i2 + $i3;

        $i2 = $i2 * $i0;

        $i3 = $i1 + $i0;

        $i0 = $i2 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i2, $i3, $i0);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    abstract void a(com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection);

    public com.seattleclouds.modules.nativetetris.a b()
    {
        com.seattleclouds.modules.nativetetris.a $r0, $r2;
        java.lang.Object $r1;
        android.graphics.Point $r3, $r4;
        int $i0;
        android.graphics.Point[] $r5;
        com.seattleclouds.modules.nativetetris.BlockObject$BlockState $r6;
        java.lang.String $r7;

        $r0 := @this: com.seattleclouds.modules.nativetetris.a;

        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.seattleclouds.modules.nativetetris.a) $r1;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r4.<android.graphics.Point: int x>;

        $r3.<android.graphics.Point: int x> = $i0;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r4.<android.graphics.Point: int y>;

        $r3.<android.graphics.Point: int y> = $i0;

        $r5 = $r0.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r1 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (android.graphics.Point[]) $r1;

        $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b> = $r5;

        $r6 = $r0.<com.seattleclouds.modules.nativetetris.a: com.seattleclouds.modules.nativetetris.BlockObject$BlockState c>;

        $r2.<com.seattleclouds.modules.nativetetris.a: com.seattleclouds.modules.nativetetris.BlockObject$BlockState c> = $r6;

        $r7 = $r0.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = $r7;

        return $r2;
    }

    abstract int c();

    public java.lang.Object clone()
    {
        com.seattleclouds.modules.nativetetris.a $r0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.a;

        $r0 = virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.a: com.seattleclouds.modules.nativetetris.a b()>();

        return $r0;
    }
}
