class com.seattleclouds.modules.t.x extends android.view.View implements android.view.View$OnTouchListener
{
    final com.seattleclouds.modules.t.p a;
    private android.graphics.PointF b;
    private android.graphics.PointF c;
    private android.graphics.PointF d;
    private android.graphics.PointF e;
    private android.graphics.PointF f;
    private android.graphics.Path g;
    private android.graphics.Path h;
    private android.graphics.Path i;
    private android.graphics.Path j;
    private android.graphics.Path k;
    private float l;
    private float m;
    private android.graphics.Matrix n;
    private android.graphics.Rect o;
    private android.graphics.Point p;
    private final android.graphics.Paint q;
    private final android.graphics.Paint r;
    private final android.graphics.Paint s;
    private final android.graphics.Paint t;

    public void <init>(com.seattleclouds.modules.t.p, android.content.Context)
    {
        com.seattleclouds.modules.t.x $r0;
        com.seattleclouds.modules.t.p $r1;
        android.content.Context $r2;
        android.graphics.Path $r3;
        android.graphics.Matrix $r4;
        android.graphics.Point $r5;
        com.seattleclouds.modules.t.y $r6;
        com.seattleclouds.modules.t.z $r7;
        com.seattleclouds.modules.t.aa $r8;
        android.graphics.Paint $r9;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: com.seattleclouds.modules.t.p;

        $r2 := @parameter1: android.content.Context;

        $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a> = $r1;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context)>($r2);

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Path g> = $r3;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Path h> = $r3;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i> = $r3;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Path j> = $r3;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Path k> = $r3;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Matrix n> = $r4;

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o> = null;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>(int,int)>(170, 170);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Point p> = $r5;

        $r6 = new com.seattleclouds.modules.t.y;

        specialinvoke $r6.<com.seattleclouds.modules.t.y: void <init>(com.seattleclouds.modules.t.x)>($r0);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q> = $r6;

        $r7 = new com.seattleclouds.modules.t.z;

        specialinvoke $r7.<com.seattleclouds.modules.t.z: void <init>(com.seattleclouds.modules.t.x)>($r0);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint r> = $r7;

        $r8 = new com.seattleclouds.modules.t.aa;

        specialinvoke $r8.<com.seattleclouds.modules.t.aa: void <init>(com.seattleclouds.modules.t.x)>($r0);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint s> = $r8;

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>()>();

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint t> = $r9;

        virtualinvoke $r0.<com.seattleclouds.modules.t.x: void setOnTouchListener(android.view.View$OnTouchListener)>($r0);

        return;
    }

    private android.graphics.PointF a(android.graphics.PointF, float)
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.PointF $r1, $r2;
        float $f0, $f1, $f2, $f3;
        android.graphics.Rect $r3;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: android.graphics.PointF;

        $f0 := @parameter1: float;

        $r2 = new android.graphics.PointF;

        $f1 = $r1.<android.graphics.PointF: float x>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / $f0;

        $f2 = $r1.<android.graphics.PointF: float y>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $f0 = $f2 / $f0;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>($f1, $f0);

        return $r2;
    }

    private void a(android.graphics.PointF)
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.PointF $r1;
        float $f0, $f1;
        android.graphics.Rect $r2;
        int $i0;
        byte $b1;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: android.graphics.PointF;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label1;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $f0 = (float) $i0;

        $r1.<android.graphics.PointF: float x> = $f0;

     label1:
        $f0 = $r1.<android.graphics.PointF: float y>;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label2;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i0;

        $r1.<android.graphics.PointF: float y> = $f0;

     label2:
        $f0 = $r1.<android.graphics.PointF: float x>;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label3;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $f0 = (float) $i0;

        $r1.<android.graphics.PointF: float x> = $f0;

     label3:
        $f0 = $r1.<android.graphics.PointF: float y>;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label4;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i0;

        $r1.<android.graphics.PointF: float y> = $f0;

     label4:
        return;
    }

    private void a(android.graphics.Rect)
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.Rect $r1;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: android.graphics.Rect;

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o> = $r1;

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void b()>();

        return;
    }

    private void b()
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.PointF $r1;
        android.graphics.Rect $r2;
        int $i0;
        float $f0, $f1;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        if $r1 != null goto label1;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 + 10;

        $f0 = (float) $i0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + 10;

        $f1 = (float) $i0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b> = $r1;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 + -10;

        $f0 = (float) $i0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + 10;

        $f1 = (float) $i0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c> = $r1;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 + 10;

        $f0 = (float) $i0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + -10;

        $f1 = (float) $i0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d> = $r1;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 + -10;

        $f0 = (float) $i0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + -10;

        $f1 = (float) $i0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e> = $r1;

        return;

     label1:
        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void a(android.graphics.PointF)>($r1);

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void a(android.graphics.PointF)>($r1);

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void a(android.graphics.PointF)>($r1);

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void a(android.graphics.PointF)>($r1);

        virtualinvoke $r0.<com.seattleclouds.modules.t.x: void invalidate()>();

        return;
    }

    public android.graphics.PointF a(float)
    {
        com.seattleclouds.modules.t.x $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.PointF $r1, $r2;
        android.graphics.Rect $r3;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $f0 := @parameter0: float;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r2.<android.graphics.PointF: float x>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / $f0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r2.<android.graphics.PointF: float y>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $f0 = $f2 / $f0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f1, $f0);

        return $r1;
    }

    public void a()
    {
        com.seattleclouds.modules.t.x $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        com.seattleclouds.modules.t.p $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Rect $r3;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $i0 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $f0 = (float) $i0;

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r2 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r1);

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getHeight()>();

        $f1 = (float) $i0;

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r2 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r1);

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $i0 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $f1 = (float) $i0;

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r2 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r1);

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i0;

        $f2 = $f2 * $f0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $i0 = (int) $f1;

        $i1 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getHeight()>();

        $f1 = (float) $i1;

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r2 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r1);

        $i1 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i1;

        $f2 = $f2 * $f0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $i1 = (int) $f1;

        $f1 = (float) $i0;

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r2 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r1);

        $i2 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i2;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $i2 = (int) $f1;

        $f1 = (float) $i1;

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r2 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r1);

        $i3 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i3;

        $f0 = $f0 * $f2;

        $f0 = $f0 + $f1;

        $i3 = (int) $f0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void a(android.graphics.Rect)>($r3);

        $r1 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r0 = staticinvoke <com.seattleclouds.modules.t.p: com.seattleclouds.modules.t.x i(com.seattleclouds.modules.t.p)>($r1);

        virtualinvoke $r0.<com.seattleclouds.modules.t.x: void invalidate()>();

        return;
    }

    public void a(android.graphics.ColorMatrix)
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.ColorMatrix $r1;
        android.graphics.Paint $r2;
        android.graphics.ColorMatrixColorFilter $r3;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: android.graphics.ColorMatrix;

        if $r1 != null goto label2;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint t>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint s>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label1:
        virtualinvoke $r0.<com.seattleclouds.modules.t.x: void invalidate()>();

        return;

     label2:
        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint t>;

        $r3 = new android.graphics.ColorMatrixColorFilter;

        specialinvoke $r3.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>($r1);

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r3);

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint s>;

        $r3 = new android.graphics.ColorMatrixColorFilter;

        specialinvoke $r3.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>($r1);

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r3);

        goto label1;
    }

    public android.graphics.PointF b(float)
    {
        com.seattleclouds.modules.t.x $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.PointF $r1, $r2;
        android.graphics.Rect $r3;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $f0 := @parameter0: float;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r2.<android.graphics.PointF: float x>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / $f0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r2.<android.graphics.PointF: float y>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $f0 = $f2 / $f0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f1, $f0);

        return $r1;
    }

    public android.graphics.PointF c(float)
    {
        com.seattleclouds.modules.t.x $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.PointF $r1, $r2;
        android.graphics.Rect $r3;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $f0 := @parameter0: float;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r2.<android.graphics.PointF: float x>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / $f0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r2.<android.graphics.PointF: float y>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $f0 = $f2 / $f0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f1, $f0);

        return $r1;
    }

    public android.graphics.PointF d(float)
    {
        com.seattleclouds.modules.t.x $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.PointF $r1, $r2;
        android.graphics.Rect $r3;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $f0 := @parameter0: float;

        $r1 = new android.graphics.PointF;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r2.<android.graphics.PointF: float x>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / $f0;

        $r2 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r2.<android.graphics.PointF: float y>;

        $r3 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $f0 = $f2 / $f0;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f1, $f0);

        return $r1;
    }

    public void invalidate()
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.Path $r1;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path g>;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path h>;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path j>;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path k>;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        specialinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.seattleclouds.modules.t.x $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4;
        float[] $r2, $r3;
        com.seattleclouds.modules.t.p $r4;
        android.graphics.Bitmap $r5;
        boolean $z0;
        android.graphics.Rect $r6;
        android.graphics.Paint $r7;
        float $f0, $f1, $f2, $f3;
        android.graphics.PointF $r8, $r9, $r10, $r11;
        android.graphics.Point $r12;
        android.graphics.Matrix $r13;
        android.graphics.Path $r14;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r5 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r4);

        if $r5 == null goto label2;

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r5 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r4);

        $z0 = virtualinvoke $r5.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label2;

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r5 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r4);

        $r6 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint t>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r5, null, $r6, $r7);

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $z0 = staticinvoke <com.seattleclouds.modules.t.p: boolean h(com.seattleclouds.modules.t.p)>($r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $f0 = (float) $i0;

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r5 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r4);

        $i0 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getHeight()>();

        $f1 = (float) $i0;

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r5 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r4);

        $i0 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $r8 = specialinvoke $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF a(android.graphics.PointF,float)>($r8, $f0);

        $r9 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $r9 = specialinvoke $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF a(android.graphics.PointF,float)>($r9, $f0);

        $r10 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $r10 = specialinvoke $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF a(android.graphics.PointF,float)>($r10, $f0);

        $r11 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $r11 = specialinvoke $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF a(android.graphics.PointF,float)>($r11, $f0);

        $r12 = staticinvoke <com.seattleclouds.modules.t.a: android.graphics.Point c(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)>($r8, $r9, $r10, $r11);

        $i0 = $r12.<android.graphics.Point: int x>;

        $i1 = $r12.<android.graphics.Point: int y>;

        $r2 = newarray (float)[8];

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[0] = $f0;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[1] = $f0;

        $f0 = $r9.<android.graphics.PointF: float x>;

        $r2[2] = $f0;

        $f0 = $r9.<android.graphics.PointF: float y>;

        $r2[3] = $f0;

        $f0 = $r10.<android.graphics.PointF: float x>;

        $r2[4] = $f0;

        $f0 = $r10.<android.graphics.PointF: float y>;

        $r2[5] = $f0;

        $f0 = $r11.<android.graphics.PointF: float x>;

        $r2[6] = $f0;

        $f0 = $r11.<android.graphics.PointF: float y>;

        $r2[7] = $f0;

        $r3 = newarray (float)[8];

        $f0 = 0.0F;

        $r3[0] = $f0;

        $f0 = 0.0F;

        $r3[1] = $f0;

        $f0 = (float) $i0;

        $r3[2] = $f0;

        $f0 = 0.0F;

        $r3[3] = $f0;

        $f0 = 0.0F;

        $r3[4] = $f0;

        $f0 = (float) $i1;

        $r3[5] = $f0;

        $f0 = (float) $i0;

        $r3[6] = $f0;

        $f0 = (float) $i1;

        $r3[7] = $f0;

        $r12 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Point p>;

        $i2 = $r12.<android.graphics.Point: int x>;

        $i2 = $i0 / $i2;

        $r12 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Point p>;

        $i3 = $r12.<android.graphics.Point: int y>;

        $i3 = $i1 / $i3;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $f0 = (float) $i2;

        $r12 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Point p>;

        $i2 = $r12.<android.graphics.Point: int x>;

        $f1 = (float) $i0;

        $f1 = $f1 / $f0;

        $i3 = (int) $f1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r12 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Point p>;

        $i3 = $r12.<android.graphics.Point: int y>;

        $f1 = (float) $i1;

        $f0 = $f1 / $f0;

        $i4 = (int) $f0;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i4 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $i4 = $i4 - $i2;

        $i4 = $i4 + -2;

        $f0 = (float) $i4;

        $i4 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $f1 = (float) $i4;

        $i4 = $i3 + 2;

        $f2 = (float) $i4;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint r>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, 0.0F, $f1, $f2, $r7);

        $r13 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Matrix n>;

        virtualinvoke $r13.<android.graphics.Matrix: void reset()>();

        $r13 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Matrix n>;

        $i4 = lengthof $r2;

        $i4 = $i4 >> 1;

        virtualinvoke $r13.<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>($r2, 0, $r3, 0, $i4);

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i4 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $i4 = $i4 - $i2;

        $i4 = $i4 + -1;

        $f0 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 1.0F);

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, 0, $i2, $i3);

        $f0 = (float) $i2;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $f1 = (float) $i3;

        $f2 = (float) $i1;

        $f1 = $f1 / $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

        $r4 = $r0.<com.seattleclouds.modules.t.x: com.seattleclouds.modules.t.p a>;

        $r5 = staticinvoke <com.seattleclouds.modules.t.p: android.graphics.Bitmap g(com.seattleclouds.modules.t.p)>($r4);

        $r13 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Matrix n>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint s>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r5, $r13, $r7);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label2:
        $r2 = newarray (float)[16];

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[0] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[1] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[2] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[3] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[4] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[5] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[6] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[7] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[8] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[9] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[10] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[11] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[12] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[13] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r2[14] = $f0;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float y>;

        $r2[15] = $f0;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>($r2, $r7);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path g>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 0.6666F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 0.6666F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path g>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path g>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r7);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path h>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path h>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path h>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r7);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 0.6666F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 0.6666F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r7);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path j>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 0.6666F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 0.6666F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path j>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path j>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r7);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path k>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path k>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path k>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r7);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f0 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r8.<android.graphics.PointF: float x>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r8.<android.graphics.PointF: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f1 = $f1 / 0.6666F;

        $f0 = $f0 - $f1;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f1 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r8.<android.graphics.PointF: float y>;

        $r8 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f3 = $r8.<android.graphics.PointF: float y>;

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f2 = $f2 / 0.6666F;

        $f1 = $f1 - $f2;

        virtualinvoke $r14.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r14 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Path i>;

        $r7 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Paint q>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r14, $r7);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.seattleclouds.modules.t.x $r0;
        int $i0, $i1;
        android.graphics.Rect $r1;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.View: void onMeasure(int,int)>($i0, $i1);

        $r1 = $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o>;

        if $r1 != null goto label1;

        $r1 = new android.graphics.Rect;

        $i0 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.seattleclouds.modules.t.x: int getHeight()>();

        specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        $r0.<com.seattleclouds.modules.t.x: android.graphics.Rect o> = $r1;

     label1:
        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.seattleclouds.modules.t.x $r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0;
        android.graphics.RectF $r3, $r5, $r6, $r7;
        android.graphics.PointF $r4;
        boolean $z0;

        $r0 := @this: com.seattleclouds.modules.t.x;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label9;
            case 2: goto label7;
            case 3: goto label9;
            default: goto label1;
        };

     label1:
        $r0.<com.seattleclouds.modules.t.x: float l> = $f0;

        $r0.<com.seattleclouds.modules.t.x: float m> = $f1;

        return 1;

     label2:
        $r3 = new android.graphics.RectF;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f2 = $r4.<android.graphics.PointF: float x>;

        $f2 = $f2 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f3 = $r4.<android.graphics.PointF: float y>;

        $f3 = $f3 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f4 = $r4.<android.graphics.PointF: float x>;

        $f4 = $f4 + 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $f5 = $r4.<android.graphics.PointF: float y>;

        $f5 = $f5 + 100.0F;

        specialinvoke $r3.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);

        $r5 = new android.graphics.RectF;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f2 = $r4.<android.graphics.PointF: float x>;

        $f2 = $f2 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f3 = $r4.<android.graphics.PointF: float y>;

        $f3 = $f3 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f4 = $r4.<android.graphics.PointF: float x>;

        $f4 = $f4 + 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $f5 = $r4.<android.graphics.PointF: float y>;

        $f5 = $f5 + 100.0F;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);

        $r6 = new android.graphics.RectF;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f2 = $r4.<android.graphics.PointF: float x>;

        $f2 = $f2 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f3 = $r4.<android.graphics.PointF: float y>;

        $f3 = $f3 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f4 = $r4.<android.graphics.PointF: float x>;

        $f4 = $f4 + 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $f5 = $r4.<android.graphics.PointF: float y>;

        $f5 = $f5 + 100.0F;

        specialinvoke $r6.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);

        $r7 = new android.graphics.RectF;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f2 = $r4.<android.graphics.PointF: float x>;

        $f2 = $f2 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f3 = $r4.<android.graphics.PointF: float y>;

        $f3 = $f3 - 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f4 = $r4.<android.graphics.PointF: float x>;

        $f4 = $f4 + 100.0F;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $f5 = $r4.<android.graphics.PointF: float y>;

        $f5 = $f5 + 100.0F;

        specialinvoke $r7.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);

        $z0 = virtualinvoke $r3.<android.graphics.RectF: boolean contains(float,float)>($f0, $f1);

        if $z0 == 0 goto label3;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF b>;

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f> = $r4;

        goto label1;

     label3:
        $z0 = virtualinvoke $r5.<android.graphics.RectF: boolean contains(float,float)>($f0, $f1);

        if $z0 == 0 goto label4;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF c>;

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f> = $r4;

        goto label1;

     label4:
        $z0 = virtualinvoke $r6.<android.graphics.RectF: boolean contains(float,float)>($f0, $f1);

        if $z0 == 0 goto label5;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF d>;

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f> = $r4;

        goto label1;

     label5:
        $z0 = virtualinvoke $r7.<android.graphics.RectF: boolean contains(float,float)>($f0, $f1);

        if $z0 == 0 goto label6;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF e>;

        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f> = $r4;

        goto label1;

     label6:
        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f> = null;

        goto label1;

     label7:
        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f>;

        if $r4 != null goto label8;

        return 0;

     label8:
        $f2 = $r0.<com.seattleclouds.modules.t.x: float l>;

        $f3 = $f0 - $f2;

        $f2 = $r0.<com.seattleclouds.modules.t.x: float m>;

        $f2 = $f1 - $f2;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f>;

        $f4 = $r4.<android.graphics.PointF: float x>;

        $f3 = $f3 + $f4;

        $r4.<android.graphics.PointF: float x> = $f3;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f>;

        $f3 = $r4.<android.graphics.PointF: float y>;

        $f2 = $f2 + $f3;

        $r4.<android.graphics.PointF: float y> = $f2;

        $r4 = $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f>;

        specialinvoke $r0.<com.seattleclouds.modules.t.x: void a(android.graphics.PointF)>($r4);

        virtualinvoke $r0.<com.seattleclouds.modules.t.x: void invalidate()>();

        goto label1;

     label9:
        $r0.<com.seattleclouds.modules.t.x: android.graphics.PointF f> = null;

        virtualinvoke $r0.<com.seattleclouds.modules.t.x: void invalidate()>();

        goto label1;
    }
}
