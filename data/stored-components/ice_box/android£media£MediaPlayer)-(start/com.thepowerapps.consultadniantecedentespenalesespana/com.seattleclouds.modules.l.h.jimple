class com.seattleclouds.modules.l.h extends android.os.AsyncTask
{
    final com.seattleclouds.modules.l.c a;

    private void <init>(com.seattleclouds.modules.l.c)
    {
        com.seattleclouds.modules.l.h $r0;
        com.seattleclouds.modules.l.c $r1;

        $r0 := @this: com.seattleclouds.modules.l.h;

        $r1 := @parameter0: com.seattleclouds.modules.l.c;

        $r0.<com.seattleclouds.modules.l.h: com.seattleclouds.modules.l.c a> = $r1;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    void <init>(com.seattleclouds.modules.l.c, com.seattleclouds.modules.l.d)
    {
        com.seattleclouds.modules.l.h $r0;
        com.seattleclouds.modules.l.c $r1;
        com.seattleclouds.modules.l.d $r2;

        $r0 := @this: com.seattleclouds.modules.l.h;

        $r1 := @parameter0: com.seattleclouds.modules.l.c;

        $r2 := @parameter1: com.seattleclouds.modules.l.d;

        specialinvoke $r0.<com.seattleclouds.modules.l.h: void <init>(com.seattleclouds.modules.l.c)>($r1);

        return;
    }

    protected transient java.lang.Integer a(java.lang.String[])
    {
        com.seattleclouds.modules.l.h $r0;
        java.lang.String[] $r1;
        java.io.InputStream $r2;
        org.xmlpull.v1.XmlPullParserFactory $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        int $i0;
        java.lang.String $r5, $r6;
        boolean $z0;
        java.lang.Integer $r7;
        java.lang.Throwable $r8, $r10, $r12;
        org.xmlpull.v1.XmlPullParserException $r9;
        java.lang.Exception $r11;

        $r0 := @this: com.seattleclouds.modules.l.h;

        $r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <com.seattleclouds.App: java.io.InputStream e(java.lang.String)>("login_register.xml");

     label01:
        $r3 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r4 = virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r2, "UTF-8");

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        if $i0 == 1 goto label18;

        if $i0 != 2 goto label16;

        $r5 = "user";

     label03:
        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label04:
        if $z0 == 0 goto label16;

     label05:
        $r5 = $r1[0];

     label06:
        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "email");

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label07:
        if $z0 == 0 goto label16;

     label08:
        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "password");

     label09:
        $r6 = $r1[1];

     label10:
        $r6 = staticinvoke <com.seattleclouds.modules.l.m: java.lang.String a(java.lang.String)>($r6);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label11:
        if $z0 == 0 goto label14;

     label12:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label13:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label14:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

     label15:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label16:
        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label17:
        goto label02;

     label18:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        $r2 = staticinvoke <com.seattleclouds.App: java.io.InputStream e(java.lang.String)>("logindata/pending_login_register.xml");

     label19:
        $r3 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r4 = virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r2, "UTF-8");

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label20:
        if $i0 == 1 goto label43;

        if $i0 != 2 goto label41;

        $r5 = "user";

     label21:
        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label22:
        if $z0 == 0 goto label41;

     label23:
        $r5 = $r1[0];

     label24:
        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "email");

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label25:
        if $z0 == 0 goto label41;

     label26:
        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "password");

     label27:
        $r6 = $r1[1];

     label28:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label29:
        if $z0 == 0 goto label39;

     label30:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label31:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label32:
        $r8 := @caughtexception;

     label33:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LoginLoginFragment", "login and register fragment", $r8);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

     label34:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label35:
        $r9 := @caughtexception;

     label36:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LoginLoginFragment", "Error parser login and register", $r9);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

     label37:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label38:
        $r10 := @caughtexception;

        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        throw $r10;

     label39:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

     label40:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label41:
        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label42:
        goto label20;

     label43:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

     label44:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label45:
        $r11 := @caughtexception;

     label46:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LoginRegisterLogin", "Exception", $r11);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

     label47:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        return $r7;

     label48:
        $r12 := @caughtexception;

        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r2);

        throw $r12;

        catch java.io.IOException from label01 to label02 with label32;
        catch java.io.IOException from label03 to label04 with label32;
        catch java.io.IOException from label06 to label07 with label32;
        catch java.io.IOException from label08 to label09 with label32;
        catch java.io.IOException from label10 to label11 with label32;
        catch java.io.IOException from label12 to label13 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label35;
        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Throwable from label05 to label07 with label38;
        catch java.lang.Throwable from label08 to label11 with label38;
        catch java.lang.Throwable from label12 to label13 with label38;
        catch java.io.IOException from label14 to label15 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label35;
        catch java.lang.Throwable from label14 to label15 with label38;
        catch java.io.IOException from label16 to label17 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label35;
        catch java.lang.Throwable from label16 to label17 with label38;
        catch java.lang.Exception from label19 to label20 with label45;
        catch java.lang.Exception from label21 to label22 with label45;
        catch java.lang.Exception from label23 to label25 with label45;
        catch java.lang.Exception from label26 to label29 with label45;
        catch java.lang.Exception from label30 to label31 with label45;
        catch java.lang.Throwable from label19 to label20 with label48;
        catch java.lang.Throwable from label21 to label22 with label48;
        catch java.lang.Throwable from label24 to label25 with label48;
        catch java.lang.Throwable from label26 to label27 with label48;
        catch java.lang.Throwable from label28 to label29 with label48;
        catch java.lang.Throwable from label30 to label31 with label48;
        catch java.lang.Throwable from label33 to label34 with label38;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.lang.Exception from label39 to label40 with label45;
        catch java.lang.Throwable from label39 to label40 with label48;
        catch java.lang.Exception from label41 to label42 with label45;
        catch java.lang.Exception from label43 to label44 with label45;
        catch java.lang.Throwable from label41 to label42 with label48;
        catch java.lang.Throwable from label43 to label44 with label48;
        catch java.lang.Throwable from label46 to label47 with label48;
    }

    protected void a(java.lang.Integer)
    {
        com.seattleclouds.modules.l.h $r0;
        java.lang.Integer $r1;
        boolean $z0;
        int $i0;
        com.seattleclouds.modules.l.c $r2;
        com.seattleclouds.modules.l.g $r3;

        $r0 := @this: com.seattleclouds.modules.l.h;

        $r1 := @parameter0: java.lang.Integer;

        $z0 = 0;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $r2 = $r0.<com.seattleclouds.modules.l.h: com.seattleclouds.modules.l.c a>;

        $r3 = staticinvoke <com.seattleclouds.modules.l.c: com.seattleclouds.modules.l.g c(com.seattleclouds.modules.l.c)>($r2);

        interfaceinvoke $r3.<com.seattleclouds.modules.l.g: void ac()>();

        return;

     label2:
        $r2 = $r0.<com.seattleclouds.modules.l.h: com.seattleclouds.modules.l.c a>;

        virtualinvoke $r2.<com.seattleclouds.modules.l.c: void a(java.lang.Integer)>($r1);

        goto label1;

     label3:
        return;
    }

    protected java.lang.Object doInBackground(java.lang.Object[])
    {
        com.seattleclouds.modules.l.h $r0;
        java.lang.Integer $r1;
        java.lang.Object[] $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.seattleclouds.modules.l.h;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke $r0.<com.seattleclouds.modules.l.h: java.lang.Integer a(java.lang.String[])>($r3);

        return $r1;
    }

    protected void onPostExecute(java.lang.Object)
    {
        com.seattleclouds.modules.l.h $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        $r0 := @this: com.seattleclouds.modules.l.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) $r1;

        virtualinvoke $r0.<com.seattleclouds.modules.l.h: void a(java.lang.Integer)>($r2);

        return;
    }
}
