class com.seattleclouds.modules.nativetetris.v extends java.lang.Object
{
    com.seattleclouds.modules.nativetetris.q a;
    final com.seattleclouds.modules.nativetetris.TetrisView b;
    private int c;
    private int d;
    private int e;
    private android.content.Context f;
    private android.graphics.Bitmap g;
    private android.os.Handler h;
    private java.util.HashMap i;
    private android.view.SurfaceHolder j;
    private int k;
    private int l;

    public void <init>(com.seattleclouds.modules.nativetetris.TetrisView, android.view.SurfaceHolder, android.content.Context, android.os.Handler)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        com.seattleclouds.modules.nativetetris.TetrisView $r1;
        android.view.SurfaceHolder $r2;
        android.content.Context $r3;
        android.os.Handler $r4;
        com.seattleclouds.modules.nativetetris.q $r5;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r2 := @parameter1: android.view.SurfaceHolder;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: android.os.Handler;

        $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.seattleclouds.modules.nativetetris.v: int c> = 48;

        $r0.<com.seattleclouds.modules.nativetetris.v: int d> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.v: int e> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a> = null;

        $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j> = $r2;

        $r0.<com.seattleclouds.modules.nativetetris.v: android.os.Handler h> = $r4;

        $r0.<com.seattleclouds.modules.nativetetris.v: android.content.Context f> = $r3;

        $r5 = new com.seattleclouds.modules.nativetetris.q;

        specialinvoke $r5.<com.seattleclouds.modules.nativetetris.q: void <init>()>();

        $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a> = $r5;

        return;
    }

    private java.util.HashMap a(android.content.Context, java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r8;
        java.lang.String[] $r3;
        org.json.JSONObject $r4;
        java.util.HashMap $r5;
        android.content.res.Resources $r6;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r7, $r9, $r10;
        org.json.JSONException $r11;
        java.lang.StringBuilder $r12;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r4 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: org.json.JSONObject d(java.lang.String)>($r2);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>(7);

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.seattleclouds.g: int green>;

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r3 = newarray (java.lang.String)[10];

        $r3[0] = "blue";

        $r3[1] = "cyan";

        $r3[2] = "green";

        $r3[3] = "magenta";

        $r3[4] = "orange";

        $r3[5] = "red";

        $r3[6] = "yellow";

        $r3[7] = "background";

        $r3[8] = "pause";

        $r3[9] = "start";

        $i0 = lengthof $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label8;

        $r2 = $r3[$i1];

     label3:
        $r8 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r2);

        $r9 = staticinvoke <com.seattleclouds.App: android.graphics.drawable.Drawable j(java.lang.String)>($r8);

     label4:
        $r10 = $r9;

        if $r9 != null goto label5;

        $r10 = $r7;

     label5:
        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r10);

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        $r11 := @caughtexception;

        $r2 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR");

        $r8 = virtualinvoke $r11.<org.json.JSONException: java.lang.String getLocalizedMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r8, $r11);

     label8:
        return $r5;

        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    private void a(int, int, int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0, $i1, $i2, $i3, $i4;
        double $d0, $d1;
        com.seattleclouds.modules.nativetetris.TetrisView $r1;
        android.graphics.Rect $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.3;

        $d0 = $d0 - $d1;

        $i0 = (int) $d0;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>(0, $i0, $i1, $i2);

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect a(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Rect)>($r1, $r2);

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.6;

        $d0 = $d0 - $d1;

        $i0 = (int) $d0;

        $i3 = $i1 / 2;

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.3;

        $d0 = $d0 - $d1;

        $i4 = (int) $d0;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>(0, $i0, $i3, $i4);

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect b(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Rect)>($r1, $r2);

        $i0 = $i1 / 2;

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.6;

        $d0 = $d0 - $d1;

        $i3 = (int) $d0;

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.3;

        $d0 = $d0 - $d1;

        $i4 = (int) $d0;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i3, $i1, $i4);

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect c(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Rect)>($r1, $r2);

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.9;

        $d0 = $d0 - $d1;

        $i0 = (int) $d0;

        $d0 = (double) $i2;

        $d1 = (double) $i2;

        $d1 = $d1 * 0.6;

        $d0 = $d0 - $d1;

        $i2 = (int) $d0;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>(0, $i0, $i1, $i2);

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect d(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Rect)>($r1, $r2);

        return;
    }

    private void a(android.graphics.Canvas)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        java.util.HashMap $r3;
        com.seattleclouds.modules.nativetetris.q $r4;
        com.seattleclouds.modules.nativetetris.a $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;
        java.lang.Object $r8;
        android.graphics.drawable.Drawable $r9;
        android.content.Context $r10;
        android.content.res.Resources $r11;
        com.seattleclouds.modules.nativetetris.TetrisView $r12, $r13;
        android.graphics.Rect $r14;
        android.graphics.Paint$Style $r15;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: android.graphics.Canvas;

        if $r1 == null goto label7;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: android.graphics.Bitmap g>;

        if $r2 == null goto label7;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        if $r3 != null goto label1;

        return;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: android.graphics.Bitmap g>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, 0.0F, 0.0F, null);

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        if $r4 == null goto label6;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $r5 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d()>();

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $r6 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a e()>();

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int c>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: void a(android.graphics.Canvas,int,int,java.util.HashMap)>($r1, $i0, $i1, $r3);

     label2:
        if $r5 == null goto label3;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        $r7 = $r5.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        $r8 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (android.graphics.drawable.Drawable) $r8;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int c>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        virtualinvoke $r5.<com.seattleclouds.modules.nativetetris.a: void a(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int)>($r1, $r9, $i0, $i1);

     label3:
        if $r6 == null goto label4;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        $r7 = $r6.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        $r8 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (android.graphics.drawable.Drawable) $r8;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int c>;

        $i0 = $i0 / 2;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int e>;

        virtualinvoke $r6.<com.seattleclouds.modules.nativetetris.a: void a(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int)>($r1, $r9, $i0, $i1);

     label4:
        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: int f()>();

        if $i0 != 1 goto label5;

        $r10 = $r0.<com.seattleclouds.modules.nativetetris.v: android.content.Context f>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r13 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r14 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect d(com.seattleclouds.modules.nativetetris.TetrisView)>($r13);

        $i0 = <com.seattleclouds.l: int native_tetris_down>;

        $r7 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: void a(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Canvas,android.graphics.Rect,int,java.lang.String,android.graphics.Paint$Style,int,int)>($r12, $r1, $r14, -16776961, $r7, $r15, 2, 20);

        $r12 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r13 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r14 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect e(com.seattleclouds.modules.nativetetris.TetrisView)>($r13);

        $i0 = <com.seattleclouds.l: int native_tetris_left>;

        $r7 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: void a(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Canvas,android.graphics.Rect,int,java.lang.String,android.graphics.Paint$Style,int,int)>($r12, $r1, $r14, -65536, $r7, $r15, 2, 20);

        $r12 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r13 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r14 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect f(com.seattleclouds.modules.nativetetris.TetrisView)>($r13);

        $i0 = <com.seattleclouds.l: int native_tetris_right>;

        $r7 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: void a(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Canvas,android.graphics.Rect,int,java.lang.String,android.graphics.Paint$Style,int,int)>($r12, $r1, $r14, -256, $r7, $r15, 2, 20);

        $r12 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r13 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r14 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect g(com.seattleclouds.modules.nativetetris.TetrisView)>($r13);

        $i0 = <com.seattleclouds.l: int native_tetris_rotate>;

        $r7 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: void a(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Canvas,android.graphics.Rect,int,java.lang.String,android.graphics.Paint$Style,int,int)>($r12, $r1, $r14, -16711936, $r7, $r15, 2, 20);

     label5:
        $r12 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r13 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r14 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect h(com.seattleclouds.modules.nativetetris.TetrisView)>($r13);

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: void a(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Canvas,android.graphics.Rect,int,java.lang.String,android.graphics.Paint$Style,int,int)>($r12, $r1, $r14, -16777216, "", $r15, 4, 100);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label6:
        $r6 = null;

        $r5 = null;

        goto label2;

     label7:
        return;
    }

    private int b(int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $i0 = $i0 / 22;

        return $i0;
    }

    private int b(int, int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0, $i1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = $i1 * 10;

        $i0 = $i0 - $i1;

        $i0 = $i0 / 2;

        return $i0;
    }

    private void b(int, int, int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0, $i1, $i2, $i3;
        com.seattleclouds.modules.nativetetris.TetrisView $r1;
        android.graphics.Rect $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $i0 = $i0 + -1;

        $i3 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $i1 = $i1 - $i3;

        $i1 = $i1 + -1;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, 0, $i1, $i2);

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect e(com.seattleclouds.modules.nativetetris.TetrisView,android.graphics.Rect)>($r1, $r2);

        return;
    }

    private void c(int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0;
        android.os.Handler $r1;
        android.os.Message $r2;
        android.os.Bundle $r3;
        com.seattleclouds.modules.nativetetris.q $r4;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.os.Handler h>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage()>();

        if $r2 == null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("gameState", $i0);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: int i()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("score", $i0);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: int j()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("bscore", $i0);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: int h()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("level", $i0);

        virtualinvoke $r2.<android.os.Message: void setData(android.os.Bundle)>($r3);

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.os.Handler h>;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

     label1:
        return;
    }

    private org.json.JSONObject d(java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        java.lang.String $r1, $r7;
        org.json.JSONObject $r2, $r5, r11;
        int $i0;
        java.lang.StringBuilder $r3, r10;
        java.io.InputStream $r4;
        java.lang.Throwable $r6, $r8;
        org.json.JSONException $r9;
        java.lang.IllegalArgumentException r12;
        java.io.IOException r13;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: java.lang.String;

        $r5 = new org.json.JSONObject;

        $r2 = $r5;

        specialinvoke $r5.<org.json.JSONObject: void <init>()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.seattleclouds.App: java.io.InputStream e(java.lang.String)>($r1);

     label3:
        $r1 = staticinvoke <com.seattleclouds.util.bn: java.lang.String b(java.io.InputStream)>($r4);

     label4:
        r11 = new org.json.JSONObject;

     label5:
        specialinvoke r11.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label6:
        return r11;

     label7:
        $r6 := @caughtexception;

        $r1 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a()>();

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR:");

        r12 = (java.lang.IllegalArgumentException) $r6;

        $r7 = virtualinvoke r12.<java.lang.IllegalArgumentException: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r7, $r6);

        return $r2;

     label8:
        $r8 := @caughtexception;

        $r1 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a()>();

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR:");

        r13 = (java.io.IOException) $r8;

        $r7 = virtualinvoke r13.<java.io.IOException: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r7, $r8);

        return $r2;

     label9:
        $r9 := @caughtexception;

        $r1 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a()>();

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR:");

        $r7 = virtualinvoke $r9.<org.json.JSONException: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r7, $r9);

        return $r2;

        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
        catch org.json.JSONException from label3 to label4 with label9;
        catch org.json.JSONException from label5 to label6 with label9;
    }

    private void i()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        int $i0;
        com.seattleclouds.modules.nativetetris.q $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: int f()>();

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void c(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void a()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        int $i0;
        com.seattleclouds.modules.nativetetris.q $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: int f()>();

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(1);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void a(int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0;
        android.view.SurfaceHolder $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int,java.lang.CharSequence)>(2, null);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void a(int, int)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0, $i1;
        android.view.SurfaceHolder $r1;
        java.lang.String $r2;
        com.seattleclouds.modules.nativetetris.TetrisView $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r0.<com.seattleclouds.modules.nativetetris.v: int k> = $i0;

        $r0.<com.seattleclouds.modules.nativetetris.v: int l> = $i1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r2 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String c(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void c(java.lang.String)>($r2);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void a(int, java.lang.CharSequence)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        int $i0;
        java.lang.CharSequence $r1;
        android.view.SurfaceHolder $r2;
        com.seattleclouds.modules.nativetetris.q $r3;
        com.seattleclouds.modules.nativetetris.TetrisView $r4;
        java.util.Timer $r5;
        com.seattleclouds.modules.nativetetris.w $r6;
        long $l1;
        java.lang.Throwable $r7;
        com.seattleclouds.modules.nativetetris.a $r8;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r2;

        lookupswitch(2)
        {
            case 0: goto label03;
            case 1: goto label09;
            case 2: goto label11;
            default: goto label01;
        };

     label01:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void g()>();

        exitmonitor $r2;

     label02:
        return;

     label03:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void c(int)>(0);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: int f()>();

        if $i0 != 2 goto label08;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: void k()>();

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: void b()>();

     label04:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: void a(int)>(0);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        if $r5 == null goto label05;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        virtualinvoke $r5.<java.util.Timer: void cancel()>();

     label05:
        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = new java.util.Timer;

        specialinvoke $r5.<java.util.Timer: void <init>(java.lang.String,boolean)>("tetrisTimer", 1);

        staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView,java.util.Timer)>($r4, $r5);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        $r6 = new com.seattleclouds.modules.nativetetris.w;

        specialinvoke $r6.<com.seattleclouds.modules.nativetetris.w: void <init>(com.seattleclouds.modules.nativetetris.v)>($r0);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: int g()>();

        $l1 = (long) $i0;

        virtualinvoke $r5.<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>($r6, 0L, $l1);

        goto label01;

     label06:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label07:
        throw $r7;

     label08:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $r8 = virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d()>();

        if $r8 != null goto label04;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: void b()>();

        goto label04;

     label09:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void c(int)>(1);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        if $r5 == null goto label10;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        virtualinvoke $r5.<java.util.Timer: void cancel()>();

     label10:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: void a(int)>(1);

        goto label01;

     label11:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void c(int)>(2);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        if $r5 == null goto label12;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.TetrisView b>;

        $r5 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)>($r4);

        virtualinvoke $r5.<java.util.Timer: void cancel()>();

     label12:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.q: void a(int)>(2);

     label13:
        goto label01;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label07 with label06;
        catch java.lang.Throwable from label08 to label13 with label06;
    }

    public void a(java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        java.lang.String $r1;
        android.view.SurfaceHolder $r2;
        android.content.Context $r3;
        com.seattleclouds.modules.nativetetris.q $r4;
        java.lang.Throwable $r5, $r6;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r2;

     label2:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(1);

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.content.Context f>;

        virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: void b(android.content.Context,java.lang.String)>($r3, $r1);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void g()>();

        exitmonitor $r2;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor $r2;

     label6:
        throw $r5;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void b()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        com.seattleclouds.modules.nativetetris.q $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: boolean a(int,int)>(-1, 0);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void g()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void b(java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        java.lang.String $r1;
        android.view.SurfaceHolder $r2;
        android.content.Context $r3;
        com.seattleclouds.modules.nativetetris.q $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.content.Context f>;

        virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.q: void a(android.content.Context,java.lang.String)>($r3, $r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void c()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        com.seattleclouds.modules.nativetetris.q $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: boolean a(int,int)>(1, 0);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void g()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void c(java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        java.lang.String $r1, $r9;
        android.view.SurfaceHolder $r2;
        android.content.Context $r3;
        java.util.HashMap $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        android.graphics.drawable.BitmapDrawable $r6;
        android.graphics.Bitmap $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r10;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.content.Context f>;

        $r4 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap a(android.content.Context,java.lang.String)>($r3, $r1);

        $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i> = $r4;

        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        if $r4 == null goto label2;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int k>;

        if $i0 <= 0 goto label2;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int l>;

        if $i0 > 0 goto label4;

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("background");

        $r6 = (android.graphics.drawable.BitmapDrawable) $r5;

        $r7 = virtualinvoke $r6.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int k>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int l>;

        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r7, $i0, $i1, 1);

        $r0.<com.seattleclouds.modules.nativetetris.v: android.graphics.Bitmap g> = $r7;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int l>;

        $i0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: int b(int)>($i0);

        $r0.<com.seattleclouds.modules.nativetetris.v: int c> = $i0;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int k>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int c>;

        $i0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: int b(int,int)>($i0, $i1);

        $r0.<com.seattleclouds.modules.nativetetris.v: int d> = $i0;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int k>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 40;

        $r0.<com.seattleclouds.modules.nativetetris.v: int e> = $i0;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int k>;

        $i2 = $r0.<com.seattleclouds.modules.nativetetris.v: int l>;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int,int,int)>($i0, $i1, $i2);

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.v: int k>;

        $i2 = $r0.<com.seattleclouds.modules.nativetetris.v: int l>;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void b(int,int,int)>($i0, $i1, $i2);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(1);

        $r1 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBoxSize : ");

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int c>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBorderWidth : ");

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int d>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r9);

        $r1 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNextBlockLeftMargin : ");

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.v: int e>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r9);

        exitmonitor $r2;

     label5:
        return;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void d()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        com.seattleclouds.modules.nativetetris.q $r2;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $z0 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: boolean a(int,int)>(0, 1);

        if $z0 != 0 goto label4;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void i()>();

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: int f()>();

        if $i0 != 2 goto label2;

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(2);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void g()>();

        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void e()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        com.seattleclouds.modules.nativetetris.q $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: void c()>();

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void g()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void f()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.view.SurfaceHolder $r1;
        int $i0;
        com.seattleclouds.modules.nativetetris.q $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        $i0 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: int f()>();

        lookupswitch($i0)
        {
            case 0: goto label7;
            case 1: goto label4;
            case 2: goto label8;
            default: goto label2;
        };

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(0);

        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

     label7:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(1);

        goto label2;

     label8:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.v: com.seattleclouds.modules.nativetetris.q a>;

        virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.q: void a()>();

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(int)>(0);

     label9:
        goto label2;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
        catch java.lang.Throwable from label7 to label9 with label5;
    }

    public void g()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        android.graphics.Canvas $r1, $r2;
        android.view.SurfaceHolder $r3;
        java.lang.Throwable $r4, $r5;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        $r2 = null;

     label01:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        $r1 = interfaceinvoke $r3.<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

     label02:
        $r2 = $r1;

     label03:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        entermonitor $r3;

     label04:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.v: void a(android.graphics.Canvas)>($r1);

        exitmonitor $r3;

     label05:
        if $r1 == null goto label11;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>($r1);

        return;

     label06:
        $r4 := @caughtexception;

     label07:
        exitmonitor $r3;

     label08:
        throw $r4;

     label09:
        $r5 := @caughtexception;

        if $r2 == null goto label10;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.v: android.view.SurfaceHolder j>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>($r2);

     label10:
        throw $r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    public java.util.HashMap h()
    {
        com.seattleclouds.modules.nativetetris.v $r0;
        java.util.HashMap r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.v;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap i>;

        return r1;
    }
}
