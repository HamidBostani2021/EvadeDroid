class anywheresoftware.b4a.objects.collections.List$3 extends java.lang.Object implements java.util.Comparator
{
    final anywheresoftware.b4a.objects.collections.List this$0;

    void <init>(anywheresoftware.b4a.objects.collections.List)
    {
        anywheresoftware.b4a.objects.collections.List$3 $r0;
        anywheresoftware.b4a.objects.collections.List $r1;

        $r0 := @this: anywheresoftware.b4a.objects.collections.List$3;

        $r1 := @parameter0: anywheresoftware.b4a.objects.collections.List;

        $r0.<anywheresoftware.b4a.objects.collections.List$3: anywheresoftware.b4a.objects.collections.List this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Comparable, java.lang.Comparable)
    {
        anywheresoftware.b4a.objects.collections.List$3 $r0;
        java.lang.Comparable $r1, $r2;
        java.lang.String $r3, $r4;
        int $i0;

        $r0 := @this: anywheresoftware.b4a.objects.collections.List$3;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 := @parameter1: java.lang.Comparable;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r4);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        anywheresoftware.b4a.objects.collections.List$3 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Comparable $r3, $r4;

        $r0 := @this: anywheresoftware.b4a.objects.collections.List$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Comparable) $r1;

        $r4 = (java.lang.Comparable) $r2;

        $i0 = virtualinvoke $r0.<anywheresoftware.b4a.objects.collections.List$3: int compare(java.lang.Comparable,java.lang.Comparable)>($r3, $r4);

        return $i0;
    }
}
