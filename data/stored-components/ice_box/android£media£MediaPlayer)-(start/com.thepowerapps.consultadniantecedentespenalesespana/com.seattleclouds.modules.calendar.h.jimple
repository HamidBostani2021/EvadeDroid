public class com.seattleclouds.modules.calendar.h extends android.os.AsyncTask
{
    private static final java.lang.String a;
    private com.seattleclouds.modules.calendar.q b;
    private com.seattleclouds.util.bi c;
    private java.lang.String d;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lcom/seattleclouds/modules/calendar/h;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.seattleclouds.modules.calendar.h: java.lang.String a> = $r0;

        return;
    }

    public void <init>(com.seattleclouds.modules.calendar.q, java.lang.String)
    {
        com.seattleclouds.modules.calendar.h $r0;
        com.seattleclouds.modules.calendar.q $r1;
        java.lang.String $r2;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: com.seattleclouds.modules.calendar.q;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.util.bi c> = null;

        $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.modules.calendar.q b> = $r1;

        $r0.<com.seattleclouds.modules.calendar.h: java.lang.String d> = $r2;

        return;
    }

    protected transient java.lang.Void a(java.lang.String[])
    {
        com.seattleclouds.modules.calendar.h $r0;
        java.lang.String[] $r1;
        java.util.Date $r2, $r11, r22;
        com.seattleclouds.modules.calendar.q $r3;
        java.lang.String $r4, $r8, $r9, $r10, $r12, $r13, $r14;
        java.io.InputStream $r5;
        org.json.JSONObject $r6, r21;
        org.json.JSONArray $r7;
        int $i0, $i1;
        boolean $z0;
        long $l2;
        org.json.JSONException $r15, $r19;
        java.lang.StringBuilder $r16, r23;
        java.lang.Throwable $r17, $r20;
        java.lang.IndexOutOfBoundsException $r18;
        java.io.IOException r24;
        java.lang.UnsupportedOperationException r25;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: java.lang.String[];

        $r3 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.modules.calendar.q b>;

        virtualinvoke $r3.<com.seattleclouds.modules.calendar.q: boolean a()>();

        $r4 = $r0.<com.seattleclouds.modules.calendar.h: java.lang.String d>;

     label01:
        $r5 = staticinvoke <com.seattleclouds.App: java.io.InputStream e(java.lang.String)>($r4);

     label02:
        if $r5 != null goto label05;

        $r4 = <com.seattleclouds.modules.calendar.h: java.lang.String a>;

     label03:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, "Synced events resource not found");

     label04:
        return null;

     label05:
        $r4 = staticinvoke <com.seattleclouds.util.bn: java.lang.String b(java.io.InputStream)>($r5);

     label06:
        r21 = new org.json.JSONObject;

        $r6 = r21;

     label07:
        specialinvoke r21.<org.json.JSONObject: void <init>(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("events");

     label08:
        $i0 = 0;

     label09:
        $i1 = virtualinvoke $r7.<org.json.JSONArray: int length()>();

     label10:
        if $i0 >= $i1 goto label29;

     label11:
        $r6 = virtualinvoke $r7.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r8 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("recurringEventId");

     label12:
        $r4 = $r8;

        if $r8 == null goto label15;

     label13:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label14:
        if $z0 == 0 goto label15;

        $r4 = null;

     label15:
        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isActive");

     label16:
        if $z0 == 0 goto label24;

        $r3 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.modules.calendar.q b>;

     label17:
        $r8 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("title");

        $r9 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("category");

        $r10 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("location");

     label18:
        $r11 = new java.util.Date;

        $r2 = $r11;

     label19:
        $l2 = virtualinvoke $r6.<org.json.JSONObject: long getLong(java.lang.String)>("startDate");

        specialinvoke $r11.<java.util.Date: void <init>(long)>($l2);

     label20:
        r22 = new java.util.Date;

        $r11 = r22;

     label21:
        $l2 = virtualinvoke $r6.<org.json.JSONObject: long getLong(java.lang.String)>("endDate");

        specialinvoke r22.<java.util.Date: void <init>(long)>($l2);

        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isAllDay");

        $r12 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("caseNumber");

        $r13 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("reference");

        $r14 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("description");

        virtualinvoke $r3.<com.seattleclouds.modules.calendar.q: long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Date,boolean,java.lang.String,java.lang.String,boolean,java.lang.String)>($r4, $r8, $r9, $r10, $r2, $r11, $z0, $r12, $r13, 1, $r14);

        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isRepeat");

     label22:
        if $z0 == 0 goto label24;

     label23:
        virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: void a(org.json.JSONObject,java.lang.String)>($r6, $r4);

     label24:
        $i0 = $i0 + 1;

        goto label09;

     label25:
        $r15 := @caughtexception;

        $r4 = <com.seattleclouds.modules.calendar.h: java.lang.String a>;

        r23 = new java.lang.StringBuilder;

        $r16 = r23;

     label26:
        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing event ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r15.<org.json.JSONException: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r8);

     label27:
        goto label24;

     label28:
        $r17 := @caughtexception;

        $r4 = <com.seattleclouds.modules.calendar.h: java.lang.String a>;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event parsing error: ");

        r24 = (java.io.IOException) $r17;

        $r8 = virtualinvoke r24.<java.io.IOException: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r8, $r17);

     label29:
        return null;

     label30:
        $r18 := @caughtexception;

        $r4 = <com.seattleclouds.modules.calendar.h: java.lang.String a>;

        r23 = new java.lang.StringBuilder;

        $r16 = r23;

     label31:
        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing event ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r18.<java.lang.IndexOutOfBoundsException: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r8);

     label32:
        goto label24;

     label33:
        $r19 := @caughtexception;

        $r4 = <com.seattleclouds.modules.calendar.h: java.lang.String a>;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event parsing error: ");

        $r8 = virtualinvoke $r19.<org.json.JSONException: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r8, $r19);

        goto label29;

     label34:
        $r20 := @caughtexception;

        $r4 = <com.seattleclouds.modules.calendar.h: java.lang.String a>;

        r23 = new java.lang.StringBuilder;

        $r16 = r23;

     label35:
        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing event ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label36:
        r25 = (java.lang.UnsupportedOperationException) $r20;

     label37:
        $r8 = virtualinvoke r25.<java.lang.UnsupportedOperationException: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r8);

     label38:
        goto label24;

        catch java.io.IOException from label01 to label02 with label28;
        catch java.io.IOException from label03 to label04 with label28;
        catch java.io.IOException from label05 to label06 with label28;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.io.IOException from label09 to label10 with label28;
        catch org.json.JSONException from label01 to label02 with label33;
        catch org.json.JSONException from label03 to label04 with label33;
        catch org.json.JSONException from label05 to label06 with label33;
        catch org.json.JSONException from label07 to label08 with label33;
        catch org.json.JSONException from label09 to label10 with label33;
        catch org.json.JSONException from label11 to label12 with label25;
        catch org.json.JSONException from label13 to label14 with label25;
        catch org.json.JSONException from label15 to label16 with label25;
        catch org.json.JSONException from label17 to label18 with label25;
        catch org.json.JSONException from label19 to label20 with label25;
        catch org.json.JSONException from label21 to label22 with label25;
        catch org.json.JSONException from label23 to label24 with label25;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label30;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label30;
        catch java.lang.IndexOutOfBoundsException from label15 to label16 with label30;
        catch java.lang.IndexOutOfBoundsException from label17 to label18 with label30;
        catch java.lang.IndexOutOfBoundsException from label19 to label20 with label30;
        catch java.lang.IndexOutOfBoundsException from label21 to label22 with label30;
        catch java.lang.IndexOutOfBoundsException from label23 to label24 with label30;
        catch java.lang.UnsupportedOperationException from label11 to label12 with label34;
        catch java.lang.UnsupportedOperationException from label13 to label14 with label34;
        catch java.lang.UnsupportedOperationException from label15 to label16 with label34;
        catch java.lang.UnsupportedOperationException from label17 to label18 with label34;
        catch java.lang.UnsupportedOperationException from label19 to label20 with label34;
        catch java.lang.UnsupportedOperationException from label21 to label22 with label34;
        catch java.lang.UnsupportedOperationException from label23 to label24 with label34;
        catch java.io.IOException from label11 to label12 with label28;
        catch java.io.IOException from label13 to label14 with label28;
        catch java.io.IOException from label15 to label16 with label28;
        catch java.io.IOException from label17 to label18 with label28;
        catch java.io.IOException from label19 to label20 with label28;
        catch java.io.IOException from label21 to label22 with label28;
        catch java.io.IOException from label23 to label24 with label28;
        catch java.io.IOException from label26 to label27 with label28;
        catch org.json.JSONException from label26 to label27 with label33;
        catch java.io.IOException from label31 to label32 with label28;
        catch org.json.JSONException from label31 to label32 with label33;
        catch java.io.IOException from label35 to label36 with label28;
        catch java.io.IOException from label37 to label38 with label28;
        catch org.json.JSONException from label35 to label36 with label33;
        catch org.json.JSONException from label37 to label38 with label33;
    }

    public java.util.List a(java.util.Date, java.util.Date)
    {
        com.seattleclouds.modules.calendar.h $r0;
        java.util.Date $r1, $r2;
        java.util.ArrayList $r3;
        java.util.Calendar $r4, $r5;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Date;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r5.<java.util.Calendar: void setTime(java.util.Date)>($r2);

     label1:
        $z0 = virtualinvoke $r4.<java.util.Calendar: boolean after(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != $i0 goto label2;

        $r1 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        virtualinvoke $r4.<java.util.Calendar: void add(int,int)>(5, 1);

        goto label1;

     label3:
        return $r3;
    }

    public void a(com.seattleclouds.util.bi)
    {
        com.seattleclouds.modules.calendar.h $r0;
        com.seattleclouds.util.bi $r1;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: com.seattleclouds.util.bi;

        $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.util.bi c> = $r1;

        return;
    }

    protected void a(java.lang.Void)
    {
        com.seattleclouds.modules.calendar.h $r0;
        java.lang.Void $r1;
        com.seattleclouds.util.bi $r2;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: java.lang.Void;

        specialinvoke $r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        $r2 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.util.bi c>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.util.bi c>;

        interfaceinvoke $r2.<com.seattleclouds.util.bi: void a(java.lang.Object)>(null);

     label1:
        return;
    }

    protected void a(org.json.JSONObject, java.lang.String)
    {
        com.seattleclouds.modules.calendar.h $r0;
        org.json.JSONObject $r1;
        java.lang.String $r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.util.Date $r3, $r4, $r5, $r14;
        long $l0;
        boolean $z0, $z1;
        int $i1, $i2;
        com.seattleclouds.modules.calendar.q $r13;
        java.util.List $r15, $r16;
        java.util.Iterator $r17;
        java.lang.Object $r18;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.util.Date;

        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("startDate");

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l0);

        $r4 = new java.util.Date;

        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("endDate");

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        $r5 = new java.util.Date;

        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("repeatEndDate");

        specialinvoke $r5.<java.util.Date: void <init>(long)>($l0);

        $r6 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("repeatType");

        $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("title");

        $r8 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("category");

        $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("location");

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isAllDay");

        $r10 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("caseNumber");

        $r11 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("reference");

        $r12 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("description");

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("daily");

        if $z1 == 0 goto label02;

        $i1 = staticinvoke <com.seattleclouds.util.bo: int a(java.util.Date,java.util.Date,boolean)>($r3, $r5, 1);

        $i2 = 1;

     label01:
        if $i2 > $i1 goto label10;

        $r13 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.modules.calendar.q b>;

        $r5 = staticinvoke <com.seattleclouds.util.bo: java.util.Date a(java.util.Date,int)>($r3, $i2);

        $r14 = staticinvoke <com.seattleclouds.util.bo: java.util.Date a(java.util.Date,int)>($r4, $i2);

        virtualinvoke $r13.<com.seattleclouds.modules.calendar.q: long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Date,boolean,java.lang.String,java.lang.String,boolean,java.lang.String)>($r2, $r7, $r8, $r9, $r5, $r14, $z0, $r10, $r11, 1, $r12);

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("weekly");

        if $z1 == 0 goto label06;

        $r15 = virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: java.util.List a(java.util.Date,java.util.Date)>($r3, $r5);

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i1 <= 0 goto label03;

        interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(0);

     label03:
        $r16 = virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: java.util.List a(java.util.Date,java.util.Date)>($r4, $r5);

        $i1 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i1 <= 0 goto label04;

        interfaceinvoke $r16.<java.util.List: java.lang.Object remove(int)>(0);

     label04:
        $r17 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        $i1 = 0;

     label05:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Date) $r18;

        $r13 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.modules.calendar.q b>;

        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.util.Date) $r18;

        virtualinvoke $r13.<com.seattleclouds.modules.calendar.q: long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Date,boolean,java.lang.String,java.lang.String,boolean,java.lang.String)>($r2, $r7, $r8, $r9, $r3, $r4, $z0, $r10, $r11, 1, $r12);

        $i1 = $i1 + 1;

        goto label05;

     label06:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("monthly");

        if $z1 == 0 goto label10;

        $r15 = virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: java.util.List b(java.util.Date,java.util.Date)>($r3, $r5);

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i1 <= 0 goto label07;

        interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(0);

     label07:
        $r16 = virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: java.util.List b(java.util.Date,java.util.Date)>($r4, $r5);

        $i1 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i1 <= 0 goto label08;

        interfaceinvoke $r16.<java.util.List: java.lang.Object remove(int)>(0);

     label08:
        $r17 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        $i1 = 0;

     label09:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Date) $r18;

        $r13 = $r0.<com.seattleclouds.modules.calendar.h: com.seattleclouds.modules.calendar.q b>;

        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.util.Date) $r18;

        virtualinvoke $r13.<com.seattleclouds.modules.calendar.q: long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Date,boolean,java.lang.String,java.lang.String,boolean,java.lang.String)>($r2, $r7, $r8, $r9, $r3, $r4, $z0, $r10, $r11, 1, $r12);

        $i1 = $i1 + 1;

        goto label09;

     label10:
        return;
    }

    public java.util.List b(java.util.Date, java.util.Date)
    {
        com.seattleclouds.modules.calendar.h $r0;
        java.util.Date $r1, $r2;
        java.util.ArrayList $r3;
        java.util.Calendar $r4, $r5;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Date;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(5);

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r5.<java.util.Calendar: void setTime(java.util.Date)>($r2);

     label1:
        $z0 = virtualinvoke $r4.<java.util.Calendar: boolean after(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(5);

        if $i1 != $i0 goto label2;

        $r1 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        virtualinvoke $r4.<java.util.Calendar: void add(int,int)>(5, 1);

        goto label1;

     label3:
        return $r3;
    }

    protected java.lang.Object doInBackground(java.lang.Object[])
    {
        com.seattleclouds.modules.calendar.h $r0;
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: java.lang.Void a(java.lang.String[])>($r3);

        return $r1;
    }

    protected void onPostExecute(java.lang.Object)
    {
        com.seattleclouds.modules.calendar.h $r0;
        java.lang.Object $r1;
        java.lang.Void $r2;

        $r0 := @this: com.seattleclouds.modules.calendar.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) $r1;

        virtualinvoke $r0.<com.seattleclouds.modules.calendar.h: void a(java.lang.Void)>($r2);

        return;
    }
}
