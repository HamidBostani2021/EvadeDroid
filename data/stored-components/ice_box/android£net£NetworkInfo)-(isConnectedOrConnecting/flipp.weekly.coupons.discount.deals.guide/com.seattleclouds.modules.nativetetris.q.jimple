public class com.seattleclouds.modules.nativetetris.q extends java.lang.Object
{
    public static final java.lang.String a;
    static int b;
    private com.seattleclouds.modules.nativetetris.a c;
    private com.seattleclouds.modules.nativetetris.a d;
    private java.util.ArrayList e;
    private int f;
    private int g;
    private int h;
    private int i;
    private int j;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lcom/seattleclouds/modules/nativetetris/q;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.seattleclouds.modules.nativetetris.q: java.lang.String a> = $r0;

        <com.seattleclouds.modules.nativetetris.q: int b> = 0;

        return;
    }

    public void <init>()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        com.seattleclouds.modules.nativetetris.r $r1;
        java.util.ArrayList $r2;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.seattleclouds.modules.nativetetris.q: int j> = 22;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(220);

        $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e> = $r2;

        $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c> = null;

        $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d> = null;

        $i0 = 0;

     label1:
        if $i0 >= 220 goto label2;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r1 = new com.seattleclouds.modules.nativetetris.r;

        specialinvoke $r1.<com.seattleclouds.modules.nativetetris.r: void <init>(com.seattleclouds.modules.nativetetris.q)>($r0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int)>(3);

        return;
    }

    private void b(int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void l()>();

        return;

     label3:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void m()>();

        return;

     label4:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void n()>();

        return;
    }

    private void b(int, int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1, $i2;
        com.seattleclouds.modules.nativetetris.a $r1, $r2;
        android.graphics.Point $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a()>();

        $i2 = $r3.<android.graphics.Point: int x>;

        $i0 = $i2 + $i0;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a()>();

        $i2 = $r3.<android.graphics.Point: int y>;

        $i1 = $i2 + $i1;

        virtualinvoke $r1.<com.seattleclouds.modules.nativetetris.a: void a(int,int)>($i0, $i1);

        return;
    }

    private void c(int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        com.seattleclouds.modules.nativetetris.r $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        if $i1 >= 10 goto label2;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r1;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void d(int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.seattleclouds.modules.nativetetris.r $r3, $r4;
        boolean $z0;
        java.lang.String $r5;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        $i1 = 1;

        $i2 = $r0.<com.seattleclouds.modules.nativetetris.q: int j>;

        if $i2 >= 1 goto label4;

     label1:
        $r0.<com.seattleclouds.modules.nativetetris.q: int j> = $i1;

     label2:
        $i1 = $r0.<com.seattleclouds.modules.nativetetris.q: int j>;

        if $i0 < $i1 goto label6;

        $i1 = 0;

     label3:
        if $i1 >= 10 goto label5;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r2;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 + -1;

        $i2 = $i2 * 10;

        $i2 = $i2 + $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.seattleclouds.modules.nativetetris.r) $r2;

        $z0 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>($z0);

        $r5 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.r: java.lang.String b()>();

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>($r5);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i1 = $r0.<com.seattleclouds.modules.nativetetris.q: int j>;

        goto label1;

     label5:
        $i0 = $i0 + -1;

        goto label2;

     label6:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void c(int)>(0);

        return;
    }

    private void e(int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.q: int f>;

        $i1 = $i1 * 100;

        $i0 = $i0 - $i1;

        if $i0 < 100 goto label2;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int f>;

        $i0 = $i0 + 1;

        $r0.<com.seattleclouds.modules.nativetetris.q: int f> = $i0;

     label2:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $i1 = $r0.<com.seattleclouds.modules.nativetetris.q: int h>;

        if $i0 <= $i1 goto label7;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $r0.<com.seattleclouds.modules.nativetetris.q: int h> = $i0;

        return;

     label3:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $i0 = $i0 + 10;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = $i0;

        goto label1;

     label4:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $i0 = $i0 + 25;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = $i0;

        goto label1;

     label5:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $i0 = $i0 + 40;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = $i0;

        goto label1;

     label6:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        $i0 = $i0 + 55;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = $i0;

        goto label1;

     label7:
        return;
    }

    private void l()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.seattleclouds.modules.nativetetris.r $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 = 0;

     label1:
        if $i0 >= 22 goto label8;

        $i1 = 0;

     label2:
        if $i1 >= 10 goto label7;

        if $i0 != 21 goto label4;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r2;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>("red");

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        if $i0 != 20 goto label5;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r2;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>("blue");

        goto label3;

     label5:
        if $i0 != 19 goto label6;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r2;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>("blue");

        goto label3;

     label6:
        if $i0 != 18 goto label3;

        if $i1 == 8 goto label3;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r2;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>("blue");

        goto label3;

     label7:
        $i0 = $i0 + 1;

        goto label1;

     label8:
        return;
    }

    private void m()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;
        com.seattleclouds.modules.nativetetris.r $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 = 0;

     label1:
        if $i0 >= 22 goto label5;

        $i1 = 0;

     label2:
        if $i1 >= 10 goto label4;

        if $i0 != 21 goto label3;

        $i2 = $i1 % 2;

        if $i2 != 0 goto label3;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r1;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        return;
    }

    private void n()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;
        com.seattleclouds.modules.nativetetris.r $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 = 0;

     label1:
        if $i0 >= 22 goto label5;

        $i1 = 0;

     label2:
        if $i1 >= 10 goto label4;

        if $i0 != 21 goto label3;

        if $i1 == 5 goto label3;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r1;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        return;
    }

    private boolean o()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1;
        com.seattleclouds.modules.nativetetris.a $r1;
        android.graphics.Point $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r2 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r2.<android.graphics.Point: int x>;

        if $i0 < 0 goto label2;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r2 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r2.<android.graphics.Point: int x>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $i0 = virtualinvoke $r1.<com.seattleclouds.modules.nativetetris.a: int c()>();

        $i0 = $i1 + $i0;

        if $i0 <= 10 goto label3;

     label2:
        return 1;

     label3:
        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r2 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r2.<android.graphics.Point: int y>;

        $i0 = $i0 + 4;

        if $i0 <= 22 goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean p()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        com.seattleclouds.modules.nativetetris.a $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        android.graphics.Point $r3;
        int $i0, $i1, $i2;
        android.graphics.Point[] $r4;
        java.lang.Object $r5;
        com.seattleclouds.modules.nativetetris.r $r6, $r7, $r8, $r9;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean o()>();

        if $z0 != 0 goto label5;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[0];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[0];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[1];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[1];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[2];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[2];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[3];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r1.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[3];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $z0 = virtualinvoke $r6.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r7.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r8.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        if $z0 != 0 goto label4;

     label2:
        $z0 = 1;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        return 1;
    }

    private boolean q()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        boolean $z0, $z1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $z1 = 1;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(0, 1);

        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean p()>();

        if $z0 != 0 goto label2;

     label1:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(0, -1);

        return $z1;

     label2:
        $z1 = 0;

        goto label1;
    }

    private boolean r()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        boolean $z0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(-1, 0);

        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean p()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(1, 0);

        return $z0;

     label2:
        $z0 = 0;

        goto label1;
    }

    private boolean s()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        boolean $z0, $z1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $z1 = 1;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(1, 0);

        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean p()>();

        if $z0 != 0 goto label2;

     label1:
        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(-1, 0);

        return $z1;

     label2:
        $z1 = 0;

        goto label1;
    }

    private boolean t()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        boolean $z0, $z1;
        int $i0;
        com.seattleclouds.modules.nativetetris.a $r1;
        com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $z1 = 1;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int i>;

        if $i0 == 1 goto label1;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int i>;

        if $i0 != 2 goto label2;

     label1:
        return 0;

     label2:
        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r2 = <com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection: com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection CLOCKWISE>;

        virtualinvoke $r1.<com.seattleclouds.modules.nativetetris.a: void a(com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection)>($r2);

        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean p()>();

        if $z0 != 0 goto label4;

     label3:
        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r2 = <com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection: com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection COUNTER_CLOCKWISE>;

        virtualinvoke $r1.<com.seattleclouds.modules.nativetetris.a: void a(com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection)>($r2);

        return $z1;

     label4:
        $z1 = 0;

        goto label3;
    }

    private void u()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        java.util.ArrayList $r1;
        com.seattleclouds.modules.nativetetris.a $r2;
        android.graphics.Point $r3;
        int $i0, $i1, $i2;
        android.graphics.Point[] $r4;
        java.lang.Object $r5;
        com.seattleclouds.modules.nativetetris.r $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[0];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[0];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[1];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[1];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[2];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[2];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[3];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 10;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point[] b>;

        $r3 = $r4[3];

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.seattleclouds.modules.nativetetris.r) $r5;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int j>;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i1 = $r3.<android.graphics.Point: int x>;

        if $i0 <= $i1 goto label1;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r3 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r0.<com.seattleclouds.modules.nativetetris.q: int j> = $i0;

     label1:
        virtualinvoke $r6.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r10 = $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        virtualinvoke $r6.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>($r10);

        virtualinvoke $r7.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r10 = $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        virtualinvoke $r7.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>($r10);

        virtualinvoke $r8.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r10 = $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        virtualinvoke $r8.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>($r10);

        virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(0);

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r10 = $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d>;

        virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>($r10);

        return;
    }

    private java.util.ArrayList v()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        com.seattleclouds.modules.nativetetris.r $r4;
        boolean $z0;
        java.lang.Integer $r5;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 21;

     label1:
        if $i0 < 0 goto label6;

        $i1 = 0;

     label2:
        if $i1 >= 10 goto label7;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i2 = $i0 * 10;

        $i2 = $i2 + $i1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.seattleclouds.modules.nativetetris.r) $r3;

        $z0 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        if $z0 == 0 goto label5;

        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label4:
        $i0 = $i0 + -1;

        goto label1;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        return $r1;

     label7:
        $z0 = 1;

        goto label3;
    }

    private void w()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 = 0;

        $r1 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList v()>();

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void e(int)>($i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.Integer) $r2;

        $i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void c(int)>($i3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i0 >= $i1 goto label3;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i2 = $i2 + $i0;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void d(int)>($i2);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void a()
    {
        com.seattleclouds.modules.nativetetris.q $r0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int f> = 0;

        return;
    }

    public void a(int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        $r0.<com.seattleclouds.modules.nativetetris.q: int i> = $i0;

        return;
    }

    public void a(android.content.Context, java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r10;
        org.json.JSONObject $r3, $r4;
        int $i0;
        org.json.JSONArray $r5;
        java.util.ArrayList $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.seattleclouds.modules.nativetetris.r $r9;
        org.json.JSONException $r11;
        java.lang.StringBuilder $r12;
        android.content.SharedPreferences $r13;
        android.content.SharedPreferences$Editor $r14;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

     label01:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("GAME_SCORE", $i0);

     label02:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int h>;

     label03:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("GAME_BEST_SCORE", $i0);

     label04:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int f>;

     label05:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("GAME_LEVEL", $i0);

     label06:
        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int i>;

     label07:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("GAME_STATE", $i0);

     label08:
        $r5 = new org.json.JSONArray;

     label09:
        specialinvoke $r5.<org.json.JSONArray: void <init>()>();

     label10:
        $r6 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

     label11:
        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label13:
        if $z0 == 0 goto label19;

     label14:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label15:
        $r9 = (com.seattleclouds.modules.nativetetris.r) $r8;

        $r3 = new org.json.JSONObject;

     label16:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        $z0 = virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("IS_CELL_EMPTY", $z0);

        $r10 = virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: java.lang.String b()>();

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("CELL_IMG_RES", $r10);

        virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

     label17:
        goto label12;

     label18:
        $r11 := @caughtexception;

        $r2 = <com.seattleclouds.modules.nativetetris.q: java.lang.String a>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR:");

        $r10 = virtualinvoke $r11.<org.json.JSONException: java.lang.String getLocalizedMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r10, $r11);

        return;

     label19:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("GAME_BOARD", $r5);

     label20:
        if $r1 == null goto label22;

        $r12 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GAME_STATEnativeTetris");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r2, 0);

        $r14 = interfaceinvoke $r13.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String toString()>();

        interfaceinvoke $r14.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("GAME_STATE", $r2);

        interfaceinvoke $r14.<android.content.SharedPreferences$Editor: boolean commit()>();

     label22:
        return;

        catch org.json.JSONException from label01 to label02 with label18;
        catch org.json.JSONException from label03 to label04 with label18;
        catch org.json.JSONException from label05 to label06 with label18;
        catch org.json.JSONException from label07 to label08 with label18;
        catch org.json.JSONException from label09 to label10 with label18;
        catch org.json.JSONException from label11 to label13 with label18;
        catch org.json.JSONException from label14 to label15 with label18;
        catch org.json.JSONException from label16 to label17 with label18;
        catch org.json.JSONException from label19 to label20 with label18;
        catch org.json.JSONException from label21 to label22 with label18;
    }

    public void a(android.graphics.Canvas, int, int, java.util.HashMap)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.seattleclouds.modules.nativetetris.r $r5;
        boolean $z0;
        java.lang.String $r6;
        android.graphics.drawable.Drawable $r7;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.util.HashMap;

        $i2 = $i1;

        $i5 = 0;

        $i6 = $i2;

        $i4 = $i0;

        $i2 = $i2 + $i0;

        $i3 = 0;

     label1:
        if $i3 >= 22 goto label5;

        $i7 = 0;

     label2:
        if $i7 >= 10 goto label4;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $i8 = $i3 * 10;

        $i8 = $i8 + $i7;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r5 = (com.seattleclouds.modules.nativetetris.r) $r4;

        $z0 = virtualinvoke $r5.<com.seattleclouds.modules.nativetetris.r: boolean a()>();

        if $z0 != 0 goto label3;

        $r6 = virtualinvoke $r5.<com.seattleclouds.modules.nativetetris.r: java.lang.String b()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r7 = (android.graphics.drawable.Drawable) $r4;

        if $r7 == null goto label3;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i6, $i5, $i2, $i4);

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label3:
        $i7 = $i7 + 1;

        $i6 = $i2;

        $i2 = $i2 + $i0;

        goto label2;

     label4:
        $i6 = $i1;

        $i3 = $i3 + 1;

        $i2 = $i6 + $i0;

        $i7 = $i4;

        $i4 = $i4 + $i0;

        $i5 = $i7;

        goto label1;

     label5:
        return;
    }

    public boolean a(int, int)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0, $i1, $i2;
        com.seattleclouds.modules.nativetetris.a $r1;
        boolean $z0, $z1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<com.seattleclouds.modules.nativetetris.q: int i>;

        if $i2 == 1 goto label7;

        $i2 = $r0.<com.seattleclouds.modules.nativetetris.q: int i>;

        if $i2 != 2 goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        if $r1 == null goto label7;

        goto label6;

     label2:
        goto label3;

     label3:
        $z1 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean q()>();

        $z1 = $z1 & 1;

        $z0 = $z0 & $z1;

        if $z0 == 0 goto label5;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b(int,int)>(0, 1);

     label4:
        return 1;

     label5:
        if $z1 != 0 goto label4;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void u()>();

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void w()>();

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b()>();

        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean p()>();

        if $z0 == 0 goto label7;

        $r0.<com.seattleclouds.modules.nativetetris.q: int i> = 2;

        return 0;

     label6:
        $z0 = 1;

        goto label2;

     label7:
        return 0;
    }

    public void b()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        java.util.Random $r1, r10;
        long $l0;
        com.seattleclouds.modules.nativetetris.a $r2, $r3;
        int $i1;
        android.graphics.Point $r4;
        java.lang.Throwable $r5;
        java.lang.String $r6, $r8;
        java.lang.StringBuilder $r7, r18;
        java.util.Date r9;
        com.seattleclouds.modules.nativetetris.f r11;
        com.seattleclouds.modules.nativetetris.d r12;
        com.seattleclouds.modules.nativetetris.h r13;
        com.seattleclouds.modules.nativetetris.i r14;
        com.seattleclouds.modules.nativetetris.k r15;
        com.seattleclouds.modules.nativetetris.m r16;
        com.seattleclouds.modules.nativetetris.b r17;
        java.lang.CloneNotSupportedException r19;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        r10 = new java.util.Random;

        $r1 = r10;

        r9 = new java.util.Date;

        specialinvoke r9.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke r9.<java.util.Date: long getTime()>();

        specialinvoke r10.<java.util.Random: void <init>(long)>($l0);

        $r2 = null;

        $i1 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(7);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            default: goto label01;
        };

     label01:
        $i1 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(7);

        lookupswitch($i1)
        {
            case 0: goto label14;
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            default: goto label02;
        };

     label02:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d>;

        if $r3 != null goto label21;

     label03:
        $r2 = virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.a: com.seattleclouds.modules.nativetetris.a b()>();

     label04:
        $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d> = $r2;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $r4.<android.graphics.Point: int x> = 0;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d>;

        $r4 = $r2.<com.seattleclouds.modules.nativetetris.a: android.graphics.Point a>;

        $r4.<android.graphics.Point: int y> = 0;

     label05:
        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.q: void b()>();

     label06:
        return;

     label07:
        r11 = new com.seattleclouds.modules.nativetetris.f;

        $r2 = r11;

        specialinvoke r11.<com.seattleclouds.modules.nativetetris.f: void <init>()>();

        goto label01;

     label08:
        r12 = new com.seattleclouds.modules.nativetetris.d;

        $r2 = r12;

        specialinvoke r12.<com.seattleclouds.modules.nativetetris.d: void <init>()>();

        goto label01;

     label09:
        r13 = new com.seattleclouds.modules.nativetetris.h;

        $r2 = r13;

        specialinvoke r13.<com.seattleclouds.modules.nativetetris.h: void <init>()>();

        goto label01;

     label10:
        r14 = new com.seattleclouds.modules.nativetetris.i;

        $r2 = r14;

        specialinvoke r14.<com.seattleclouds.modules.nativetetris.i: void <init>()>();

        goto label01;

     label11:
        r15 = new com.seattleclouds.modules.nativetetris.k;

        $r2 = r15;

        specialinvoke r15.<com.seattleclouds.modules.nativetetris.k: void <init>()>();

        goto label01;

     label12:
        r16 = new com.seattleclouds.modules.nativetetris.m;

        $r2 = r16;

        specialinvoke r16.<com.seattleclouds.modules.nativetetris.m: void <init>()>();

        goto label01;

     label13:
        r17 = new com.seattleclouds.modules.nativetetris.b;

        $r2 = r17;

        specialinvoke r17.<com.seattleclouds.modules.nativetetris.b: void <init>()>();

        goto label01;

     label14:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "blue";

        goto label02;

     label15:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "cyan";

        goto label02;

     label16:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "green";

        goto label02;

     label17:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "magenta";

        goto label02;

     label18:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "orange";

        goto label02;

     label19:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "red";

        goto label02;

     label20:
        $r2.<com.seattleclouds.modules.nativetetris.a: java.lang.String d> = "yellow";

        goto label02;

     label21:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d>;

     label22:
        $r3 = virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.a: com.seattleclouds.modules.nativetetris.a b()>();

     label23:
        $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c> = $r3;

        $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d> = $r2;

        return;

     label24:
        $r5 := @caughtexception;

        $r6 = <com.seattleclouds.modules.nativetetris.q: java.lang.String a>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error:");

        r19 = (java.lang.CloneNotSupportedException) $r5;

        $r8 = virtualinvoke r19.<java.lang.CloneNotSupportedException: java.lang.String getLocalizedMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, $r8, $r5);

        return;

        catch java.lang.CloneNotSupportedException from label03 to label04 with label24;
        catch java.lang.CloneNotSupportedException from label05 to label06 with label24;
        catch java.lang.CloneNotSupportedException from label22 to label23 with label24;
    }

    public void b(android.content.Context, java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r11;
        java.lang.StringBuilder $r3;
        android.content.SharedPreferences $r4;
        int $i0, $i1;
        org.json.JSONObject $r5;
        org.json.JSONArray $r6;
        java.lang.Object $r7;
        java.util.ArrayList $r8;
        com.seattleclouds.modules.nativetetris.r $r9;
        boolean $z0;
        org.json.JSONException $r10;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label01;

        return;

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GAME_STATEnativeTetris");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r2, 0);

        $r2 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("GAME_STATE", "");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int h> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int f> = 0;

        return;

     label02:
        $r5 = new org.json.JSONObject;

     label03:
        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

        $i0 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("GAME_SCORE");

     label04:
        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = $i0;

     label05:
        $i0 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("GAME_BEST_SCORE");

     label06:
        $r0.<com.seattleclouds.modules.nativetetris.q: int h> = $i0;

     label07:
        $i0 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("GAME_LEVEL");

     label08:
        $r0.<com.seattleclouds.modules.nativetetris.q: int f> = $i0;

     label09:
        $i0 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("GAME_STATE");

     label10:
        $r0.<com.seattleclouds.modules.nativetetris.q: int i> = $i0;

     label11:
        $r6 = virtualinvoke $r5.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("GAME_BOARD");

        $i0 = virtualinvoke $r6.<org.json.JSONArray: int length()>();

     label12:
        $i1 = 0;

     label13:
        if $i1 >= $i0 goto label21;

     label14:
        $r7 = virtualinvoke $r6.<org.json.JSONArray: java.lang.Object get(int)>($i1);

     label15:
        $r5 = (org.json.JSONObject) $r7;

        $r8 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

     label16:
        $r7 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i1);

     label17:
        $r9 = (com.seattleclouds.modules.nativetetris.r) $r7;

     label18:
        $z0 = virtualinvoke $r5.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("IS_CELL_EMPTY");

        virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>($z0);

        $r2 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("CELL_IMG_RES");

        virtualinvoke $r9.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>($r2);

     label19:
        $i1 = $i1 + 1;

        goto label13;

     label20:
        $r10 := @caughtexception;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int h> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int f> = 0;

        $r2 = <com.seattleclouds.modules.nativetetris.q: java.lang.String a>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR:");

        $r11 = virtualinvoke $r10.<org.json.JSONException: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r11, $r10);

     label21:
        return;

        catch org.json.JSONException from label03 to label04 with label20;
        catch org.json.JSONException from label05 to label06 with label20;
        catch org.json.JSONException from label07 to label08 with label20;
        catch org.json.JSONException from label09 to label10 with label20;
        catch org.json.JSONException from label11 to label12 with label20;
        catch org.json.JSONException from label14 to label15 with label20;
        catch org.json.JSONException from label16 to label17 with label20;
        catch org.json.JSONException from label18 to label19 with label20;
    }

    public void c()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection $r1;
        boolean $z0;
        com.seattleclouds.modules.nativetetris.a $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        if $r2 == null goto label1;

        $z0 = specialinvoke $r0.<com.seattleclouds.modules.nativetetris.q: boolean t()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        $r1 = <com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection: com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection CLOCKWISE>;

        virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.a: void a(com.seattleclouds.modules.nativetetris.BlockObject$RotateDirection)>($r1);

     label1:
        return;
    }

    public com.seattleclouds.modules.nativetetris.a d()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        com.seattleclouds.modules.nativetetris.a r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a c>;

        return r1;
    }

    public com.seattleclouds.modules.nativetetris.a e()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        com.seattleclouds.modules.nativetetris.a r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.q: com.seattleclouds.modules.nativetetris.a d>;

        return r1;
    }

    public int f()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int i>;

        return i0;
    }

    public int g()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int f>;

        $i0 = $i0 * 2;

        $i0 = 2050 - $i0;

        return $i0;
    }

    public int h()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int f>;

        return i0;
    }

    public int i()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int g>;

        return i0;
    }

    public int j()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        int i0;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        i0 = $r0.<com.seattleclouds.modules.nativetetris.q: int h>;

        return i0;
    }

    public void k()
    {
        com.seattleclouds.modules.nativetetris.q $r0;
        java.lang.Object $r1;
        int $i0;
        java.util.ArrayList $r2;
        com.seattleclouds.modules.nativetetris.r $r3;

        $r0 := @this: com.seattleclouds.modules.nativetetris.q;

        $i0 = 0;

     label1:
        if $i0 >= 220 goto label2;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.q: java.util.ArrayList e>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.seattleclouds.modules.nativetetris.r) $r1;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(boolean)>(1);

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.r: void a(java.lang.String)>("empty");

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r0.<com.seattleclouds.modules.nativetetris.q: int f> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int g> = 0;

        $r0.<com.seattleclouds.modules.nativetetris.q: int i> = 1;

        return;
    }
}
