public class anywheresoftware.b4a.objects.streams.File$TextReaderWrapper extends anywheresoftware.b4a.AbsObjectWrapper
{

    public void <init>()
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        specialinvoke $r0.<anywheresoftware.b4a.AbsObjectWrapper: void <init>()>();

        return;
    }

    public void Close() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        java.lang.Object $r1;
        java.io.BufferedReader $r2;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.Object getObject()>();

        $r2 = (java.io.BufferedReader) $r1;

        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

        return;
    }

    public void Initialize(java.io.InputStream)
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        java.io.InputStream $r1;
        java.io.BufferedReader $r2;
        java.io.InputStreamReader $r3;
        java.nio.charset.Charset $r4;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF8");

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r1, $r4);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 4096);

        virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void setObject(java.lang.Object)>($r2);

        return;
    }

    public void Initialize2(java.io.InputStream, java.lang.String)
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        java.io.BufferedReader $r3;
        java.io.InputStreamReader $r4;
        java.nio.charset.Charset $r5;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r1, $r5);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r4, 4096);

        virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void setObject(java.lang.Object)>($r3);

        return;
    }

    public int Read(char[], int, int) throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.io.BufferedReader $r3;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.Object getObject()>();

        $r3 = (java.io.BufferedReader) $r2;

        $i0 = virtualinvoke $r3.<java.io.BufferedReader: int read(char[],int,int)>($r1, $i0, $i1);

        return $i0;
    }

    public java.lang.String ReadAll() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        char[] $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r3;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 = newarray (char)[1024];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(1024);

     label1:
        $i0 = lengthof $r1;

        $i0 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: int Read(char[],int,int)>($r1, 0, $i0);

        if $i0 != -1 goto label2;

        virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void Close()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r1);

        goto label1;
    }

    public java.lang.String ReadLine() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        java.lang.Object $r1;
        java.io.BufferedReader $r2;
        java.lang.String $r3;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.Object getObject()>();

        $r2 = (java.io.BufferedReader) $r1;

        $r3 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        return $r3;
    }

    public anywheresoftware.b4a.objects.collections.List ReadList() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        anywheresoftware.b4a.objects.collections.List $r1;
        java.lang.String $r2;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 = new anywheresoftware.b4a.objects.collections.List;

        specialinvoke $r1.<anywheresoftware.b4a.objects.collections.List: void <init>()>();

        virtualinvoke $r1.<anywheresoftware.b4a.objects.collections.List: void Initialize()>();

     label1:
        $r2 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.String ReadLine()>();

        if $r2 != null goto label2;

        virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void Close()>();

        return $r1;

     label2:
        virtualinvoke $r1.<anywheresoftware.b4a.objects.collections.List: void Add(java.lang.Object)>($r2);

        goto label1;
    }

    public boolean Ready() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        java.lang.Object $r1;
        java.io.BufferedReader $r2;
        boolean $z0;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.Object getObject()>();

        $r2 = (java.io.BufferedReader) $r1;

        $z0 = virtualinvoke $r2.<java.io.BufferedReader: boolean ready()>();

        return $z0;
    }

    public int Skip(int) throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r0;
        int $i0;
        long $l1;
        java.lang.Object $r1;
        java.io.BufferedReader $r2;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.Object getObject()>();

        $r2 = (java.io.BufferedReader) $r1;

        $l1 = (long) $i0;

        $l1 = virtualinvoke $r2.<java.io.BufferedReader: long skip(long)>($l1);

        $i0 = (int) $l1;

        return $i0;
    }
}
