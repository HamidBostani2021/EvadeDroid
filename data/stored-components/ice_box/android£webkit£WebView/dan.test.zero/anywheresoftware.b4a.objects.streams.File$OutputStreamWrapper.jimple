public class anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper extends anywheresoftware.b4a.AbsObjectWrapper
{

    public void <init>()
    {
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r0;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        specialinvoke $r0.<anywheresoftware.b4a.AbsObjectWrapper: void <init>()>();

        return;
    }

    public void Close() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r0;
        java.lang.Object $r1;
        java.io.OutputStream $r2;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r2 = (java.io.OutputStream) $r1;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }

    public void Flush() throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r0;
        java.lang.Object $r1;
        java.io.OutputStream $r2;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r2 = (java.io.OutputStream) $r1;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        return;
    }

    public void InitializeToBytesArray(int)
    {
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r0;
        int $i0;
        java.io.ByteArrayOutputStream $r1;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        $i0 := @parameter0: int;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: void setObject(java.lang.Object)>($r1);

        return;
    }

    public byte[] ToBytesArray()
    {
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.RuntimeException $r2;
        java.io.ByteArrayOutputStream $r3;
        byte[] $r4;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $z0 = $r1 instanceof java.io.ByteArrayOutputStream;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("ToBytes can only be called after InitializeToBytesArray.");

        throw $r2;

     label1:
        $r1 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r3 = (java.io.ByteArrayOutputStream) $r1;

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }

    public void WriteBytes(byte[], int, int) throws java.io.IOException
    {
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.io.OutputStream $r3;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r0.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r3 = (java.io.OutputStream) $r2;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
}
