class com.seattleclouds.modules.nativetetris.s extends com.seattleclouds.modules.nativetetris.u
{
    final com.seattleclouds.modules.nativetetris.TetrisView a;

    void <init>(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.s $r0;
        com.seattleclouds.modules.nativetetris.TetrisView $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.s;

        $r1 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a> = $r1;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.u: void <init>(com.seattleclouds.modules.nativetetris.s)>(null);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.seattleclouds.modules.nativetetris.s $r0;
        android.os.Message $r1;
        android.os.Bundle $r2;
        int $i0;
        com.seattleclouds.modules.nativetetris.TetrisView $r3;
        com.seattleclouds.modules.nativetetris.v $r4;
        java.util.HashMap $r5;
        android.widget.TextView $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        android.widget.ImageButton $r9;
        java.lang.Object $r10;
        android.graphics.drawable.Drawable $r11;

        $r0 := @this: com.seattleclouds.modules.nativetetris.s;

        $r1 := @parameter0: android.os.Message;

        $r2 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $i0 = virtualinvoke $r2.<android.os.Bundle: int getInt(java.lang.String)>("gameState");

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r4 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r5 = virtualinvoke $r4.<com.seattleclouds.modules.nativetetris.v: java.util.HashMap h()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView k(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $i0 = virtualinvoke $r2.<android.os.Bundle: int getInt(java.lang.String)>("score");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView l(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $i0 = virtualinvoke $r2.<android.os.Bundle: int getInt(java.lang.String)>("bscore");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView m(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $i0 = virtualinvoke $r2.<android.os.Bundle: int getInt(java.lang.String)>("level");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        return;

     label2:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        virtualinvoke $r6.<android.widget.TextView: void setVisibility(int)>(8);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>("Is Runing");

        if $r5 == null goto label1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r9 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.ImageButton j(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r10 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("pause");

        $r11 = (android.graphics.drawable.Drawable) $r10;

        virtualinvoke $r9.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r11);

        goto label1;

     label3:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        virtualinvoke $r6.<android.widget.TextView: void setVisibility(int)>(0);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $i0 = <com.seattleclouds.l: int native_tetris_state_paused>;

        virtualinvoke $r6.<android.widget.TextView: void setText(int)>($i0);

        if $r5 == null goto label1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r9 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.ImageButton j(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r10 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("start");

        $r11 = (android.graphics.drawable.Drawable) $r10;

        virtualinvoke $r9.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r11);

        goto label1;

     label4:
        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        virtualinvoke $r6.<android.widget.TextView: void setVisibility(int)>(0);

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r6 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $i0 = <com.seattleclouds.l: int native_tetris_state_game_over>;

        virtualinvoke $r6.<android.widget.TextView: void setText(int)>($i0);

        if $r5 == null goto label1;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.s: com.seattleclouds.modules.nativetetris.TetrisView a>;

        $r9 = staticinvoke <com.seattleclouds.modules.nativetetris.TetrisView: android.widget.ImageButton j(com.seattleclouds.modules.nativetetris.TetrisView)>($r3);

        $r10 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("start");

        $r11 = (android.graphics.drawable.Drawable) $r10;

        virtualinvoke $r9.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r11);

        goto label1;
    }
}
