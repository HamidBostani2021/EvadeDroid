final class com.seattleclouds.modules.feedback.k extends android.os.AsyncTask
{
    final com.seattleclouds.modules.feedback.c a;
    private final java.lang.String b;
    private final android.app.Activity c;
    private android.app.ProgressDialog d;
    private com.seattleclouds.util.bi e;

    public void <init>(com.seattleclouds.modules.feedback.c, android.app.Activity)
    {
        com.seattleclouds.modules.feedback.k $r0;
        com.seattleclouds.modules.feedback.c $r1;
        android.app.Activity $r2;
        com.seattleclouds.t $r3;
        java.lang.String $r4;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: com.seattleclouds.modules.feedback.c;

        $r2 := @parameter1: android.app.Activity;

        $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.modules.feedback.c a> = $r1;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        $r1 = $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.modules.feedback.c a>;

        $r3 = staticinvoke <com.seattleclouds.modules.feedback.c: com.seattleclouds.t n(com.seattleclouds.modules.feedback.c)>($r1);

        $r4 = virtualinvoke $r3.<com.seattleclouds.t: java.lang.String z()>();

        $r0.<com.seattleclouds.modules.feedback.k: java.lang.String b> = $r4;

        $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.util.bi e> = null;

        $r0.<com.seattleclouds.modules.feedback.k: android.app.Activity c> = $r2;

        return;
    }

    protected transient java.lang.String a(java.lang.String[])
    {
        com.seattleclouds.modules.feedback.k $r0;
        java.lang.String[] $r1;
        com.seattleclouds.modules.feedback.c $r2;
        com.seattleclouds.t $r3;
        java.util.ArrayList $r4;
        org.xmlpull.v1.XmlPullParser $r5;
        java.lang.String $r6, $r12;
        int $i0;
        java.io.InputStream $r7;
        com.seattleclouds.modules.feedback.LocationModel $r8;
        boolean $z0, $z1;
        java.net.URL $r9;
        org.xmlpull.v1.XmlPullParserException $r10;
        java.lang.StringBuilder $r11;
        double $d0;
        java.lang.Throwable $r13, $r14, $r15, $r16;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: java.lang.String[];

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.modules.feedback.c a>;

        $r3 = staticinvoke <com.seattleclouds.modules.feedback.c: com.seattleclouds.t n(com.seattleclouds.modules.feedback.c)>($r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r3.<com.seattleclouds.t: java.util.ArrayList c> = $r4;

        $r5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r6 = $r0.<com.seattleclouds.modules.feedback.k: java.lang.String b>;

     label01:
        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("/");

     label02:
        if $i0 != -1 goto label09;

        $r6 = $r0.<com.seattleclouds.modules.feedback.k: java.lang.String b>;

     label03:
        $r7 = staticinvoke <com.seattleclouds.App: java.io.InputStream c(java.lang.String)>($r6);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r7, null);

     label04:
        $i0 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label05:
        $r6 = "";

        $r8 = null;

        $z0 = 0;

     label06:
        if $i0 == 1 goto label13;

        if $z0 != 0 goto label13;

        lookupswitch($i0)
        {
            case 0: goto label14;
            case 1: goto label07;
            case 2: goto label15;
            case 3: goto label21;
            case 4: goto label19;
            default: goto label07;
        };

     label07:
        $i0 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: int next()>();

     label08:
        goto label06;

     label09:
        $r9 = new java.net.URL;

        $r6 = $r0.<com.seattleclouds.modules.feedback.k: java.lang.String b>;

     label10:
        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r9.<java.net.URL: java.io.InputStream openStream()>();

        interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r7, null);

     label11:
        goto label04;

     label12:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doFindLocationParsing: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ParseLocationsAsyncTask", $r6, $r10);

     label13:
        return "ok";

     label14:
        goto label07;

     label15:
        $r12 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("location");

     label16:
        if $z1 == 0 goto label07;

        $r8 = new com.seattleclouds.modules.feedback.LocationModel;

     label17:
        specialinvoke $r8.<com.seattleclouds.modules.feedback.LocationModel: void <init>()>();

     label18:
        goto label07;

     label19:
        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label20:
        goto label07;

     label21:
        $r12 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("location");

     label22:
        if $z1 == 0 goto label27;

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.modules.feedback.c a>;

     label23:
        $r3 = staticinvoke <com.seattleclouds.modules.feedback.c: com.seattleclouds.t n(com.seattleclouds.modules.feedback.c)>($r2);

     label24:
        $r4 = $r3.<com.seattleclouds.t: java.util.ArrayList c>;

     label25:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label26:
        goto label07;

     label27:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("name");

     label28:
        if $z1 == 0 goto label31;

     label29:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label30:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: java.lang.String a> = $r12;

        goto label07;

     label31:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("latitude");

     label32:
        if $z1 == 0 goto label36;

     label33:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);

     label34:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: double b> = $d0;

        goto label07;

     label35:
        $r13 := @caughtexception;

        $d0 = 0.0;

        goto label34;

     label36:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("longitude");

     label37:
        if $z1 == 0 goto label41;

     label38:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);

     label39:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: double c> = $d0;

        goto label07;

     label40:
        $r14 := @caughtexception;

        $d0 = 0.0;

        goto label39;

     label41:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("type");

     label42:
        if $z1 == 0 goto label45;

     label43:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label44:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: java.lang.String e> = $r12;

        goto label07;

     label45:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("imageurl");

     label46:
        if $z1 == 0 goto label49;

     label47:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label48:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: java.lang.String f> = $r12;

        goto label07;

     label49:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("target");

     label50:
        if $z1 == 0 goto label53;

     label51:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label52:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: java.lang.String d> = $r12;

        goto label07;

     label53:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("description");

     label54:
        if $z1 == 0 goto label57;

     label55:
        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label56:
        $r8.<com.seattleclouds.modules.feedback.LocationModel: java.lang.String g> = $r12;

        goto label07;

     label57:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("document");

     label58:
        if $z1 == 0 goto label07;

        $z0 = 1;

        goto label07;

     label59:
        $r15 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doFindLocationParsing: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ParseLocationsAsyncTask", $r6, $r15);

        goto label13;

     label60:
        $r16 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doFindLocationParsing: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ParseLocationsAsyncTask", $r6, $r16);

        goto label13;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label05 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label12;
        catch java.io.FileNotFoundException from label01 to label02 with label59;
        catch java.io.FileNotFoundException from label03 to label05 with label59;
        catch java.io.FileNotFoundException from label07 to label08 with label59;
        catch java.io.FileNotFoundException from label10 to label11 with label59;
        catch java.io.IOException from label01 to label02 with label60;
        catch java.io.IOException from label03 to label05 with label60;
        catch java.io.IOException from label07 to label08 with label60;
        catch java.io.IOException from label10 to label11 with label60;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label12;
        catch java.io.FileNotFoundException from label15 to label16 with label59;
        catch java.io.FileNotFoundException from label17 to label18 with label59;
        catch java.io.FileNotFoundException from label19 to label20 with label59;
        catch java.io.FileNotFoundException from label21 to label22 with label59;
        catch java.io.FileNotFoundException from label23 to label24 with label59;
        catch java.io.FileNotFoundException from label25 to label26 with label59;
        catch java.io.FileNotFoundException from label27 to label28 with label59;
        catch java.io.FileNotFoundException from label29 to label30 with label59;
        catch java.io.FileNotFoundException from label31 to label32 with label59;
        catch java.io.IOException from label15 to label16 with label60;
        catch java.io.IOException from label17 to label18 with label60;
        catch java.io.IOException from label19 to label20 with label60;
        catch java.io.IOException from label21 to label22 with label60;
        catch java.io.IOException from label23 to label24 with label60;
        catch java.io.IOException from label25 to label26 with label60;
        catch java.io.IOException from label27 to label28 with label60;
        catch java.io.IOException from label29 to label30 with label60;
        catch java.io.IOException from label31 to label32 with label60;
        catch java.lang.NumberFormatException from label33 to label34 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label12;
        catch java.io.FileNotFoundException from label33 to label34 with label59;
        catch java.io.IOException from label33 to label34 with label60;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label12;
        catch java.io.FileNotFoundException from label36 to label37 with label59;
        catch java.io.IOException from label36 to label37 with label60;
        catch java.lang.NumberFormatException from label38 to label39 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label12;
        catch java.io.FileNotFoundException from label38 to label39 with label59;
        catch java.io.IOException from label38 to label39 with label60;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label45 to label46 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label47 to label48 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label49 to label50 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label51 to label52 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label53 to label54 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label55 to label56 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label57 to label58 with label12;
        catch java.io.FileNotFoundException from label41 to label42 with label59;
        catch java.io.FileNotFoundException from label43 to label44 with label59;
        catch java.io.FileNotFoundException from label45 to label46 with label59;
        catch java.io.FileNotFoundException from label47 to label48 with label59;
        catch java.io.FileNotFoundException from label49 to label50 with label59;
        catch java.io.FileNotFoundException from label51 to label52 with label59;
        catch java.io.FileNotFoundException from label53 to label54 with label59;
        catch java.io.FileNotFoundException from label55 to label56 with label59;
        catch java.io.FileNotFoundException from label57 to label58 with label59;
        catch java.io.IOException from label41 to label42 with label60;
        catch java.io.IOException from label43 to label44 with label60;
        catch java.io.IOException from label45 to label46 with label60;
        catch java.io.IOException from label47 to label48 with label60;
        catch java.io.IOException from label49 to label50 with label60;
        catch java.io.IOException from label51 to label52 with label60;
        catch java.io.IOException from label53 to label54 with label60;
        catch java.io.IOException from label55 to label56 with label60;
        catch java.io.IOException from label57 to label58 with label60;
    }

    public void a(com.seattleclouds.util.bi)
    {
        com.seattleclouds.modules.feedback.k $r0;
        com.seattleclouds.util.bi $r1;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: com.seattleclouds.util.bi;

        $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.util.bi e> = $r1;

        return;
    }

    protected void a(java.lang.String)
    {
        com.seattleclouds.modules.feedback.k $r0;
        java.lang.String $r1;
        android.app.ProgressDialog $r2;
        com.seattleclouds.util.bi $r3;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d>;

        virtualinvoke $r2.<android.app.ProgressDialog: void dismiss()>();

        $r3 = $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.util.bi e>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.seattleclouds.modules.feedback.k: com.seattleclouds.util.bi e>;

        interfaceinvoke $r3.<com.seattleclouds.util.bi: void a(java.lang.Object)>(null);

     label1:
        return;
    }

    protected transient void a(java.lang.Integer[])
    {
        com.seattleclouds.modules.feedback.k $r0;
        java.lang.Integer[] $r1;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: java.lang.Integer[];

        specialinvoke $r0.<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>($r1);

        return;
    }

    protected java.lang.Object doInBackground(java.lang.Object[])
    {
        com.seattleclouds.modules.feedback.k $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke $r0.<com.seattleclouds.modules.feedback.k: java.lang.String a(java.lang.String[])>($r3);

        return $r1;
    }

    protected void onCancelled()
    {
        com.seattleclouds.modules.feedback.k $r0;
        android.app.ProgressDialog $r1;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        specialinvoke $r0.<android.os.AsyncTask: void onCancelled()>();

        $r1 = $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d>;

        virtualinvoke $r1.<android.app.ProgressDialog: void dismiss()>();

        return;
    }

    protected void onPostExecute(java.lang.Object)
    {
        com.seattleclouds.modules.feedback.k $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke $r0.<com.seattleclouds.modules.feedback.k: void a(java.lang.String)>($r2);

        return;
    }

    protected void onPreExecute()
    {
        com.seattleclouds.modules.feedback.k $r0;
        android.view.Window $r1;
        android.app.ProgressDialog $r2;
        android.app.Activity $r3;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r2 = new android.app.ProgressDialog;

        $r3 = $r0.<com.seattleclouds.modules.feedback.k: android.app.Activity c>;

        specialinvoke $r2.<android.app.ProgressDialog: void <init>(android.content.Context)>($r3);

        $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d> = $r2;

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d>;

        virtualinvoke $r2.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("Searching...");

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d>;

        virtualinvoke $r2.<android.app.ProgressDialog: void setCancelable(boolean)>(0);

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d>;

        $r1 = virtualinvoke $r2.<android.app.ProgressDialog: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void clearFlags(int)>(2);

        $r2 = $r0.<com.seattleclouds.modules.feedback.k: android.app.ProgressDialog d>;

        virtualinvoke $r2.<android.app.ProgressDialog: void show()>();

        specialinvoke $r0.<android.os.AsyncTask: void onPreExecute()>();

        return;
    }

    protected void onProgressUpdate(java.lang.Object[])
    {
        com.seattleclouds.modules.feedback.k $r0;
        java.lang.Object[] $r1;
        java.lang.Integer[] $r2;

        $r0 := @this: com.seattleclouds.modules.feedback.k;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Integer[]) $r1;

        virtualinvoke $r0.<com.seattleclouds.modules.feedback.k: void a(java.lang.Integer[])>($r2);

        return;
    }
}
