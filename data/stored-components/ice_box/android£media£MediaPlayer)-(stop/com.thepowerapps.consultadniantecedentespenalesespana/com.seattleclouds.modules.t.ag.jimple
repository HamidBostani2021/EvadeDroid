public class com.seattleclouds.modules.t.ag extends java.lang.Object
{
    private java.util.Map a;
    private long b;
    private long c;

    public void <init>()
    {
        com.seattleclouds.modules.t.ag $r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;
        java.lang.Runtime $r3;
        long $l0;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(10, 1.5F, 1);

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        $r0.<com.seattleclouds.modules.t.ag: java.util.Map a> = $r2;

        $r0.<com.seattleclouds.modules.t.ag: long b> = 0L;

        $r0.<com.seattleclouds.modules.t.ag: long c> = 1000000L;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r3.<java.lang.Runtime: long maxMemory()>();

        $l0 = $l0 / 2L;

        virtualinvoke $r0.<com.seattleclouds.modules.t.ag: void a(long)>($l0);

        return;
    }

    private long a(android.graphics.Bitmap)
    {
        com.seattleclouds.modules.t.ag $r0;
        android.graphics.Bitmap $r1;
        int $i0, $i1;
        long $l2;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r1 := @parameter0: android.graphics.Bitmap;

        if $r1 != null goto label1;

        return 0L;

     label1:
        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getRowBytes()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 * $i1;

        $l2 = (long) $i0;

        return $l2;
    }

    private android.graphics.Bitmap b(java.lang.String)
    {
        com.seattleclouds.modules.t.ag $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        android.graphics.Bitmap $r5;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.ref.WeakReference) $r3;

        if $r4 == null goto label1;

        $r3 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (android.graphics.Bitmap) $r3;

        if $r5 != null goto label2;

        $r2 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        specialinvoke $r0.<com.seattleclouds.modules.t.ag: void c()>();

        staticinvoke <com.seattleclouds.modules.t.ag: void c(java.lang.String)>("reference was empty");

        return $r5;

     label1:
        return null;

     label2:
        return $r5;
    }

    private void b()
    {
        com.seattleclouds.modules.t.ag $r0;
        java.lang.StringBuilder $r1;
        long $l0, $l2;
        java.util.Map $r2;
        int $i1;
        java.lang.String $r3;
        byte $b3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        java.lang.ref.WeakReference $r8;
        android.graphics.Bitmap $r9;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        specialinvoke $r0.<com.seattleclouds.modules.t.ag: void c()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cache size=");

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long b>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long c>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r2 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.seattleclouds.modules.t.ag: void c(java.lang.String)>($r3);

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long b>;

        $l2 = $r0.<com.seattleclouds.modules.t.ag: long c>;

        $b3 = $l0 cmp $l2;

        if $b3 <= 0 goto label3;

        $r2 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long b>;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.ref.WeakReference) $r6;

        $r6 = virtualinvoke $r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r9 = (android.graphics.Bitmap) $r6;

        $l2 = specialinvoke $r0.<com.seattleclouds.modules.t.ag: long a(android.graphics.Bitmap)>($r9);

        $l0 = $l0 - $l2;

        $r0.<com.seattleclouds.modules.t.ag: long b> = $l0;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long b>;

        $l2 = $r0.<com.seattleclouds.modules.t.ag: long c>;

        $b3 = $l0 cmp $l2;

        if $b3 > 0 goto label1;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clean cache. New size ");

        $r2 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.seattleclouds.modules.t.ag: void c(java.lang.String)>($r3);

     label3:
        return;
    }

    private void b(java.lang.String, android.graphics.Bitmap)
    {
        com.seattleclouds.modules.t.ag $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;
        java.util.Map $r3;
        java.lang.ref.WeakReference $r4;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        if $r2 != null goto label2;

        $r4 = null;

     label1:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return;

     label2:
        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        goto label1;
    }

    private void c()
    {
        com.seattleclouds.modules.t.ag $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.ref.WeakReference $r6;
        android.graphics.Bitmap $r7;
        long $l0, $l1;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r0.<com.seattleclouds.modules.t.ag: long b> = 0L;

        $r1 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (android.graphics.Bitmap) $r4;

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long b>;

        $l1 = specialinvoke $r0.<com.seattleclouds.modules.t.ag: long a(android.graphics.Bitmap)>($r7);

        $l0 = $l0 + $l1;

        $r0.<com.seattleclouds.modules.t.ag: long b> = $l0;

        goto label1;

     label2:
        return;
    }

    private static void c(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImageWeakCache", $r0);

        return;
    }

    public android.graphics.Bitmap a(java.lang.String)
    {
        com.seattleclouds.modules.t.ag $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        boolean $z0;
        android.graphics.Bitmap $r3;
        java.lang.NullPointerException $r4;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

     label2:
        if $z0 != 0 goto label3;

        return null;

     label3:
        $r3 = specialinvoke $r0.<com.seattleclouds.modules.t.ag: android.graphics.Bitmap b(java.lang.String)>($r1);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    public void a()
    {
        com.seattleclouds.modules.t.ag $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.ref.WeakReference $r6;
        android.graphics.Bitmap $r7;
        java.lang.StringBuilder $r8;
        long $l0;
        int $i1;
        java.lang.String $r9;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r1 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (android.graphics.Bitmap) $r4;

        if $r7 == null goto label2;

        virtualinvoke $r7.<android.graphics.Bitmap: void recycle()>();

     label2:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label1;

     label3:
        $r0.<com.seattleclouds.modules.t.ag: long b> = 0L;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cache size=");

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long b>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long c>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r1 = $r0.<com.seattleclouds.modules.t.ag: java.util.Map a>;

        $i1 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.seattleclouds.modules.t.ag: void c(java.lang.String)>($r9);

        return;
    }

    public void a(long)
    {
        com.seattleclouds.modules.t.ag $r0;
        long $l0;
        java.lang.StringBuilder $r1;
        double $d0;
        java.lang.String $r2;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $l0 := @parameter0: long;

        $r0.<com.seattleclouds.modules.t.ag: long c> = $l0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MemoryCache will use up to ");

        $l0 = $r0.<com.seattleclouds.modules.t.ag: long c>;

        $d0 = (double) $l0;

        $d0 = $d0 / 1024.0;

        $d0 = $d0 / 1024.0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MB");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.seattleclouds.modules.t.ag: void c(java.lang.String)>($r2);

        return;
    }

    public void a(java.lang.String, android.graphics.Bitmap)
    {
        com.seattleclouds.modules.t.ag $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.seattleclouds.modules.t.ag;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

     label1:
        specialinvoke $r0.<com.seattleclouds.modules.t.ag: void b(java.lang.String,android.graphics.Bitmap)>($r1, $r2);

        specialinvoke $r0.<com.seattleclouds.modules.t.ag: void b()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
