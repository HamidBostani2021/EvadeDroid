public class com.seattleclouds.modules.dropbox.medialist.c extends android.os.AsyncTask
{
    static final java.lang.String a;
    com.seattleclouds.util.bi b;
    private java.lang.String c;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lcom/seattleclouds/modules/dropbox/medialist/c;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a> = $r0;

        return;
    }

    public void <init>()
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    private java.util.List a(org.json.JSONObject, java.lang.String)
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        org.json.JSONObject $r1, $r5;
        java.lang.String $r2, $r11;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.io.FileInputStream $r4;
        org.json.JSONArray $r6;
        com.seattleclouds.modules.dropbox.medialist.b $r7;
        org.json.JSONException $r8;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

        $i0 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(0);

        $r4 = new java.io.FileInputStream;

     label01:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r2);

        $r2 = staticinvoke <com.seattleclouds.util.bn: java.lang.String b(java.io.InputStream)>($r4);

     label02:
        $r5 = new org.json.JSONObject;

     label03:
        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("videofiles");

     label04:
        $i1 = virtualinvoke $r6.<org.json.JSONArray: int length()>();

     label05:
        if $i0 >= $i1 goto label15;

     label06:
        $r5 = virtualinvoke $r6.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

     label07:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("imageThmb");

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("imageThmb", $r2);

     label08:
        $r7 = new com.seattleclouds.modules.dropbox.medialist.b;

     label09:
        specialinvoke $r7.<com.seattleclouds.modules.dropbox.medialist.b: void <init>(org.json.JSONObject)>($r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label10:
        $i0 = $i0 + 1;

        goto label04;

     label11:
        $r8 := @caughtexception;

     label12:
        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("imageThmb", "dropbox_media_file.png");

     label13:
        goto label08;

     label14:
        $r9 := @caughtexception;

        $r2 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        $r11 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r11, $r9);

     label15:
        return $r3;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch org.json.JSONException from label07 to label08 with label11;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    private org.json.JSONObject a(java.lang.String)
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        java.lang.String $r1, $r7;
        boolean $z0;
        java.io.FileNotFoundException $r2;
        java.lang.StringBuilder $r3;
        java.io.InputStream $r4;
        org.json.JSONObject $r5;
        java.lang.Exception $r6;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.seattleclouds.App: boolean n(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r2 = new java.io.FileNotFoundException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON config file not found! Path:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $r4 = staticinvoke <com.seattleclouds.App: java.io.InputStream e(java.lang.String)>($r1);

        $r1 = staticinvoke <com.seattleclouds.util.bn: java.lang.String b(java.io.InputStream)>($r4);

     label2:
        $r5 = new org.json.JSONObject;

     label3:
        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        $r1 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        $r7 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r7, $r6);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void b(org.json.JSONObject, java.lang.String)
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        org.json.JSONObject $r1;
        java.lang.String $r2, $r4, $r5;
        java.io.FileOutputStream $r3, $r7, r21;
        java.util.HashMap $r6, r20;
        boolean $z0;
        java.nio.charset.Charset $r8;
        byte[] $r9;
        java.lang.Throwable $r10, $r13, $r17;
        java.lang.StringBuilder $r11, r22;
        java.lang.Exception $r12, $r14, $r16, $r18, $r19;
        org.json.JSONException $r15;
        java.io.UnsupportedEncodingException r23;
        java.io.IOException r24;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

        $r3 = null;

     label01:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Path");

        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("tokenid");

     label02:
        r20 = new java.util.HashMap;

     label03:
        $r6 = r20;

     label04:
        specialinvoke r20.<java.util.HashMap: void <init>()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("tokenid", $r5);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("action", "search_files");

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("vApi", "v2");

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", $r4);

     label05:
        $r4 = <com.seattleclouds.App: java.lang.String w>;

     label06:
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("username", $r4);

     label07:
        $r4 = <com.seattleclouds.App: java.lang.String x>;

     label08:
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("appid", $r4);

     label09:
        $r4 = <com.seattleclouds.App: java.lang.String v>;

     label10:
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("publisherid", $r4);

     label11:
        $r4 = $r0.<com.seattleclouds.modules.dropbox.medialist.c: java.lang.String c>;

     label12:
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pageid", $r4);

     label13:
        $r4 = <com.seattleclouds.modules.dropbox.medialist.d: java.lang.String a>;

     label14:
        $r4 = staticinvoke <com.seattleclouds.util.a: java.lang.String b(java.lang.String,java.util.Map)>($r4, $r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label15:
        if $z0 != 0 goto label23;

     label16:
        r21 = new java.io.FileOutputStream;

     label17:
        $r7 = r21;

     label18:
        specialinvoke r21.<java.io.FileOutputStream: void <init>(java.lang.String)>($r2);

     label19:
        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r9 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r8);

        virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[])>($r9);

        virtualinvoke $r7.<java.io.FileOutputStream: void flush()>();

     label20:
        if $r7 == null goto label60;

     label21:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label22:
        return;

     label23:
        $r2 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

     label24:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Failed to get response");

     label25:
        $r7 = null;

        goto label20;

     label26:
        $r10 := @caughtexception;

        $r7 = null;

     label27:
        $r2 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

        r22 = new java.lang.StringBuilder;

     label28:
        $r11 = r22;

     label29:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        r23 = (java.io.UnsupportedEncodingException) $r10;

        $r4 = virtualinvoke r23.<java.io.UnsupportedEncodingException: java.lang.String getLocalizedMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r4, $r10);

     label30:
        if $r7 == null goto label60;

     label31:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label32:
        return;

     label33:
        $r12 := @caughtexception;

        return;

     label34:
        $r13 := @caughtexception;

     label35:
        $r2 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

        r22 = new java.lang.StringBuilder;

     label36:
        $r11 = r22;

     label37:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        r24 = (java.io.IOException) $r13;

        $r4 = virtualinvoke r24.<java.io.IOException: java.lang.String getLocalizedMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r4, $r13);

     label38:
        if $r3 == null goto label60;

     label39:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label40:
        return;

     label41:
        $r14 := @caughtexception;

        return;

     label42:
        $r15 := @caughtexception;

     label43:
        $r2 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

        r22 = new java.lang.StringBuilder;

     label44:
        $r11 = r22;

     label45:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        $r4 = virtualinvoke $r15.<org.json.JSONException: java.lang.String getLocalizedMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r4, $r15);

     label46:
        if $r3 == null goto label60;

     label47:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label48:
        return;

     label49:
        $r16 := @caughtexception;

        return;

     label50:
        $r17 := @caughtexception;

     label51:
        if $r3 == null goto label53;

     label52:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label53:
        throw $r17;

     label54:
        $r18 := @caughtexception;

        return;

     label55:
        $r19 := @caughtexception;

        goto label53;

     label56:
        $r17 := @caughtexception;

        $r3 = $r7;

        goto label51;

     label57:
        $r15 := @caughtexception;

        $r3 = $r7;

        goto label43;

     label58:
        $r13 := @caughtexception;

        $r3 = $r7;

        goto label35;

     label59:
        $r10 := @caughtexception;

        goto label27;

     label60:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label26;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label26;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label26;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label26;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label26;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label26;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label26;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label26;
        catch java.io.IOException from label01 to label02 with label34;
        catch java.io.IOException from label04 to label05 with label34;
        catch java.io.IOException from label06 to label07 with label34;
        catch java.io.IOException from label08 to label09 with label34;
        catch java.io.IOException from label10 to label11 with label34;
        catch java.io.IOException from label12 to label13 with label34;
        catch java.io.IOException from label14 to label15 with label34;
        catch java.io.IOException from label18 to label19 with label34;
        catch org.json.JSONException from label01 to label02 with label42;
        catch org.json.JSONException from label04 to label05 with label42;
        catch org.json.JSONException from label06 to label07 with label42;
        catch org.json.JSONException from label08 to label09 with label42;
        catch org.json.JSONException from label10 to label11 with label42;
        catch org.json.JSONException from label12 to label13 with label42;
        catch org.json.JSONException from label14 to label15 with label42;
        catch org.json.JSONException from label18 to label19 with label42;
        catch java.lang.Throwable from label01 to label03 with label50;
        catch java.lang.Throwable from label04 to label15 with label50;
        catch java.lang.Throwable from label16 to label17 with label50;
        catch java.lang.Throwable from label18 to label19 with label50;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label59;
        catch java.io.IOException from label19 to label20 with label58;
        catch org.json.JSONException from label19 to label20 with label57;
        catch java.lang.Throwable from label19 to label20 with label56;
        catch java.lang.Exception from label21 to label22 with label54;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label26;
        catch java.io.IOException from label24 to label25 with label34;
        catch org.json.JSONException from label24 to label25 with label42;
        catch java.lang.Throwable from label23 to label25 with label50;
        catch java.lang.Throwable from label27 to label28 with label56;
        catch java.lang.Throwable from label29 to label30 with label56;
        catch java.lang.Exception from label31 to label32 with label33;
        catch java.lang.Throwable from label35 to label36 with label50;
        catch java.lang.Throwable from label37 to label38 with label50;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.Throwable from label43 to label44 with label50;
        catch java.lang.Throwable from label45 to label46 with label50;
        catch java.lang.Exception from label47 to label48 with label49;
        catch java.lang.Exception from label52 to label53 with label55;
    }

    protected transient java.util.HashMap a(java.lang.Object[])
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        java.lang.Object[] $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        java.lang.String $r6, $r7, $r9;
        com.seattleclouds.util.bi $r8;
        org.json.JSONObject $r10;
        java.lang.Integer $r11;
        int $i0;
        java.util.List $r12;
        java.io.File $r13;
        boolean $z0;
        java.lang.Exception $r14;
        java.lang.StringBuilder $r15;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(0);

        $r4 = class "Ljava/lang/String;";

     label01:
        $r5 = $r1[0];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        $r6 = (java.lang.String) $r5;

     label02:
        $r4 = class "Ljava/lang/String;";

     label03:
        $r5 = $r1[1];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        $r7 = (java.lang.String) $r5;

     label04:
        $r4 = class "Lcom/seattleclouds/util/bi;";

     label05:
        $r5 = $r1[3];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        $r8 = (com.seattleclouds.util.bi) $r5;

        $r0.<com.seattleclouds.modules.dropbox.medialist.c: com.seattleclouds.util.bi b> = $r8;

     label06:
        $r4 = class "Ljava/lang/String;";

     label07:
        $r5 = $r1[4];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        $r9 = (java.lang.String) $r5;

        $r0.<com.seattleclouds.modules.dropbox.medialist.c: java.lang.String c> = $r9;

        $r10 = specialinvoke $r0.<com.seattleclouds.modules.dropbox.medialist.c: org.json.JSONObject a(java.lang.String)>($r7);

     label08:
        if $r10 == null goto label10;

     label09:
        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KEY_JSON_CONFIG", $r10);

     label10:
        $r4 = class "Ljava/lang/Integer;";

     label11:
        $r5 = $r1[2];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        $r11 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

     label12:
        if $i0 != 100 goto label18;

     label13:
        specialinvoke $r0.<com.seattleclouds.modules.dropbox.medialist.c: void b(org.json.JSONObject,java.lang.String)>($r10, $r6);

     label14:
        $r12 = specialinvoke $r0.<com.seattleclouds.modules.dropbox.medialist.c: java.util.List a(org.json.JSONObject,java.lang.String)>($r10, $r6);

     label15:
        if $r12 == null goto label17;

     label16:
        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KEY_FILES", $r12);

     label17:
        return $r3;

     label18:
        $r13 = new java.io.File;

     label19:
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke $r13.<java.io.File: boolean exists()>();

     label20:
        if $z0 != 0 goto label14;

     label21:
        specialinvoke $r0.<com.seattleclouds.modules.dropbox.medialist.c: void b(org.json.JSONObject,java.lang.String)>($r10, $r6);

     label22:
        goto label14;

     label23:
        $r14 := @caughtexception;

        $r6 = <com.seattleclouds.modules.dropbox.medialist.c: java.lang.String a>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ");

        $r7 = virtualinvoke $r14.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, $r7, $r14);

        return null;

        catch java.lang.Exception from label01 to label02 with label23;
        catch java.lang.Exception from label03 to label04 with label23;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label15 with label23;
        catch java.lang.Exception from label16 to label17 with label23;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Exception from label21 to label22 with label23;
    }

    protected void a(java.util.HashMap)
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        java.util.HashMap $r1;
        com.seattleclouds.util.bi $r2;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = $r0.<com.seattleclouds.modules.dropbox.medialist.c: com.seattleclouds.util.bi b>;

        interfaceinvoke $r2.<com.seattleclouds.util.bi: void a(java.lang.Object)>($r1);

        specialinvoke $r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        return;
    }

    protected java.lang.Object doInBackground(java.lang.Object[])
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        java.lang.Object[] $r1;
        java.util.HashMap $r2;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke $r0.<com.seattleclouds.modules.dropbox.medialist.c: java.util.HashMap a(java.lang.Object[])>($r1);

        return $r2;
    }

    protected void onPostExecute(java.lang.Object)
    {
        com.seattleclouds.modules.dropbox.medialist.c $r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;

        $r0 := @this: com.seattleclouds.modules.dropbox.medialist.c;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.HashMap) $r1;

        virtualinvoke $r0.<com.seattleclouds.modules.dropbox.medialist.c: void a(java.util.HashMap)>($r2);

        return;
    }
}
