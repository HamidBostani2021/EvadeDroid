public class com.rapattoni.mls.RapattoniWebChromeClient extends android.webkit.WebChromeClient
{
    public static final int FILE_CHOOSER_RESULT_CODE;
    private android.app.Activity mActivity;
    private android.webkit.ValueCallback mFilePathCallback;
    private android.webkit.ValueCallback mLegacyFilePathCallback;
    private java.lang.String mPhotoPath;

    public void <init>(android.app.Activity)
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.app.Activity $r1;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke $r0.<android.webkit.WebChromeClient: void <init>()>();

        $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.app.Activity mActivity> = $r1;

        return;
    }

    private java.io.File createImageFile() throws java.io.IOException
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        java.text.SimpleDateFormat $r1;
        java.util.Date $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;
        java.io.File $r6;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd_HHmmss");

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JPEG_");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = <android.os.Environment: java.lang.String DIRECTORY_PICTURES>;

        $r6 = staticinvoke <android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>($r5);

        $r6 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r3, ".jpg", $r6);

        return $r6;
    }

    private android.content.Intent getContentSelectionIntent()
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.content.Intent $r1;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.GET_CONTENT");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.OPENABLE");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setType(java.lang.String)>("image/*");

        return $r1;
    }

    public void clearFilePathCallback()
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mFilePathCallback> = null;

        $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mLegacyFilePathCallback> = null;

        return;
    }

    public android.webkit.ValueCallback getFilePathCallback()
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.webkit.ValueCallback r1;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        r1 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mFilePathCallback>;

        return r1;
    }

    public android.webkit.ValueCallback getLegacyFilePathCallback()
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.webkit.ValueCallback r1;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        r1 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mLegacyFilePathCallback>;

        return r1;
    }

    public java.lang.String getPhotoPath()
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        java.lang.String r1;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        r1 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: java.lang.String mPhotoPath>;

        return r1;
    }

    public boolean onCreateWindow(android.webkit.WebView, boolean, boolean, android.os.Message)
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.webkit.WebView $r1, $r3;
        boolean $z0, $z1;
        android.os.Message $r2;
        android.content.Context $r4;
        com.rapattoni.mls.RapattoniWebChromeClient$1 $r5;
        java.lang.Object $r6;
        android.webkit.WebView$WebViewTransport $r7;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 := @parameter0: android.webkit.WebView;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 := @parameter3: android.os.Message;

        $r3 = new android.webkit.WebView;

        $r4 = virtualinvoke $r1.<android.webkit.WebView: android.content.Context getContext()>();

        specialinvoke $r3.<android.webkit.WebView: void <init>(android.content.Context)>($r4);

        $r5 = new com.rapattoni.mls.RapattoniWebChromeClient$1;

        specialinvoke $r5.<com.rapattoni.mls.RapattoniWebChromeClient$1: void <init>(com.rapattoni.mls.RapattoniWebChromeClient)>($r0);

        virtualinvoke $r3.<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>($r5);

        $r6 = $r2.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.webkit.WebView$WebViewTransport) $r6;

        virtualinvoke $r7.<android.webkit.WebView$WebViewTransport: void setWebView(android.webkit.WebView)>($r3);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return 1;
    }

    public void onGeolocationPermissionsShowPrompt(java.lang.String, android.webkit.GeolocationPermissions$Callback)
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        java.lang.String $r1;
        android.webkit.GeolocationPermissions$Callback $r2;
        android.app.AlertDialog$Builder $r3, $r5;
        android.app.Activity $r4;
        com.rapattoni.mls.RapattoniWebChromeClient$3 $r6;
        com.rapattoni.mls.RapattoniWebChromeClient$2 $r7;
        android.app.AlertDialog $r8;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.webkit.GeolocationPermissions$Callback;

        $r3 = new android.app.AlertDialog$Builder;

        $r4 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.app.Activity mActivity>;

        specialinvoke $r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r4);

        virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Locations");

        $r5 = virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Would like to use your Current Location ");

        $r6 = new com.rapattoni.mls.RapattoniWebChromeClient$3;

        specialinvoke $r6.<com.rapattoni.mls.RapattoniWebChromeClient$3: void <init>(com.rapattoni.mls.RapattoniWebChromeClient,android.webkit.GeolocationPermissions$Callback,java.lang.String)>($r0, $r2, $r1);

        $r5 = virtualinvoke $r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Allow", $r6);

        $r7 = new com.rapattoni.mls.RapattoniWebChromeClient$2;

        specialinvoke $r7.<com.rapattoni.mls.RapattoniWebChromeClient$2: void <init>(com.rapattoni.mls.RapattoniWebChromeClient,android.webkit.GeolocationPermissions$Callback,java.lang.String)>($r0, $r2, $r1);

        virtualinvoke $r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Don\'t Allow", $r7);

        $r8 = virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke $r8.<android.app.AlertDialog: void show()>();

        return;
    }

    public boolean onShowFileChooser(android.webkit.WebView, android.webkit.ValueCallback, android.webkit.WebChromeClient$FileChooserParams)
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.webkit.WebView $r1;
        android.webkit.ValueCallback $r2, $r6;
        android.webkit.WebChromeClient$FileChooserParams $r3;
        android.content.Intent $r4, $r16;
        java.lang.Throwable $r5;
        android.app.Activity $r7;
        android.content.pm.PackageManager $r8;
        android.content.ComponentName $r9;
        java.io.File $r10, $r11;
        java.lang.String $r12;
        java.lang.StringBuilder $r13;
        android.net.Uri $r14;
        android.content.Intent[] $r15;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: android.webkit.ValueCallback;

        $r3 := @parameter2: android.webkit.WebChromeClient$FileChooserParams;

        $r6 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mFilePathCallback>;

        if $r6 == null goto label01;

        $r6 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mFilePathCallback>;

        interfaceinvoke $r6.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>(null);

     label01:
        $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mFilePathCallback> = $r2;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.IMAGE_CAPTURE");

        $r7 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.app.Activity mActivity>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r9 = virtualinvoke $r4.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r8);

        if $r9 == null goto label06;

        $r10 = null;

     label02:
        $r11 = specialinvoke $r0.<com.rapattoni.mls.RapattoniWebChromeClient: java.io.File createImageFile()>();

     label03:
        $r10 = $r11;

        $r12 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: java.lang.String mPhotoPath>;

     label04:
        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("PhotoPath", $r12);

     label05:
        if $r10 == null goto label09;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r12 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.rapattoni.mls.RapattoniWebChromeClient: java.lang.String mPhotoPath> = $r12;

        $r14 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r10);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("output", $r14);

     label06:
        if $r4 == null goto label10;

        $r15 = newarray (android.content.Intent)[1];

        $r15[0] = $r4;

     label07:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CHOOSER");

        $r16 = specialinvoke $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.content.Intent getContentSelectionIntent()>();

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", $r16);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TITLE", "Image Chooser");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>("android.intent.extra.INITIAL_INTENTS", $r15);

        $r7 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.app.Activity mActivity>;

        virtualinvoke $r7.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>($r4, 1);

        return 1;

     label08:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Input", "Unable to create Image File", $r5);

        goto label05;

     label09:
        $r4 = null;

        goto label06;

     label10:
        $r15 = newarray (android.content.Intent)[0];

        goto label07;

        catch java.io.IOException from label02 to label03 with label08;
        catch java.io.IOException from label04 to label05 with label08;
    }

    public void openFileChooser(android.webkit.ValueCallback, java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.webkit.ValueCallback $r1;
        java.lang.String $r2;
        android.app.Activity $r3;
        android.content.Intent $r4;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 := @parameter0: android.webkit.ValueCallback;

        $r2 := @parameter1: java.lang.String;

        $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.webkit.ValueCallback mLegacyFilePathCallback> = $r1;

        $r3 = $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.app.Activity mActivity>;

        $r4 = specialinvoke $r0.<com.rapattoni.mls.RapattoniWebChromeClient: android.content.Intent getContentSelectionIntent()>();

        $r4 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>($r4, "File Chooser");

        virtualinvoke $r3.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>($r4, 1);

        return;
    }

    public void openFileChooser(android.webkit.ValueCallback, java.lang.String, java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebChromeClient $r0;
        android.webkit.ValueCallback $r1;
        java.lang.String $r2, $r3;

        $r0 := @this: com.rapattoni.mls.RapattoniWebChromeClient;

        $r1 := @parameter0: android.webkit.ValueCallback;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke $r0.<com.rapattoni.mls.RapattoniWebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String)>($r1, $r2);

        return;
    }

    public static void <clinit>()
    {
        <com.rapattoni.mls.RapattoniWebChromeClient: int FILE_CHOOSER_RESULT_CODE> = 1;

        return;
    }
}
