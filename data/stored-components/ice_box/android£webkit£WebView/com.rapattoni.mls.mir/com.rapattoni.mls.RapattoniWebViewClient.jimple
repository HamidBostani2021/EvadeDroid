public class com.rapattoni.mls.RapattoniWebViewClient extends android.webkit.WebViewClient
{
    public android.widget.ProgressBar LoadingSpinner;
    private android.app.Activity _activity;

    public void <init>(android.app.Activity)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        android.app.Activity $r1;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke $r0.<android.webkit.WebViewClient: void <init>()>();

        $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.app.Activity _activity> = $r1;

        return;
    }

    private void addAuthHeaderToRequest(android.webkit.WebView, java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        android.webkit.WebView $r1;
        java.lang.String $r2, $r4, $r5;
        java.util.HashMap $r3;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r6;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("#access_token=");

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("#access_token=", "");

        $r5 = $r4;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("&");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("&");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        if $r5 == "" goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bearer ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Authorization", $r4);

     label2:
        virtualinvoke $r1.<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>($r2, $r3);

        return;
    }

    public static java.lang.String correctMapUrl(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//bing.com/maps/default.aspx?Rtp=~adr.", "//maps.google.com/maps?daddr=");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//google.com/maps/dir//", "//maps.google.com/maps?daddr=");

        return $r0;
    }

    private boolean isAuthFragment(java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("#access_token=");

        return $z0;
    }

    private boolean isInternalUrl(java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("https://mlax.rapmls.com");

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https://ssoportallax.rapmls.com");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isNativeIntent(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("//bing.com/maps/default.aspx?Rtp=~adr.");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("//google.com/maps/dir//");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(".pdf");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("tel:");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("mailto:");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("sms:");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isSignoutUrl(java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("wsignout1.0");

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("@DefaultMobileEntitlement");

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setRefreshToken(java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0;
        android.app.Activity $r4;
        android.content.SharedPreferences $r5;
        android.content.SharedPreferences$Editor $r6;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("&refresh_token=");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("&refresh_token=");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&refresh_token=", "");

        $r3 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("&");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("&");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r4 = $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.app.Activity _activity>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0);

        $r6 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("RefreshToken", $r3);

        interfaceinvoke $r6.<android.content.SharedPreferences$Editor: boolean commit()>();

     label2:
        return;
    }

    public void onPageFinished(android.webkit.WebView, java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        android.webkit.WebView $r1;
        java.lang.String $r2;
        android.widget.ProgressBar $r3;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.widget.ProgressBar LoadingSpinner>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.widget.ProgressBar LoadingSpinner>;

        virtualinvoke $r3.<android.widget.ProgressBar: void setVisibility(int)>(8);

     label1:
        return;
    }

    public void onReceivedError(android.webkit.WebView, int, java.lang.String, java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        android.webkit.WebView $r1;
        int $i0;
        java.lang.String $r2, $r3;
        android.content.Context $r4;
        java.lang.StringBuilder $r5;
        android.widget.Toast $r6;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        virtualinvoke $r1.<android.webkit.WebView: void loadUrl(java.lang.String)>("about:blank");

        $r4 = virtualinvoke $r1.<android.webkit.WebView: android.content.Context getContext()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Your Internet Connection May not be active Or ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r4, $r2, 1);

        virtualinvoke $r6.<android.widget.Toast: void show()>();

        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        com.rapattoni.mls.RapattoniWebViewClient $r0;
        android.webkit.WebView $r1;
        android.content.Intent $r2;
        java.lang.String $r3;
        boolean $z0;
        android.webkit.CookieManager $r4;
        int $i0;
        android.app.Activity $r5;
        com.rapattoni.mls.MainActivity $r6;
        android.widget.ProgressBar $r7;
        android.content.Context $r8;
        android.net.Uri $r9;

        $r0 := @this: com.rapattoni.mls.RapattoniWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r3 := @parameter1: java.lang.String;

        $z0 = specialinvoke $r0.<com.rapattoni.mls.RapattoniWebViewClient: boolean isSignoutUrl(java.lang.String)>($r3);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        virtualinvoke $r4.<android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>(null);

        virtualinvoke $r4.<android.webkit.CookieManager: void flush()>();

     label1:
        $r5 = $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.app.Activity _activity>;

        $r6 = (com.rapattoni.mls.MainActivity) $r5;

        virtualinvoke $r6.<com.rapattoni.mls.MainActivity: void LoadDefaultUrlIntoWebView()>();

        return 0;

     label2:
        virtualinvoke $r4.<android.webkit.CookieManager: void removeAllCookie()>();

        goto label1;

     label3:
        $z0 = specialinvoke $r0.<com.rapattoni.mls.RapattoniWebViewClient: boolean isAuthFragment(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        specialinvoke $r0.<com.rapattoni.mls.RapattoniWebViewClient: void setRefreshToken(java.lang.String)>($r3);

        specialinvoke $r0.<com.rapattoni.mls.RapattoniWebViewClient: void addAuthHeaderToRequest(android.webkit.WebView,java.lang.String)>($r1, $r3);

        return 0;

     label4:
        $z0 = specialinvoke $r0.<com.rapattoni.mls.RapattoniWebViewClient: boolean isInternalUrl(java.lang.String)>($r3);

        if $z0 == 0 goto label6;

        $r7 = $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.widget.ProgressBar LoadingSpinner>;

        if $r7 == null goto label5;

        $r7 = $r0.<com.rapattoni.mls.RapattoniWebViewClient: android.widget.ProgressBar LoadingSpinner>;

        virtualinvoke $r7.<android.widget.ProgressBar: void setVisibility(int)>(0);

     label5:
        return 0;

     label6:
        $z0 = staticinvoke <com.rapattoni.mls.RapattoniWebViewClient: boolean isNativeIntent(java.lang.String)>($r3);

        if $z0 == 0 goto label7;

        $r8 = virtualinvoke $r1.<android.webkit.WebView: android.content.Context getContext()>();

        $r3 = staticinvoke <com.rapattoni.mls.RapattoniWebViewClient: java.lang.String correctMapUrl(java.lang.String)>($r3);

        $r2 = new android.content.Intent;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r9);

        virtualinvoke $r8.<android.content.Context: void startActivity(android.content.Intent)>($r2);

        return 1;

     label7:
        return 0;
    }
}
