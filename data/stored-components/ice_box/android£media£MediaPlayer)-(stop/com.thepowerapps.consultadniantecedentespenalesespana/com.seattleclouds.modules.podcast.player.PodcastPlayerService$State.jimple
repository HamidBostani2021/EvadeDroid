final enum class com.seattleclouds.modules.podcast.player.PodcastPlayerService$State extends java.lang.Enum
{
    public static final enum com.seattleclouds.modules.podcast.player.PodcastPlayerService$State None;
    public static final enum com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Paused;
    public static final enum com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Playing;
    public static final enum com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Preparing;
    public static final enum com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Stopped;
    private static final com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[] a;

    static void <clinit>()
    {
        com.seattleclouds.modules.podcast.player.PodcastPlayerService$State $r0;
        com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[] $r1;

        $r0 = new com.seattleclouds.modules.podcast.player.PodcastPlayerService$State;

        specialinvoke $r0.<com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: void <init>(java.lang.String,int)>("None", 0);

        <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State None> = $r0;

        $r0 = new com.seattleclouds.modules.podcast.player.PodcastPlayerService$State;

        specialinvoke $r0.<com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: void <init>(java.lang.String,int)>("Stopped", 1);

        <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Stopped> = $r0;

        $r0 = new com.seattleclouds.modules.podcast.player.PodcastPlayerService$State;

        specialinvoke $r0.<com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: void <init>(java.lang.String,int)>("Preparing", 2);

        <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Preparing> = $r0;

        $r0 = new com.seattleclouds.modules.podcast.player.PodcastPlayerService$State;

        specialinvoke $r0.<com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: void <init>(java.lang.String,int)>("Playing", 3);

        <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Playing> = $r0;

        $r0 = new com.seattleclouds.modules.podcast.player.PodcastPlayerService$State;

        specialinvoke $r0.<com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: void <init>(java.lang.String,int)>("Paused", 4);

        <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Paused> = $r0;

        $r1 = newarray (com.seattleclouds.modules.podcast.player.PodcastPlayerService$State)[5];

        $r0 = <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State None>;

        $r1[0] = $r0;

        $r0 = <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Stopped>;

        $r1[1] = $r0;

        $r0 = <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Preparing>;

        $r1[2] = $r0;

        $r0 = <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Playing>;

        $r1[3] = $r0;

        $r0 = <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State Paused>;

        $r1[4] = $r0;

        <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[] a> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.seattleclouds.modules.podcast.player.PodcastPlayerService$State $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.seattleclouds.modules.podcast.player.PodcastPlayerService$State valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.seattleclouds.modules.podcast.player.PodcastPlayerService$State $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/seattleclouds/modules/podcast/player/PodcastPlayerService$State;", $r0);

        $r2 = (com.seattleclouds.modules.podcast.player.PodcastPlayerService$State) $r1;

        return $r2;
    }

    public static com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[] values()
    {
        java.lang.Object $r0;
        com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[] $r1;

        $r1 = <com.seattleclouds.modules.podcast.player.PodcastPlayerService$State: com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[] a>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.seattleclouds.modules.podcast.player.PodcastPlayerService$State[]) $r0;

        return $r1;
    }
}
