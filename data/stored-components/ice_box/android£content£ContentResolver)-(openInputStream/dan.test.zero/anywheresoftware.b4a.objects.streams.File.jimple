public class anywheresoftware.b4a.objects.streams.File extends java.lang.Object
{
    public static final java.lang.String ContentDir;
    private static final java.lang.String assetsDir;
    public static java.lang.String virtualAssetsFolder;

    static void <clinit>()
    {
        <anywheresoftware.b4a.objects.streams.File: java.lang.String assetsDir> = "AssetsDir";

        <anywheresoftware.b4a.objects.streams.File: java.lang.String ContentDir> = "ContentDir";

        <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder> = null;

        return;
    }

    public void <init>()
    {
        anywheresoftware.b4a.objects.streams.File $r0;

        $r0 := @this: anywheresoftware.b4a.objects.streams.File;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String Combine(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $r0 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        return $r0;
    }

    public static void Copy(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1, $r2, $r3;
        anywheresoftware.b4a.objects.streams.File$InputStreamWrapper $r4;
        java.lang.Object $r5;
        java.io.InputStream $r6;
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r7;
        java.io.OutputStream $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        staticinvoke <anywheresoftware.b4a.objects.streams.File: boolean Delete(java.lang.String,java.lang.String)>($r2, $r3);

        $r4 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$InputStreamWrapper OpenInput(java.lang.String,java.lang.String)>($r0, $r1);

        $r5 = virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: java.lang.Object getObject()>();

        $r6 = (java.io.InputStream) $r5;

        $r7 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper OpenOutput(java.lang.String,java.lang.String,boolean)>($r2, $r3, 0);

        $r5 = virtualinvoke $r7.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r8 = (java.io.OutputStream) $r5;

        staticinvoke <anywheresoftware.b4a.objects.streams.File: void Copy2(java.io.InputStream,java.io.OutputStream)>($r6, $r8);

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        virtualinvoke $r8.<java.io.OutputStream: void close()>();

        return;
    }

    public static void Copy2(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = newarray (byte)[8192];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 > 0 goto label2;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return;

     label2:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;
    }

    public static boolean Delete(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        return $z0;
    }

    public static boolean Exists(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.io.File $r2;
        android.app.Application $r3;
        android.content.res.AssetManager $r4;
        java.lang.String[] $r5;
        java.util.List $r6;
        java.util.Locale $r7;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("AssetsDir");

        if $z0 != 0 goto label1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        return $z0;

     label1:
        $r0 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        if $r0 == null goto label2;

        $r2 = new java.io.File;

        $r0 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        return $z0;

     label2:
        $r3 = <anywheresoftware.b4a.BA: android.app.Application applicationContext>;

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>("");

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        $r7 = <anywheresoftware.b4a.BA: java.util.Locale cul>;

        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        $i0 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r0);

        if $i0 <= -1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static java.lang.String GetText(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r2;
        anywheresoftware.b4a.objects.streams.File$InputStreamWrapper $r3;
        java.lang.Object $r4;
        java.io.InputStream $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$InputStreamWrapper OpenInput(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        specialinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void <init>()>();

        $r4 = virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: java.lang.Object getObject()>();

        $r5 = (java.io.InputStream) $r4;

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void Initialize(java.io.InputStream)>($r5);

        $r0 = virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.String ReadAll()>();

        return $r0;
    }

    public static boolean IsDirectory(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        return $z0;
    }

    public static long LastModified(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        long $l0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $l0 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        return $l0;
    }

    public static anywheresoftware.b4a.objects.collections.List ListFiles(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.File $r1;
        anywheresoftware.b4a.objects.collections.List $r2;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String[] $r5;
        java.util.List $r6;
        android.app.Application $r7;
        android.content.res.AssetManager $r8;

        $r0 := @parameter0: java.lang.String;

        $r2 = new anywheresoftware.b4a.objects.collections.List;

        specialinvoke $r2.<anywheresoftware.b4a.objects.collections.List: void <init>()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("AssetsDir");

        if $z0 != 0 goto label2;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a folder.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label1:
        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

        if $r5 == null goto label4;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.collections.List: void setObject(java.lang.Object)>($r6);

        return $r2;

     label2:
        $r0 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        if $r0 == null goto label3;

        $r0 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        $r2 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.collections.List ListFiles(java.lang.String)>($r0);

        return $r2;

     label3:
        $r7 = <anywheresoftware.b4a.BA: android.app.Application applicationContext>;

        $r8 = virtualinvoke $r7.<android.app.Application: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r8.<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>("");

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.collections.List: void setObject(java.lang.Object)>($r6);

     label4:
        return $r2;
    }

    public static void MakeDir(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        return;
    }

    public static anywheresoftware.b4a.objects.streams.File$InputStreamWrapper OpenInput(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.streams.File$InputStreamWrapper $r2;
        boolean $z0;
        java.util.zip.GZIPInputStream $r3;
        java.io.FileInputStream $r4;
        java.io.File $r5;
        java.util.Locale $r6;
        android.app.Application $r7;
        android.content.res.AssetManager $r8;
        java.io.InputStream $r9;
        android.content.ContentResolver $r10;
        android.net.Uri $r11;
        java.io.BufferedInputStream $r12;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new anywheresoftware.b4a.objects.streams.File$InputStreamWrapper;

        specialinvoke $r2.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void <init>()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("AssetsDir");

        if $z0 == 0 goto label2;

        $r0 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        if $r0 == null goto label1;

        $r3 = new java.util.zip.GZIPInputStream;

        $r4 = new java.io.FileInputStream;

        $r5 = new java.io.File;

        $r0 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        $r6 = <anywheresoftware.b4a.BA: java.util.Locale cul>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r3.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r4);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void setObject(java.lang.Object)>($r3);

        return $r2;

     label1:
        $r7 = <anywheresoftware.b4a.BA: android.app.Application applicationContext>;

        $r8 = virtualinvoke $r7.<android.app.Application: android.content.res.AssetManager getAssets()>();

        $r6 = <anywheresoftware.b4a.BA: java.util.Locale cul>;

        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r9 = virtualinvoke $r8.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r0);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void setObject(java.lang.Object)>($r9);

        return $r2;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("ContentDir");

        if $z0 == 0 goto label3;

        $r7 = <anywheresoftware.b4a.BA: android.app.Application applicationContext>;

        $r10 = virtualinvoke $r7.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $r9 = virtualinvoke $r10.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r11);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void setObject(java.lang.Object)>($r9);

        return $r2;

     label3:
        $r12 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r12.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 4096);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void setObject(java.lang.Object)>($r12);

        return $r2;
    }

    public static anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper OpenOutput(java.lang.String, java.lang.String, boolean) throws java.io.FileNotFoundException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r2;
        java.io.File $r3;
        java.lang.RuntimeException $r4;
        java.io.BufferedOutputStream $r5;
        java.io.FileOutputStream $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        if $r0 != "AssetsDir" goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("The Assets folder is a read-only folder");

        throw $r4;

     label1:
        $r2 = new anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper;

        specialinvoke $r2.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: void <init>()>();

        $r5 = new java.io.BufferedOutputStream;

        $r6 = new java.io.FileOutputStream;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r3, $z0);

        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6);

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: void setObject(java.lang.Object)>($r5);

        return $r2;
    }

    public static anywheresoftware.b4a.objects.collections.List ReadList(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r2;
        anywheresoftware.b4a.objects.streams.File$InputStreamWrapper $r3;
        java.lang.Object $r4;
        java.io.InputStream $r5;
        anywheresoftware.b4a.objects.collections.List $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$InputStreamWrapper OpenInput(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        specialinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void <init>()>();

        $r4 = virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: java.lang.Object getObject()>();

        $r5 = (java.io.InputStream) $r4;

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void Initialize(java.io.InputStream)>($r5);

        $r6 = virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: anywheresoftware.b4a.objects.collections.List ReadList()>();

        return $r6;
    }

    public static anywheresoftware.b4a.objects.collections.Map ReadMap(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.collections.Map $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.collections.Map ReadMap2(java.lang.String,java.lang.String,anywheresoftware.b4a.objects.collections.Map)>($r0, $r1, null);

        return $r2;
    }

    public static anywheresoftware.b4a.objects.collections.Map ReadMap2(java.lang.String, java.lang.String, anywheresoftware.b4a.objects.collections.Map) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        java.util.Properties $r2;
        anywheresoftware.b4a.objects.collections.Map $r3;
        anywheresoftware.b4a.objects.streams.File$InputStreamWrapper $r4;
        java.lang.Object $r5, $r10;
        java.io.InputStream $r6;
        boolean $z0;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.util.Map$Entry $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 := @parameter2: anywheresoftware.b4a.objects.collections.Map;

        $r4 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$InputStreamWrapper OpenInput(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        $r5 = virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: java.lang.Object getObject()>();

        $r6 = (java.io.InputStream) $r5;

        virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>($r6);

        if $r3 != null goto label1;

        $r3 = new anywheresoftware.b4a.objects.collections.Map;

        specialinvoke $r3.<anywheresoftware.b4a.objects.collections.Map: void <init>()>();

     label1:
        $z0 = virtualinvoke $r3.<anywheresoftware.b4a.objects.collections.Map: boolean IsInitialized()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<anywheresoftware.b4a.objects.collections.Map: void Initialize()>();

     label2:
        $r7 = virtualinvoke $r2.<java.util.Properties: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void Close()>();

        return $r3;

     label4:
        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r3.<anywheresoftware.b4a.objects.collections.Map: java.lang.Object Put(java.lang.Object,java.lang.Object)>($r5, $r10);

        goto label3;
    }

    public static java.lang.String ReadString(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.streams.File$TextReaderWrapper $r2;
        anywheresoftware.b4a.objects.streams.File$InputStreamWrapper $r3;
        java.lang.Object $r4;
        java.io.InputStream $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$InputStreamWrapper OpenInput(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new anywheresoftware.b4a.objects.streams.File$TextReaderWrapper;

        specialinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void <init>()>();

        $r4 = virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: java.lang.Object getObject()>();

        $r5 = (java.io.InputStream) $r4;

        virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: void Initialize(java.io.InputStream)>($r5);

        $r0 = virtualinvoke $r2.<anywheresoftware.b4a.objects.streams.File$TextReaderWrapper: java.lang.String ReadAll()>();

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$InputStreamWrapper: void Close()>();

        return $r0;
    }

    public static long Size(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        long $l0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $l0 = virtualinvoke $r2.<java.io.File: long length()>();

        return $l0;
    }

    public static void WriteList(java.lang.String, java.lang.String, anywheresoftware.b4a.objects.collections.List) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.collections.List $r2;
        anywheresoftware.b4a.objects.streams.File$TextWriterWrapper $r3;
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r4;
        java.lang.Object $r5;
        java.io.OutputStream $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: anywheresoftware.b4a.objects.collections.List;

        $r4 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper OpenOutput(java.lang.String,java.lang.String,boolean)>($r0, $r1, 0);

        $r3 = new anywheresoftware.b4a.objects.streams.File$TextWriterWrapper;

        specialinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void <init>()>();

        $r5 = virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r6 = (java.io.OutputStream) $r5;

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void Initialize(java.io.OutputStream)>($r6);

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void WriteList(anywheresoftware.b4a.objects.collections.List)>($r2);

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void Close()>();

        return;
    }

    public static void WriteMap(java.lang.String, java.lang.String, anywheresoftware.b4a.objects.collections.Map) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        anywheresoftware.b4a.objects.collections.Map $r2;
        java.util.Properties $r3;
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r4;
        java.lang.Object $r5;
        java.util.Map $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.io.OutputStream $r9;
        java.util.Map$Entry $r10;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: anywheresoftware.b4a.objects.collections.Map;

        $r4 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper OpenOutput(java.lang.String,java.lang.String,boolean)>($r0, $r1, 0);

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        $r5 = virtualinvoke $r2.<anywheresoftware.b4a.objects.collections.Map: java.lang.Object getObject()>();

        $r6 = (java.util.Map) $r5;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r5 = virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r9 = (java.io.OutputStream) $r5;

        virtualinvoke $r3.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>($r9, null);

        virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: void Close()>();

        return;

     label2:
        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r0, $r1);

        goto label1;
    }

    public static void WriteString(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1, $r2;
        anywheresoftware.b4a.objects.streams.File$TextWriterWrapper $r3;
        anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper $r4;
        java.lang.Object $r5;
        java.io.OutputStream $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r4 = staticinvoke <anywheresoftware.b4a.objects.streams.File: anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper OpenOutput(java.lang.String,java.lang.String,boolean)>($r0, $r1, 0);

        $r3 = new anywheresoftware.b4a.objects.streams.File$TextWriterWrapper;

        specialinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void <init>()>();

        $r5 = virtualinvoke $r4.<anywheresoftware.b4a.objects.streams.File$OutputStreamWrapper: java.lang.Object getObject()>();

        $r6 = (java.io.OutputStream) $r5;

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void Initialize(java.io.OutputStream)>($r6);

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void Write(java.lang.String)>($r2);

        virtualinvoke $r3.<anywheresoftware.b4a.objects.streams.File$TextWriterWrapper: void Close()>();

        return;
    }

    public static java.lang.String getDirAssets()
    {
        return "AssetsDir";
    }

    public static java.lang.String getDirDefaultExternal()
    {
        java.io.File $r0, $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("/Android/data/");

        $r3 = <anywheresoftware.b4a.BA: java.lang.String packageName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/files/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r3);

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String getDirInternal()
    {
        android.app.Application $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 = <anywheresoftware.b4a.BA: android.app.Application applicationContext>;

        $r1 = virtualinvoke $r0.<android.app.Application: java.io.File getFilesDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getDirInternalCache()
    {
        android.app.Application $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 = <anywheresoftware.b4a.BA: android.app.Application applicationContext>;

        $r1 = virtualinvoke $r0.<android.app.Application: java.io.File getCacheDir()>();

        if $r1 != null goto label1;

        $r2 = staticinvoke <anywheresoftware.b4a.objects.streams.File: java.lang.String getDirInternal()>();

        return $r2;

     label1:
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getDirRootExternal()
    {
        java.io.File $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String toString()>();

        return $r1;
    }

    public static boolean getExternalReadable()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r1 = "mounted";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "mounted_ro";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean getExternalWritable()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r1 = "mounted";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String getUnpackedVirtualAssetFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r3, $r4, $r5;
        java.util.Locale $r1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <anywheresoftware.b4a.BA: java.util.Locale cul>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $r2 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".unpacked");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        $z0 = staticinvoke <anywheresoftware.b4a.objects.streams.File: boolean Exists(java.lang.String,java.lang.String)>($r4, $r3);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <anywheresoftware.b4a.objects.streams.File: java.lang.String getDirAssets()>();

        $r5 = <anywheresoftware.b4a.objects.streams.File: java.lang.String virtualAssetsFolder>;

        staticinvoke <anywheresoftware.b4a.objects.streams.File: void Copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r0, $r5, $r3);

     label1:
        return $r3;
    }
}
