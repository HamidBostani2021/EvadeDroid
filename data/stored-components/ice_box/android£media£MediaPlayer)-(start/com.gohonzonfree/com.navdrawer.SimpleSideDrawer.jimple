public class com.navdrawer.SimpleSideDrawer extends android.widget.FrameLayout
{
    private final android.view.ViewGroup mAboveView;
    private final com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView;
    private int mDurationLeft;
    private int mDurationRight;
    private final android.widget.LinearLayout mLeftBehindBase;
    private android.view.View mLeftBehindView;
    private int mLeftBehindViewWidth;
    private com.navdrawer.SimpleSideDrawer$DragAction mLeftDragAction;
    private android.graphics.Rect mLeftPaddingRect;
    private final android.view.View mOverlay;
    private final android.widget.LinearLayout mRightBehindBase;
    private android.view.View mRightBehindView;
    private int mRightBehindViewWidth;
    private com.navdrawer.SimpleSideDrawer$DragAction mRightDragAction;
    private android.graphics.Rect mRightPaddingRect;
    private android.widget.Scroller mScroller;
    private final android.view.Window mWindow;

    public void <init>(android.app.Activity)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.app.Activity $r1;
        android.view.animation.AccelerateDecelerateInterpolator $r2;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 := @parameter0: android.app.Activity;

        $r2 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        specialinvoke $r0.<com.navdrawer.SimpleSideDrawer: void <init>(android.app.Activity,android.view.animation.Interpolator,int)>($r1, $r2, 180);

        return;
    }

    public void <init>(android.app.Activity, android.view.animation.Interpolator, int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.app.Activity $r1;
        android.view.animation.Interpolator $r2;
        int $i0;
        android.content.Context $r3;
        com.navdrawer.SimpleSideDrawer$1 $r4;
        com.navdrawer.SimpleSideDrawer$2 $r5;
        android.view.Window $r6;
        android.widget.Scroller $r7;
        com.navdrawer.SimpleSideDrawer$BehindLinearLayout $r8;
        android.widget.LinearLayout$LayoutParams $r9;
        android.widget.LinearLayout $r10;
        android.view.View $r11;
        android.widget.FrameLayout $r12;
        android.view.ViewGroup $r13, $r17, $r19;
        android.widget.FrameLayout$LayoutParams $r14;
        com.navdrawer.SimpleSideDrawer$OverlayView $r15;
        com.navdrawer.SimpleSideDrawer$3 $r16;
        android.graphics.drawable.Drawable $r18;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.view.animation.Interpolator;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>();

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context)>($r3);

        $r4 = new com.navdrawer.SimpleSideDrawer$1;

        specialinvoke $r4.<com.navdrawer.SimpleSideDrawer$1: void <init>(com.navdrawer.SimpleSideDrawer)>($r0);

        $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$DragAction mLeftDragAction> = $r4;

        $r5 = new com.navdrawer.SimpleSideDrawer$2;

        specialinvoke $r5.<com.navdrawer.SimpleSideDrawer$2: void <init>(com.navdrawer.SimpleSideDrawer)>($r0);

        $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$DragAction mRightDragAction> = $r5;

        $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r0.<com.navdrawer.SimpleSideDrawer: int mDurationLeft> = 180;

        $r0.<com.navdrawer.SimpleSideDrawer: int mDurationRight> = 180;

        $r6 = virtualinvoke $r1.<android.app.Activity: android.view.Window getWindow()>();

        $r0.<com.navdrawer.SimpleSideDrawer: android.view.Window mWindow> = $r6;

        $r7 = new android.widget.Scroller;

        specialinvoke $r7.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r3, $r2);

        $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller> = $r7;

        $r8 = new com.navdrawer.SimpleSideDrawer$BehindLinearLayout;

        specialinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void <init>(com.navdrawer.SimpleSideDrawer,android.content.Context)>($r0, $r3);

        $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView> = $r8;

        $r8 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        $r9 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r9.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r9);

        $r8 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        virtualinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void setOrientation(int)>(0);

        $r8 = new com.navdrawer.SimpleSideDrawer$BehindLinearLayout;

        specialinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void <init>(com.navdrawer.SimpleSideDrawer,android.content.Context)>($r0, $r3);

        $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase> = $r8;

        $r8 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        $r10 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        $r9 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r9.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -1);

        virtualinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r10, $r9);

        $r8 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        $r11 = new android.view.View;

        specialinvoke $r11.<android.view.View: void <init>(android.content.Context)>($r3);

        $r9 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r9.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(0, -1, 1.0F);

        virtualinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r11, $r9);

        $r8 = new com.navdrawer.SimpleSideDrawer$BehindLinearLayout;

        specialinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void <init>(com.navdrawer.SimpleSideDrawer,android.content.Context)>($r0, $r3);

        $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase> = $r8;

        $r8 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        $r10 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        $r9 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r9.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -1);

        virtualinvoke $r8.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r10, $r9);

        $r8 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void addView(android.view.View)>($r8);

        $r12 = new android.widget.FrameLayout;

        specialinvoke $r12.<android.widget.FrameLayout: void <init>(android.content.Context)>($r3);

        $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView> = $r12;

        $r13 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $r14 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r14.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r13.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r14);

        $r15 = new com.navdrawer.SimpleSideDrawer$OverlayView;

        $r3 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: android.content.Context getContext()>();

        specialinvoke $r15.<com.navdrawer.SimpleSideDrawer$OverlayView: void <init>(com.navdrawer.SimpleSideDrawer,android.content.Context)>($r0, $r3);

        $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay> = $r15;

        $r11 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        $r14 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r14.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, -1, 80);

        virtualinvoke $r11.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r14);

        $r11 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        virtualinvoke $r11.<android.view.View: void setEnabled(boolean)>(1);

        $r11 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        virtualinvoke $r11.<android.view.View: void setVisibility(int)>(8);

        $r11 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        $r16 = new com.navdrawer.SimpleSideDrawer$3;

        specialinvoke $r16.<com.navdrawer.SimpleSideDrawer$3: void <init>(com.navdrawer.SimpleSideDrawer)>($r0);

        virtualinvoke $r11.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r16);

        $r6 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.Window mWindow>;

        $r11 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        $r13 = (android.view.ViewGroup) $r11;

        $r11 = virtualinvoke $r13.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $r17 = (android.view.ViewGroup) $r11;

        virtualinvoke $r13.<android.view.ViewGroup: void removeView(android.view.View)>($r17);

        $r18 = virtualinvoke $r13.<android.view.ViewGroup: android.graphics.drawable.Drawable getBackground()>();

        virtualinvoke $r17.<android.view.ViewGroup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r18);

        $r19 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        virtualinvoke $r19.<android.view.ViewGroup: void addView(android.view.View)>($r17);

        $r17 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $r11 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        virtualinvoke $r17.<android.view.ViewGroup: void addView(android.view.View)>($r11);

        virtualinvoke $r13.<android.view.ViewGroup: void addView(android.view.View)>($r0);

        $r13 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void addView(android.view.View)>($r13);

        return;
    }

    static com.navdrawer.SimpleSideDrawer$DragAction access$0(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        com.navdrawer.SimpleSideDrawer$DragAction r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$DragAction mLeftDragAction>;

        return r1;
    }

    static android.view.ViewGroup access$1(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.view.ViewGroup r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        return r1;
    }

    static android.widget.LinearLayout access$10(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.LinearLayout r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        return r1;
    }

    static int access$2(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int i0;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mLeftBehindViewWidth>;

        return i0;
    }

    static android.widget.Scroller access$3(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.Scroller r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        return r1;
    }

    static int access$4(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int i0;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mDurationLeft>;

        return i0;
    }

    static com.navdrawer.SimpleSideDrawer$DragAction access$5(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        com.navdrawer.SimpleSideDrawer$DragAction r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$DragAction mRightDragAction>;

        return r1;
    }

    static int access$6(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int i0;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mRightBehindViewWidth>;

        return i0;
    }

    static int access$7(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int i0;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mDurationRight>;

        return i0;
    }

    static com.navdrawer.SimpleSideDrawer$BehindLinearLayout access$8(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        com.navdrawer.SimpleSideDrawer$BehindLinearLayout r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        return r1;
    }

    static android.widget.LinearLayout access$9(com.navdrawer.SimpleSideDrawer)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.LinearLayout r1;

        $r0 := @parameter0: com.navdrawer.SimpleSideDrawer;

        r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        return r1;
    }

    private boolean isLeftSideOpened()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.LinearLayout $r1;
        int $i0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getVisibility()>();

        if $i0 != 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isRightSideOpened()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.LinearLayout $r1;
        int $i0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getVisibility()>();

        if $i0 != 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void close()
    {
        com.navdrawer.SimpleSideDrawer $r0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void closeLeftSide()>();

        return;
    }

    public void closeLeftSide()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0, $i1, $i2;
        android.widget.Scroller $r1;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mLeftBehindViewWidth>;

        $i0 = neg $i0;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $i1 = neg $i0;

        $i2 = $r0.<com.navdrawer.SimpleSideDrawer: int mDurationLeft>;

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i0, 0, $i1, 0, $i2);

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void invalidate()>();

        return;
    }

    public void closeRightSide()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.Scroller $r1;
        int $i0, $i1, $i2;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mRightBehindViewWidth>;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $i1 = neg $i0;

        $i2 = $r0.<com.navdrawer.SimpleSideDrawer: int mDurationRight>;

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i0, 0, $i1, 0, $i2);

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void invalidate()>();

        return;
    }

    public void computeScroll()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.widget.Scroller $r1;
        boolean $z0;
        android.view.ViewGroup $r2;
        int $i0, $i1;
        android.view.View $r3;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        virtualinvoke $r2.<android.view.ViewGroup: void scrollTo(int,int)>($i0, $i1);

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void invalidate()>();

        return;

     label1:
        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getScrollX()>();

        if $i0 != 0 goto label2;

        $r3 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        return;

     label2:
        $r3 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mOverlay>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        return;
    }

    public android.view.View getLeftBehindView()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.view.View $r1;
        android.widget.LinearLayout $r2;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        $r1 = virtualinvoke $r2.<android.widget.LinearLayout: android.view.View getChildAt(int)>(0);

        return $r1;
    }

    public android.view.View getRightBehindView()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.view.View $r1;
        android.widget.LinearLayout $r2;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        $r1 = virtualinvoke $r2.<android.widget.LinearLayout: android.view.View getChildAt(int)>(0);

        return $r1;
    }

    public boolean isClosed()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0;
        android.view.ViewGroup $r1;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getScrollX()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onMeasure(int, int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0, $i1;
        android.graphics.Rect $r1;
        android.widget.LinearLayout $r2;
        java.io.PrintStream $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        android.view.Window $r6;
        android.view.View $r7;
        android.view.ViewGroup $r8;
        com.navdrawer.SimpleSideDrawer$BehindLinearLayout $r9;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        $i0 = virtualinvoke $r2.<android.widget.LinearLayout: int getMeasuredWidth()>();

        $r0.<com.navdrawer.SimpleSideDrawer: int mLeftBehindViewWidth> = $i0;

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        $i0 = virtualinvoke $r2.<android.widget.LinearLayout: int getMeasuredWidth()>();

        $r0.<com.navdrawer.SimpleSideDrawer: int mRightBehindViewWidth> = $i0;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = newarray (java.lang.Object)[2];

        $i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mLeftBehindViewWidth>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mRightBehindViewWidth>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[1] = $r5;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("[SLIDE] onMeasure: %d, %d\n", $r4);

        $r6 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.Window mWindow>;

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        $r8 = (android.view.ViewGroup) $r7;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        virtualinvoke $r8.<android.view.ViewGroup: void getWindowVisibleDisplayFrame(android.graphics.Rect)>($r1);

        $r9 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$BehindLinearLayout mBehindView>;

        virtualinvoke $r9.<com.navdrawer.SimpleSideDrawer$BehindLinearLayout: void fitDisplay(android.graphics.Rect)>($r1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        com.navdrawer.SimpleSideDrawer$DragAction $r2;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke $r0.<com.navdrawer.SimpleSideDrawer: boolean isLeftSideOpened()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$DragAction mLeftDragAction>;

        $z0 = virtualinvoke $r2.<com.navdrawer.SimpleSideDrawer$DragAction: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<com.navdrawer.SimpleSideDrawer: boolean isRightSideOpened()>();

        if $z0 == 0 goto label2;

        $r2 = $r0.<com.navdrawer.SimpleSideDrawer: com.navdrawer.SimpleSideDrawer$DragAction mRightDragAction>;

        $z0 = virtualinvoke $r2.<com.navdrawer.SimpleSideDrawer$DragAction: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label2:
        return 1;
    }

    public void open()
    {
        com.navdrawer.SimpleSideDrawer $r0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void openLeftSide()>();

        return;
    }

    public void openLeftSide()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        java.io.PrintStream $r1;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        android.widget.LinearLayout $r4;
        android.view.ViewGroup $r5;
        android.widget.Scroller $r6;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mLeftBehindViewWidth>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("[SLIDE] openLeftSide: %d\n", $r2);

        $r4 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r4 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r5 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $i0 = virtualinvoke $r5.<android.view.ViewGroup: int getScrollX()>();

        $r6 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $i1 = $r0.<com.navdrawer.SimpleSideDrawer: int mLeftBehindViewWidth>;

        $i1 = neg $i1;

        $i2 = $r0.<com.navdrawer.SimpleSideDrawer: int mDurationLeft>;

        virtualinvoke $r6.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i0, 0, $i1, 0, $i2);

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void invalidate()>();

        return;
    }

    public void openRightSide()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        java.io.PrintStream $r1;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        android.widget.LinearLayout $r4;
        android.view.ViewGroup $r5;
        android.widget.Scroller $r6;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $i0 = $r0.<com.navdrawer.SimpleSideDrawer: int mRightBehindViewWidth>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("[SLIDE] openRightSide: %d\n", $r2);

        $r4 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r4 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r5 = $r0.<com.navdrawer.SimpleSideDrawer: android.view.ViewGroup mAboveView>;

        $i0 = virtualinvoke $r5.<android.view.ViewGroup: int getScrollX()>();

        $r6 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller>;

        $i1 = $r0.<com.navdrawer.SimpleSideDrawer: int mRightBehindViewWidth>;

        $i2 = $r0.<com.navdrawer.SimpleSideDrawer: int mDurationRight>;

        virtualinvoke $r6.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i0, 0, $i1, 0, $i2);

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void invalidate()>();

        return;
    }

    public void setAnimationDuration(int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void setAnimationDurationLeft(int)>($i0);

        return;
    }

    public void setAnimationDurationLeft(int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        $r0.<com.navdrawer.SimpleSideDrawer: int mDurationLeft> = $i0;

        return;
    }

    public void setAnimationDurationRight(int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        $r0.<com.navdrawer.SimpleSideDrawer: int mDurationRight> = $i0;

        return;
    }

    public android.view.View setBehindContentView(int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: android.view.View setLeftBehindContentView(int)>($i0);

        return $r1;
    }

    public android.view.View setLeftBehindContentView(int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.LayoutInflater $r3;
        android.widget.LinearLayout $r4;
        android.view.View $r5;
        android.graphics.Rect $r6;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r3 = (android.view.LayoutInflater) $r2;

        $r4 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mLeftBehindBase>;

        $r5 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903049, $r4);

        $r6 = new android.graphics.Rect;

        $i0 = virtualinvoke $r5.<android.view.View: int getPaddingLeft()>();

        $i1 = virtualinvoke $r5.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke $r5.<android.view.View: int getPaddingRight()>();

        $i3 = virtualinvoke $r5.<android.view.View: int getPaddingBottom()>();

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<com.navdrawer.SimpleSideDrawer: android.graphics.Rect mLeftPaddingRect> = $r6;

        $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mLeftBehindView> = $r5;

        return $r5;
    }

    public android.view.View setRightBehindContentView(int)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.LayoutInflater $r3;
        android.widget.LinearLayout $r4;
        android.view.View $r5;
        android.graphics.Rect $r6;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r3 = (android.view.LayoutInflater) $r2;

        $r4 = $r0.<com.navdrawer.SimpleSideDrawer: android.widget.LinearLayout mRightBehindBase>;

        $r5 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, $r4);

        $r6 = new android.graphics.Rect;

        $i0 = virtualinvoke $r5.<android.view.View: int getPaddingLeft()>();

        $i1 = virtualinvoke $r5.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke $r5.<android.view.View: int getPaddingRight()>();

        $i3 = virtualinvoke $r5.<android.view.View: int getPaddingBottom()>();

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<com.navdrawer.SimpleSideDrawer: android.graphics.Rect mRightPaddingRect> = $r6;

        $r0.<com.navdrawer.SimpleSideDrawer: android.view.View mRightBehindView> = $r5;

        return $r5;
    }

    public void setScrollInterpolator(android.view.animation.Interpolator)
    {
        com.navdrawer.SimpleSideDrawer $r0;
        android.view.animation.Interpolator $r1;
        android.widget.Scroller $r2;
        android.content.Context $r3;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $r1 := @parameter0: android.view.animation.Interpolator;

        $r2 = new android.widget.Scroller;

        $r3 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r3, $r1);

        $r0.<com.navdrawer.SimpleSideDrawer: android.widget.Scroller mScroller> = $r2;

        return;
    }

    public void toggleDrawer()
    {
        com.navdrawer.SimpleSideDrawer $r0;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void toggleLeftDrawer()>();

        return;
    }

    public void toggleLeftDrawer()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        boolean $z0;
        java.io.PrintStream $r1;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $z0 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: boolean isClosed()>();

        if $z0 == 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("[SLIDE] toggleLeft: open");

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void openLeftSide()>();

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("[SLIDE] toggleLeft: close");

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void closeLeftSide()>();

        return;
    }

    public void toggleRightDrawer()
    {
        com.navdrawer.SimpleSideDrawer $r0;
        boolean $z0;
        java.io.PrintStream $r1;

        $r0 := @this: com.navdrawer.SimpleSideDrawer;

        $z0 = virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: boolean isClosed()>();

        if $z0 == 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("[SLIDE] toggleRight: open");

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void openRightSide()>();

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("[SLIDE] toggleRight: close");

        virtualinvoke $r0.<com.navdrawer.SimpleSideDrawer: void closeRightSide()>();

        return;
    }
}
