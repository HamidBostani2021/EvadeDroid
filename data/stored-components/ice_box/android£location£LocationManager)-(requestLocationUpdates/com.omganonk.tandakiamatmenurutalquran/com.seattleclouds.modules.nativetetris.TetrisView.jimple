public class com.seattleclouds.modules.nativetetris.TetrisView extends android.view.SurfaceView implements android.view.SurfaceHolder$Callback
{
    private static final java.lang.String a;
    private com.seattleclouds.modules.nativetetris.v b;
    private java.lang.String c;
    private android.widget.TextView d;
    private android.widget.TextView e;
    private android.widget.TextView f;
    private android.widget.TextView g;
    private android.widget.ImageButton h;
    private java.util.Timer i;
    private android.graphics.Rect j;
    private android.graphics.Rect k;
    private android.graphics.Rect l;
    private android.graphics.Rect m;
    private android.graphics.Rect n;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lcom/seattleclouds/modules/nativetetris/TetrisView;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.seattleclouds.modules.nativetetris.v $r3;
        com.seattleclouds.modules.nativetetris.s $r4;
        android.view.SurfaceHolder $r5;
        com.seattleclouds.modules.nativetetris.t $r6;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect j> = null;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect k> = null;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect l> = null;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect m> = null;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect n> = null;

        $r5 = virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r5.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r0);

        $r3 = new com.seattleclouds.modules.nativetetris.v;

        $r4 = new com.seattleclouds.modules.nativetetris.s;

        specialinvoke $r4.<com.seattleclouds.modules.nativetetris.s: void <init>(com.seattleclouds.modules.nativetetris.TetrisView)>($r0);

        specialinvoke $r3.<com.seattleclouds.modules.nativetetris.v: void <init>(com.seattleclouds.modules.nativetetris.TetrisView,android.view.SurfaceHolder,android.content.Context,android.os.Handler)>($r0, $r5, $r1, $r4);

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b> = $r3;

        $r6 = new com.seattleclouds.modules.nativetetris.t;

        specialinvoke $r6.<com.seattleclouds.modules.nativetetris.t: void <init>(com.seattleclouds.modules.nativetetris.TetrisView)>($r0);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.TetrisView: void setOnTouchListener(android.view.View$OnTouchListener)>($r6);

        virtualinvoke $r0.<com.seattleclouds.modules.nativetetris.TetrisView: void setFocusable(boolean)>(1);

        return;
    }

    static android.graphics.Rect a(com.seattleclouds.modules.nativetetris.TetrisView, android.graphics.Rect)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.graphics.Rect;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect j> = $r1;

        return $r1;
    }

    static java.lang.String a()
    {
        java.lang.String r0;

        r0 = <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a>;

        return r0;
    }

    static java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        java.util.Timer r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer i>;

        return r1;
    }

    static java.util.Timer a(com.seattleclouds.modules.nativetetris.TetrisView, java.util.Timer)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        java.util.Timer $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: java.util.Timer;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: java.util.Timer i> = $r1;

        return $r1;
    }

    private void a(android.graphics.Canvas, android.graphics.Rect, int, java.lang.String, android.graphics.Paint$Style, int, int)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        android.graphics.Paint$Style $r4;
        android.graphics.Paint $r5;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint$FontMetrics $r6;
        android.graphics.Paint$Align $r7;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: android.graphics.Paint$Style;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>($i2);

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $f0 = (float) $i1;

        virtualinvoke $r5.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r2, $r5);

        $r6 = new android.graphics.Paint$FontMetrics;

        specialinvoke $r6.<android.graphics.Paint$FontMetrics: void <init>()>();

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        $r7 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r5.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r7);

        virtualinvoke $r5.<android.graphics.Paint: float getFontMetrics(android.graphics.Paint$FontMetrics)>($r6);

        virtualinvoke $r5.<android.graphics.Paint: void setTextSize(float)>(50.0F);

        $i0 = $r2.<android.graphics.Rect: int left>;

        $f0 = (float) $i0;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f2 = virtualinvoke $r5.<android.graphics.Paint: float measureText(java.lang.String)>($r3);

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 + $f1;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i0;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        $f2 = (float) $i0;

        $f3 = virtualinvoke $r5.<android.graphics.Paint: float getTextSize()>();

        $f2 = $f2 - $f3;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r3, $f0, $f1, $r5);

        return;
    }

    private void a(android.view.MotionEvent)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r2;
        float $f0;
        boolean $z0;
        com.seattleclouds.modules.nativetetris.v $r3;
        java.lang.String $r4, $r6;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect m>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $i3 = (int) $f0;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i2, $i3);

        if $z0 == 0 goto label3;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.v: void e()>();

     label2:
        $r4 = <com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String a>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pointer ");

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": (");

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect k>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $i3 = (int) $f0;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i2, $i3);

        if $z0 == 0 goto label4;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.v: void b()>();

        goto label2;

     label4:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect l>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $i3 = (int) $f0;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i2, $i3);

        if $z0 == 0 goto label5;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.v: void c()>();

        goto label2;

     label5:
        $r2 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect j>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $i3 = (int) $f0;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i2, $i3);

        if $z0 == 0 goto label2;

        $r3 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        virtualinvoke $r3.<com.seattleclouds.modules.nativetetris.v: void d()>();

        goto label2;

     label6:
        return;
    }

    static void a(com.seattleclouds.modules.nativetetris.TetrisView, android.graphics.Canvas, android.graphics.Rect, int, java.lang.String, android.graphics.Paint$Style, int, int)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        android.graphics.Paint$Style $r4;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.graphics.Canvas;

        $r2 := @parameter2: android.graphics.Rect;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: android.graphics.Paint$Style;

        $i1 := @parameter6: int;

        $i2 := @parameter7: int;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.TetrisView: void a(android.graphics.Canvas,android.graphics.Rect,int,java.lang.String,android.graphics.Paint$Style,int,int)>($r1, $r2, $i0, $r3, $r4, $i1, $i2);

        return;
    }

    static void a(com.seattleclouds.modules.nativetetris.TetrisView, android.view.MotionEvent)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.view.MotionEvent $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.view.MotionEvent;

        specialinvoke $r0.<com.seattleclouds.modules.nativetetris.TetrisView: void a(android.view.MotionEvent)>($r1);

        return;
    }

    static android.graphics.Rect b(com.seattleclouds.modules.nativetetris.TetrisView, android.graphics.Rect)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.graphics.Rect;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect k> = $r1;

        return $r1;
    }

    static com.seattleclouds.modules.nativetetris.v b(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        com.seattleclouds.modules.nativetetris.v r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        return r1;
    }

    static android.graphics.Rect c(com.seattleclouds.modules.nativetetris.TetrisView, android.graphics.Rect)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.graphics.Rect;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect l> = $r1;

        return $r1;
    }

    static java.lang.String c(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String c>;

        return r1;
    }

    static android.graphics.Rect d(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect j>;

        return r1;
    }

    static android.graphics.Rect d(com.seattleclouds.modules.nativetetris.TetrisView, android.graphics.Rect)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.graphics.Rect;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect m> = $r1;

        return $r1;
    }

    static android.graphics.Rect e(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect k>;

        return r1;
    }

    static android.graphics.Rect e(com.seattleclouds.modules.nativetetris.TetrisView, android.graphics.Rect)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect $r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter1: android.graphics.Rect;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect n> = $r1;

        return $r1;
    }

    static android.graphics.Rect f(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect l>;

        return r1;
    }

    static android.graphics.Rect g(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect m>;

        return r1;
    }

    static android.graphics.Rect h(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.graphics.Rect r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.graphics.Rect n>;

        return r1;
    }

    static android.widget.TextView i(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView d>;

        return r1;
    }

    static android.widget.ImageButton j(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.ImageButton r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.ImageButton h>;

        return r1;
    }

    static android.widget.TextView k(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView e>;

        return r1;
    }

    static android.widget.TextView l(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView g>;

        return r1;
    }

    static android.widget.TextView m(com.seattleclouds.modules.nativetetris.TetrisView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView f>;

        return r1;
    }

    public com.seattleclouds.modules.nativetetris.v getTetrisHolder()
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        com.seattleclouds.modules.nativetetris.v r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        return r1;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        boolean $z0;
        com.seattleclouds.modules.nativetetris.v $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        virtualinvoke $r1.<com.seattleclouds.modules.nativetetris.v: void a()>();

     label1:
        return;
    }

    public void setBestScoreTextView(android.widget.TextView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.widget.TextView;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView g> = $r1;

        return;
    }

    public void setLevelTextView(android.widget.TextView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.widget.TextView;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView f> = $r1;

        return;
    }

    public void setPageID(java.lang.String)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        java.lang.String $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: java.lang.String c> = $r1;

        return;
    }

    public void setScoreTextView(android.widget.TextView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.widget.TextView;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView e> = $r1;

        return;
    }

    public void setStartPauseButton(android.widget.ImageButton)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.ImageButton $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.widget.ImageButton;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.ImageButton h> = $r1;

        return;
    }

    public void setStatusTextView(android.widget.TextView)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.widget.TextView $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.widget.TextView;

        $r0.<com.seattleclouds.modules.nativetetris.TetrisView: android.widget.TextView d> = $r1;

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.view.SurfaceHolder $r1;
        int $i0, $i1, $i2;
        com.seattleclouds.modules.nativetetris.v $r2;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<com.seattleclouds.modules.nativetetris.TetrisView: com.seattleclouds.modules.nativetetris.v b>;

        virtualinvoke $r2.<com.seattleclouds.modules.nativetetris.v: void a(int,int)>($i1, $i2);

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.view.SurfaceHolder $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.view.SurfaceHolder;

        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        com.seattleclouds.modules.nativetetris.TetrisView $r0;
        android.view.SurfaceHolder $r1;

        $r0 := @this: com.seattleclouds.modules.nativetetris.TetrisView;

        $r1 := @parameter0: android.view.SurfaceHolder;

        return;
    }
}
